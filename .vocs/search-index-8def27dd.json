{"documentCount":300,"nextId":300,"documentIds":{"0":"docs/pages/core-concepts.mdx#core-concepts","1":"docs/pages/core-concepts.mdx#mcp-protocol-fundamentals","2":"docs/pages/core-concepts.mdx#resources","3":"docs/pages/core-concepts.mdx#tools","4":"docs/pages/core-concepts.mdx#prompts","5":"docs/pages/core-concepts.mdx#transports","6":"docs/pages/core-concepts.mdx#sdk-architecture","7":"docs/pages/core-concepts.mdx#server-vs-client","8":"docs/pages/core-concepts.mdx#transport-layer","9":"docs/pages/core-concepts.mdx#session-management","10":"docs/pages/getting-started.mdx#getting-started","11":"docs/pages/getting-started.mdx#introduction","12":"docs/pages/getting-started.mdx#what-is-mcp","13":"docs/pages/getting-started.mdx#why-mcp-go","14":"docs/pages/getting-started.mdx#key-features","15":"docs/pages/getting-started.mdx#installation","16":"docs/pages/getting-started.mdx#your-first-mcp-server","17":"docs/pages/getting-started.mdx#running-your-server","18":"docs/pages/getting-started.mdx#whats-next","19":"docs/pages/getting-started.mdx#key-concepts","20":"docs/pages/getting-started.mdx#tools","21":"docs/pages/getting-started.mdx#resources","22":"docs/pages/getting-started.mdx#server-options","23":"docs/pages/getting-started.mdx#transport-options","24":"docs/pages/getting-started.mdx#need-help","25":"docs/pages/quick-start.mdx#quick-start","26":"docs/pages/quick-start.mdx#hello-world-server","27":"docs/pages/quick-start.mdx#running-your-first-server","28":"docs/pages/quick-start.mdx#testing-with-claude-desktop","29":"docs/pages/quick-start.mdx#testing-with-mcp-inspector","30":"docs/pages/quick-start.mdx#basic-client-example","31":"docs/pages/quick-start.mdx#streamablehttp-client-example","32":"docs/pages/quick-start.mdx#whats-next","33":"docs/pages/quick-start.mdx#common-issues","34":"docs/pages/quick-start.mdx#server-wont-start","35":"docs/pages/quick-start.mdx#client-connection-failed","36":"docs/pages/quick-start.mdx#tool-calls-failing","37":"docs/pages/clients/basics.mdx#client-basics","38":"docs/pages/clients/basics.mdx#creating-clients","39":"docs/pages/clients/basics.mdx#client-constructor-patterns","40":"docs/pages/clients/basics.mdx#stdio-client-creation","41":"docs/pages/clients/basics.mdx#streamablehttp-client-creation","42":"docs/pages/clients/basics.mdx#sse-client-creation","43":"docs/pages/clients/basics.mdx#client-lifecycle","44":"docs/pages/clients/basics.mdx#lifecycle-stages","45":"docs/pages/clients/basics.mdx#complete-lifecycle-example","46":"docs/pages/clients/basics.mdx#initialization-process","47":"docs/pages/clients/basics.mdx#graceful-shutdown","48":"docs/pages/clients/basics.mdx#error-handling","49":"docs/pages/clients/basics.mdx#error-types","50":"docs/pages/clients/basics.mdx#comprehensive-error-handling","51":"docs/pages/clients/basics.mdx#retry-logic-with-exponential-backoff","52":"docs/pages/clients/basics.mdx#context-and-timeout-management","53":"docs/pages/clients/basics.mdx#connection-monitoring","54":"docs/pages/clients/basics.mdx#health-checks","55":"docs/pages/clients/basics.mdx#connection-recovery","56":"docs/pages/clients/basics.mdx#next-steps","57":"docs/pages/clients/#building-mcp-clients","58":"docs/pages/clients/#overview","59":"docs/pages/clients/#what-youll-learn","60":"docs/pages/clients/#quick-example","61":"docs/pages/clients/#client-types-by-transport","62":"docs/pages/clients/#stdio-client","63":"docs/pages/clients/#streamablehttp-client","64":"docs/pages/clients/#sse-client","65":"docs/pages/clients/#in-process-client","66":"docs/pages/clients/#common-client-patterns","67":"docs/pages/clients/#connection-management","68":"docs/pages/clients/#error-handling","69":"docs/pages/clients/#retry-logic","70":"docs/pages/clients/#integration-patterns","71":"docs/pages/clients/#llm-application-integration","72":"docs/pages/clients/#multi-server-client","73":"docs/pages/clients/#next-steps","74":"docs/pages/clients/operations.mdx#client-operations","75":"docs/pages/clients/operations.mdx#listing-resources","76":"docs/pages/clients/operations.mdx#basic-resource-listing","77":"docs/pages/clients/operations.mdx#filtered-resource-listing","78":"docs/pages/clients/operations.mdx#reading-resources","79":"docs/pages/clients/operations.mdx#basic-resource-reading","80":"docs/pages/clients/operations.mdx#typed-resource-reading","81":"docs/pages/clients/operations.mdx#resource-caching","82":"docs/pages/clients/operations.mdx#calling-tools","83":"docs/pages/clients/operations.mdx#basic-tool-calling","84":"docs/pages/clients/operations.mdx#tool-schema-validation","85":"docs/pages/clients/operations.mdx#batch-tool-operations","86":"docs/pages/clients/operations.mdx#using-prompts","87":"docs/pages/clients/operations.mdx#basic-prompt-usage","88":"docs/pages/clients/operations.mdx#prompt-template-processing","89":"docs/pages/clients/operations.mdx#dynamic-prompt-generation","90":"docs/pages/clients/operations.mdx#subscriptions","91":"docs/pages/clients/operations.mdx#basic-subscription-handling","92":"docs/pages/clients/operations.mdx#advanced-subscription-management","93":"docs/pages/clients/operations.mdx#next-steps","94":"docs/pages/clients/transports.mdx#client-transports","95":"docs/pages/clients/transports.mdx#transport-overview","96":"docs/pages/clients/transports.mdx#stdio-client","97":"docs/pages/clients/transports.mdx#basic-stdio-client","98":"docs/pages/clients/transports.mdx#stdio-error-handling","99":"docs/pages/clients/transports.mdx#stdio-process-management","100":"docs/pages/clients/transports.mdx#streamablehttp-client","101":"docs/pages/clients/transports.mdx#basic-streamablehttp-client","102":"docs/pages/clients/transports.mdx#streamablehttp-client-with-custom-configuration","103":"docs/pages/clients/transports.mdx#streamablehttp-authentication","104":"docs/pages/clients/transports.mdx#streamablehttp-connection-pooling","105":"docs/pages/clients/transports.mdx#sse-client","106":"docs/pages/clients/transports.mdx#basic-sse-client","107":"docs/pages/clients/transports.mdx#sse-client-with-reconnection","108":"docs/pages/clients/transports.mdx#sse-event-handling","109":"docs/pages/clients/transports.mdx#in-process-client","110":"docs/pages/clients/transports.mdx#basic-in-process-client","111":"docs/pages/clients/transports.mdx#in-process-client-for-testing","112":"docs/pages/clients/transports.mdx#transport-selection","113":"docs/pages/clients/transports.mdx#decision-matrix","114":"docs/pages/clients/transports.mdx#multi-transport-client-factory","115":"docs/pages/servers/advanced.mdx#advanced-server-features","116":"docs/pages/servers/advanced.mdx#typed-tools","117":"docs/pages/servers/advanced.mdx#basic-typed-tool","118":"docs/pages/servers/advanced.mdx#complex-typed-tool","119":"docs/pages/servers/advanced.mdx#custom-validation","120":"docs/pages/servers/advanced.mdx#session-management","121":"docs/pages/servers/advanced.mdx#per-session-state","122":"docs/pages/servers/advanced.mdx#session-aware-tools","123":"docs/pages/servers/advanced.mdx#middleware","124":"docs/pages/servers/advanced.mdx#logging-middleware","125":"docs/pages/servers/advanced.mdx#rate-limiting-middleware","126":"docs/pages/servers/advanced.mdx#authentication-middleware","127":"docs/pages/servers/advanced.mdx#hooks","128":"docs/pages/servers/advanced.mdx#comprehensive-hooks","129":"docs/pages/servers/advanced.mdx#custom-business-logic-hooks","130":"docs/pages/servers/advanced.mdx#tool-filtering","131":"docs/pages/servers/advanced.mdx#permission-based-filtering","132":"docs/pages/servers/advanced.mdx#context-based-filtering","133":"docs/pages/servers/advanced.mdx#notifications","134":"docs/pages/servers/advanced.mdx#custom-notifications","135":"docs/pages/servers/advanced.mdx#custom-notifications-1","136":"docs/pages/servers/advanced.mdx#production-configuration","137":"docs/pages/servers/advanced.mdx#complete-production-server","138":"docs/pages/servers/advanced.mdx#next-steps","139":"docs/pages/servers/basics.mdx#server-basics","140":"docs/pages/servers/basics.mdx#creating-a-server","141":"docs/pages/servers/basics.mdx#basic-server-creation","142":"docs/pages/servers/basics.mdx#server-with-options","143":"docs/pages/servers/basics.mdx#server-configuration","144":"docs/pages/servers/basics.mdx#capabilities","145":"docs/pages/servers/basics.mdx#recovery-middleware","146":"docs/pages/servers/basics.mdx#custom-metadata","147":"docs/pages/servers/basics.mdx#starting-servers","148":"docs/pages/servers/basics.mdx#stdio-transport","149":"docs/pages/servers/basics.mdx#http-transport","150":"docs/pages/servers/basics.mdx#server-sent-events-sse","151":"docs/pages/servers/basics.mdx#custom-transport-options","152":"docs/pages/servers/basics.mdx#environment-based-configuration","153":"docs/pages/servers/basics.mdx#server-lifecycle","154":"docs/pages/servers/basics.mdx#error-handling","155":"docs/pages/servers/basics.mdx#next-steps","156":"docs/pages/servers/#building-mcp-servers","157":"docs/pages/servers/#overview","158":"docs/pages/servers/#what-youll-learn","159":"docs/pages/servers/#quick-example","160":"docs/pages/servers/#next-steps","161":"docs/pages/servers/prompts.mdx#implementing-prompts","162":"docs/pages/servers/prompts.mdx#prompt-fundamentals","163":"docs/pages/servers/prompts.mdx#basic-prompt-structure","164":"docs/pages/servers/prompts.mdx#prompt-templates","165":"docs/pages/servers/prompts.mdx#basic-code-review-prompt","166":"docs/pages/servers/prompts.mdx#data-analysis-prompt","167":"docs/pages/servers/prompts.mdx#prompt-arguments","168":"docs/pages/servers/prompts.mdx#flexible-parameter-handling","169":"docs/pages/servers/prompts.mdx#message-types","170":"docs/pages/servers/prompts.mdx#multi-message-conversations","171":"docs/pages/servers/prompts.mdx#system-and-user-roles","172":"docs/pages/servers/prompts.mdx#embedded-resources","173":"docs/pages/servers/prompts.mdx#including-resource-data","174":"docs/pages/servers/prompts.mdx#dynamic-resource-integration","175":"docs/pages/servers/prompts.mdx#advanced-prompt-patterns","176":"docs/pages/servers/prompts.mdx#conditional-prompts","177":"docs/pages/servers/prompts.mdx#template-based-prompts","178":"docs/pages/servers/prompts.mdx#next-steps","179":"docs/pages/servers/resources.mdx#implementing-resources","180":"docs/pages/servers/resources.mdx#resource-fundamentals","181":"docs/pages/servers/resources.mdx#basic-resource-structure","182":"docs/pages/servers/resources.mdx#static-resources","183":"docs/pages/servers/resources.mdx#file-based-resources","184":"docs/pages/servers/resources.mdx#configuration-resources","185":"docs/pages/servers/resources.mdx#dynamic-resources","186":"docs/pages/servers/resources.mdx#uri-templates","187":"docs/pages/servers/resources.mdx#database-resources","188":"docs/pages/servers/resources.mdx#api-resources","189":"docs/pages/servers/resources.mdx#content-types","190":"docs/pages/servers/resources.mdx#text-content","191":"docs/pages/servers/resources.mdx#json-content","192":"docs/pages/servers/resources.mdx#binary-content","193":"docs/pages/servers/resources.mdx#multiple-content-types","194":"docs/pages/servers/resources.mdx#error-handling","195":"docs/pages/servers/resources.mdx#common-error-patterns","196":"docs/pages/servers/resources.mdx#timeout-handling","197":"docs/pages/servers/resources.mdx#resource-listing","198":"docs/pages/servers/resources.mdx#caching-resources","199":"docs/pages/servers/resources.mdx#next-steps","200":"docs/pages/servers/tools.mdx#implementing-tools","201":"docs/pages/servers/tools.mdx#tool-fundamentals","202":"docs/pages/servers/tools.mdx#basic-tool-structure","203":"docs/pages/servers/tools.mdx#tool-definition","204":"docs/pages/servers/tools.mdx#parameter-types","205":"docs/pages/servers/tools.mdx#enums-and-constraints","206":"docs/pages/servers/tools.mdx#tool-handlers","207":"docs/pages/servers/tools.mdx#parameter-extraction-methods","208":"docs/pages/servers/tools.mdx#basic-handler-pattern","209":"docs/pages/servers/tools.mdx#file-operations-tool","210":"docs/pages/servers/tools.mdx#database-query-tool","211":"docs/pages/servers/tools.mdx#http-request-tool","212":"docs/pages/servers/tools.mdx#argument-validation","213":"docs/pages/servers/tools.mdx#type-safe-parameter-extraction","214":"docs/pages/servers/tools.mdx#available-helper-methods","215":"docs/pages/servers/tools.mdx#result-types","216":"docs/pages/servers/tools.mdx#text-results","217":"docs/pages/servers/tools.mdx#json-results","218":"docs/pages/servers/tools.mdx#multiple-content-types","219":"docs/pages/servers/tools.mdx#error-results","220":"docs/pages/servers/tools.mdx#tool-annotations","221":"docs/pages/servers/tools.mdx#advanced-tool-patterns","222":"docs/pages/servers/tools.mdx#streaming-results","223":"docs/pages/servers/tools.mdx#conditional-tools","224":"docs/pages/servers/tools.mdx#next-steps","225":"docs/pages/transports/http.mdx#streamablehttp-transport","226":"docs/pages/transports/http.mdx#use-cases","227":"docs/pages/transports/http.mdx#implementation","228":"docs/pages/transports/http.mdx#basic-streamablehttp-server","229":"docs/pages/transports/http.mdx#advanced-streamablehttp-configuration","230":"docs/pages/transports/http.mdx#endpoints","231":"docs/pages/transports/http.mdx#standard-mcp-endpoints","232":"docs/pages/transports/http.mdx#custom-endpoints","233":"docs/pages/transports/http.mdx#requestresponse-patterns","234":"docs/pages/transports/http.mdx#standard-mcp-request","235":"docs/pages/transports/http.mdx#standard-mcp-response","236":"docs/pages/transports/http.mdx#error-response","237":"docs/pages/transports/http.mdx#session-management","238":"docs/pages/transports/http.mdx#stateful-vs-stateless","239":"docs/pages/transports/http.mdx#stateless-design-recommended","240":"docs/pages/transports/http.mdx#stateful-design-when-needed","241":"docs/pages/transports/http.mdx#authentication-and-authorization","242":"docs/pages/transports/http.mdx#next-steps","243":"docs/pages/transports/#transport-options","244":"docs/pages/transports/#overview","245":"docs/pages/transports/#transport-comparison","246":"docs/pages/transports/#quick-example","247":"docs/pages/transports/#choosing-the-right-transport","248":"docs/pages/transports/#stdio-transport","249":"docs/pages/transports/#sse-transport","250":"docs/pages/transports/#streamablehttp-transport","251":"docs/pages/transports/#in-process-transport","252":"docs/pages/transports/#transport-configuration","253":"docs/pages/transports/#environment-based-selection","254":"docs/pages/transports/#multi-transport-server","255":"docs/pages/transports/#performance-considerations","256":"docs/pages/transports/#latency-comparison","257":"docs/pages/transports/#throughput-comparison","258":"docs/pages/transports/#memory-usage","259":"docs/pages/transports/#security-considerations","260":"docs/pages/transports/#stdio-transport-1","261":"docs/pages/transports/#network-transports-ssehttp","262":"docs/pages/transports/#next-steps","263":"docs/pages/transports/inprocess.mdx#in-process-transport","264":"docs/pages/transports/inprocess.mdx#use-cases","265":"docs/pages/transports/inprocess.mdx#implementation","266":"docs/pages/transports/inprocess.mdx#basic-in-process-server","267":"docs/pages/transports/inprocess.mdx#embedded-application-integration","268":"docs/pages/transports/inprocess.mdx#next-steps","269":"docs/pages/transports/sse.mdx#sse-transport","270":"docs/pages/transports/sse.mdx#use-cases","271":"docs/pages/transports/sse.mdx#implementation","272":"docs/pages/transports/sse.mdx#basic-sse-server","273":"docs/pages/transports/sse.mdx#advanced-sse-configuration","274":"docs/pages/transports/sse.mdx#configuration","275":"docs/pages/transports/sse.mdx#sse-server-options","276":"docs/pages/transports/sse.mdx#real-time-notifications","277":"docs/pages/transports/sse.mdx#session-management","278":"docs/pages/transports/sse.mdx#next-steps","279":"docs/pages/transports/stdio.mdx#stdio-transport","280":"docs/pages/transports/stdio.mdx#use-cases","281":"docs/pages/transports/stdio.mdx#implementation","282":"docs/pages/transports/stdio.mdx#basic-stdio-server","283":"docs/pages/transports/stdio.mdx#advanced-stdio-server","284":"docs/pages/transports/stdio.mdx#client-integration","285":"docs/pages/transports/stdio.mdx#how-llm-applications-connect","286":"docs/pages/transports/stdio.mdx#claude-desktop-integration","287":"docs/pages/transports/stdio.mdx#custom-client-integration","288":"docs/pages/transports/stdio.mdx#debugging","289":"docs/pages/transports/stdio.mdx#command-line-testing","290":"docs/pages/transports/stdio.mdx#interactive-testing-script","291":"docs/pages/transports/stdio.mdx#debug-logging","292":"docs/pages/transports/stdio.mdx#mcp-inspector-integration","293":"docs/pages/transports/stdio.mdx#error-handling","294":"docs/pages/transports/stdio.mdx#robust-error-handling","295":"docs/pages/transports/stdio.mdx#process-management","296":"docs/pages/transports/stdio.mdx#performance-optimization","297":"docs/pages/transports/stdio.mdx#efficient-resource-usage","298":"docs/pages/transports/stdio.mdx#memory-management","299":"docs/pages/transports/stdio.mdx#next-steps"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[2,1,19],"1":[3,2,20],"2":[1,5,113],"3":[1,5,108],"4":[1,5,91],"5":[1,5,81],"6":[2,2,20],"7":[3,4,81],"8":[2,4,67],"9":[2,4,104],"10":[2,1,1],"11":[1,2,1],"12":[4,3,43],"13":[4,3,36],"14":[2,3,54],"15":[1,3,34],"16":[4,2,76],"17":[3,2,28],"18":[5,2,46],"19":[2,2,1],"20":[1,4,41],"21":[1,4,31],"22":[2,4,20],"23":[2,2,26],"24":[3,2,19],"25":[2,1,20],"26":[3,2,89],"27":[4,2,1],"28":[4,6,53],"29":[4,6,34],"30":[3,2,98],"31":[3,5,59],"32":[5,2,36],"33":[2,2,1],"34":[5,4,21],"35":[3,4,18],"36":[3,4,19],"37":[2,1,16],"38":[2,2,20],"39":[3,4,35],"40":[3,4,58],"41":[3,4,54],"42":[3,4,33],"43":[2,2,14],"44":[2,3,20],"45":[3,3,82],"46":[2,3,71],"47":[2,3,78],"48":[2,2,10],"49":[2,4,37],"50":[3,4,138],"51":[5,4,108],"52":[4,4,78],"53":[2,2,1],"54":[2,4,64],"55":[2,4,73],"56":[2,2,15],"57":[3,1,22],"58":[1,3,27],"59":[5,3,17],"60":[2,3,108],"61":[4,3,1],"62":[2,7,26],"63":[2,7,23],"64":[2,7,26],"65":[3,7,20],"66":[3,3,1],"67":[2,6,62],"68":[2,6,62],"69":[2,6,69],"70":[2,3,1],"71":[3,5,67],"72":[3,5,81],"73":[2,3,21],"74":[2,1,16],"75":[2,2,19],"76":[3,4,56],"77":[3,4,66],"78":[2,2,12],"79":[3,4,73],"80":[3,4,65],"81":[2,4,64],"82":[2,2,10],"83":[3,4,73],"84":[3,4,85],"85":[3,4,80],"86":[2,2,8],"87":[3,4,78],"88":[3,4,61],"89":[3,4,68],"90":[1,2,10],"91":[3,3,86],"92":[3,3,116],"93":[2,2,12],"94":[2,1,17],"95":[2,2,39],"96":[2,2,15],"97":[3,3,58],"98":[3,3,67],"99":[3,3,106],"100":[2,2,10],"101":[3,3,33],"102":[5,3,61],"103":[2,3,55],"104":[3,3,48],"105":[2,2,12],"106":[3,3,55],"107":[4,3,109],"108":[3,3,71],"109":[3,2,12],"110":[4,4,67],"111":[5,4,87],"112":[2,2,1],"113":[2,4,62],"114":[4,4,91],"115":[3,1,19],"116":[2,3,17],"117":[3,5,100],"118":[3,5,78],"119":[2,5,60],"120":[2,3,10],"121":[3,5,41],"122":[3,5,96],"123":[1,3,11],"124":[2,4,60],"125":[3,4,57],"126":[2,4,47],"127":[1,3,10],"128":[2,4,61],"129":[4,4,65],"130":[2,3,11],"131":[3,5,66],"132":[3,5,72],"133":[1,3,10],"134":[2,4,58],"135":[2,4,61],"136":[2,3,1],"137":[3,5,114],"138":[2,3,13],"139":[2,1,14],"140":[3,2,21],"141":[3,4,30],"142":[3,4,33],"143":[2,2,1],"144":[1,3,50],"145":[2,3,34],"146":[2,3,19],"147":[2,2,11],"148":[2,4,41],"149":[2,4,39],"150":[5,4,41],"151":[3,4,33],"152":[3,2,41],"153":[2,2,72],"154":[2,2,39],"155":[2,2,29],"156":[3,1,26],"157":[1,3,27],"158":[5,3,26],"159":[2,3,157],"160":[2,3,25],"161":[2,1,24],"162":[2,2,38],"163":[3,4,28],"164":[2,2,1],"165":[4,4,146],"166":[3,4,127],"167":[2,2,1],"168":[3,4,75],"169":[2,2,1],"170":[3,4,92],"171":[4,4,80],"172":[2,2,1],"173":[3,4,92],"174":[3,4,103],"175":[3,2,1],"176":[2,5,102],"177":[3,5,121],"178":[2,2,21],"179":[2,1,27],"180":[2,2,36],"181":[3,4,26],"182":[2,2,11],"183":[3,3,67],"184":[2,3,64],"185":[2,2,15],"186":[2,3,74],"187":[2,3,90],"188":[2,3,79],"189":[2,2,11],"190":[2,4,27],"191":[2,4,39],"192":[2,4,38],"193":[3,4,57],"194":[2,2,8],"195":[3,4,55],"196":[2,4,51],"197":[2,2,61],"198":[2,2,55],"199":[2,2,19],"200":[2,1,26],"201":[2,2,28],"202":[3,4,32],"203":[2,2,1],"204":[2,4,65],"205":[3,4,40],"206":[2,2,20],"207":[3,4,80],"208":[3,4,54],"209":[3,4,87],"210":[3,4,92],"211":[3,4,89],"212":[2,2,1],"213":[4,4,72],"214":[3,4,89],"215":[2,2,1],"216":[2,4,20],"217":[2,4,43],"218":[3,4,39],"219":[2,4,55],"220":[2,2,52],"221":[3,2,1],"222":[2,5,71],"223":[2,5,46],"224":[2,2,21],"225":[2,1,23],"226":[2,2,55],"227":[1,2,1],"228":[3,3,187],"229":[3,3,138],"230":[1,2,1],"231":[3,3,39],"232":[2,3,92],"233":[3,3,1],"234":[3,6,26],"235":[3,6,17],"236":[2,6,18],"237":[2,2,1],"238":[3,4,1],"239":[4,7,59],"240":[5,7,65],"241":[3,4,104],"242":[2,2,22],"243":[2,1,27],"244":[1,2,45],"245":[2,2,36],"246":[2,2,95],"247":[4,2,1],"248":[2,5,29],"249":[2,5,32],"250":[2,5,30],"251":[3,5,26],"252":[2,2,1],"253":[3,3,59],"254":[3,3,76],"255":[2,2,1],"256":[2,4,17],"257":[2,4,15],"258":[2,4,15],"259":[2,2,1],"260":[2,4,19],"261":[5,4,39],"262":[2,2,23],"263":[3,1,22],"264":[2,3,44],"265":[1,3,1],"266":[4,4,137],"267":[3,4,156],"268":[2,3,23],"269":[2,1,27],"270":[2,2,52],"271":[1,2,1],"272":[3,3,175],"273":[3,3,98],"274":[1,2,1],"275":[3,3,64],"276":[3,2,59],"277":[2,5,42],"278":[2,2,22],"279":[2,1,22],"280":[2,2,56],"281":[1,2,1],"282":[3,3,190],"283":[3,3,88],"284":[2,2,1],"285":[4,4,35],"286":[3,4,34],"287":[3,4,82],"288":[1,2,1],"289":[3,3,51],"290":[3,3,65],"291":[2,3,72],"292":[3,3,46],"293":[2,2,1],"294":[3,4,83],"295":[2,4,70],"296":[2,2,1],"297":[3,4,63],"298":[2,4,67],"299":[2,2,19]},"averageFieldLength":[2.5033333333333334,3.219999999999999,46.09333333333334],"storedFields":{"0":{"href":"/core-concepts#core-concepts","html":"</header>\n<p>Understanding the fundamental concepts of MCP and how MCP-Go implements them is essential for building effective MCP servers and clients.</p>\n","isPage":true,"text":"\nUnderstanding the fundamental concepts of MCP and how MCP-Go implements them is essential for building effective MCP servers and clients.\n","title":"Core Concepts","titles":[]},"1":{"href":"/core-concepts#mcp-protocol-fundamentals","html":"\n<p>The Model Context Protocol defines four core concepts that enable LLMs to interact with external systems safely and effectively.</p>\n","isPage":false,"text":"\nThe Model Context Protocol defines four core concepts that enable LLMs to interact with external systems safely and effectively.\n","title":"MCP Protocol Fundamentals","titles":["Core Concepts"]},"2":{"href":"/core-concepts#resources","html":"\n<p>Resources are like GET endpoints - they expose data to LLMs in a read-only manner. Think of them as files, database records, or API responses that an LLM can access.</p>\n<strong>Key characteristics:</strong>\n<ul>\n<li><strong>Read-only</strong>: LLMs can fetch but not modify resources</li>\n<li><strong>URI-based</strong>: Each resource has a unique identifier</li>\n<li><strong>Typed content</strong>: Resources specify their MIME type (text, JSON, binary, etc.)</li>\n<li><strong>Dynamic or static</strong>: Can be pre-defined or generated on-demand</li>\n</ul>\n<strong>Example use cases:</strong>\n<ul>\n<li>File system access (<code>file:///path/to/document.txt</code>)</li>\n<li>Database records (<code>db://users/123</code>)</li>\n<li>API data (<code>api://weather/current</code>)</li>\n<li>Configuration files (<code>config://app.json</code>)</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Static resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;docs://readme&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;Project README&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The project&#x27;s main documentation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/markdown&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Dynamic resource with template</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">userResource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;users://{user_id}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;User Profile&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User profile information&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nResources are like GET endpoints - they expose data to LLMs in a read-only manner. Think of them as files, database records, or API responses that an LLM can access.\nKey characteristics:\n\nRead-only: LLMs can fetch but not modify resources\nURI-based: Each resource has a unique identifier\nTyped content: Resources specify their MIME type (text, JSON, binary, etc.)\nDynamic or static: Can be pre-defined or generated on-demand\n\nExample use cases:\n\nFile system access (file:///path/to/document.txt)\nDatabase records (db://users/123)\nAPI data (api://weather/current)\nConfiguration files (config://app.json)\n\n// Static resource\nresource := mcp.NewResource(\n    &quot;docs://readme&quot;,\n    &quot;Project README&quot;,\n    mcp.WithResourceDescription(&quot;The project&#x27;s main documentation&quot;),\n    mcp.WithMIMEType(&quot;text/markdown&quot;),\n)\n \n// Dynamic resource with template\nuserResource := mcp.NewResource(\n    &quot;users://{user_id}&quot;,\n    &quot;User Profile&quot;,\n    mcp.WithResourceDescription(&quot;User profile information&quot;),\n    mcp.WithMIMEType(&quot;application/json&quot;),\n)\n","title":"Resources","titles":["Core Concepts","MCP Protocol Fundamentals"]},"3":{"href":"/core-concepts#tools","html":"\n<p>Tools are like POST endpoints - they provide functionality that LLMs can invoke to take actions or perform computations.</p>\n<strong>Key characteristics:</strong>\n<ul>\n<li><strong>Action-oriented</strong>: Tools do things rather than just return data</li>\n<li><strong>Parameterized</strong>: Accept structured input arguments</li>\n<li><strong>Typed schemas</strong>: Define expected parameter types and constraints</li>\n<li><strong>Return results</strong>: Provide structured output back to the LLM</li>\n</ul>\n<strong>Example use cases:</strong>\n<ul>\n<li>Calculations (<code>calculate</code>, <code>convert_units</code>)</li>\n<li>File operations (<code>create_file</code>, <code>search_files</code>)</li>\n<li>API calls (<code>send_email</code>, <code>create_ticket</code>)</li>\n<li>System commands (<code>run_command</code>, <code>check_status</code>)</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Simple calculation tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">calcTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Perform arithmetic operations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// File creation tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">fileTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;create_file&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Create a new file with content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;encoding&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;utf-8&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nTools are like POST endpoints - they provide functionality that LLMs can invoke to take actions or perform computations.\nKey characteristics:\n\nAction-oriented: Tools do things rather than just return data\nParameterized: Accept structured input arguments\nTyped schemas: Define expected parameter types and constraints\nReturn results: Provide structured output back to the LLM\n\nExample use cases:\n\nCalculations (calculate, convert_units)\nFile operations (create_file, search_files)\nAPI calls (send_email, create_ticket)\nSystem commands (run_command, check_status)\n\n// Simple calculation tool\ncalcTool := mcp.NewTool(&quot;calculate&quot;,\n    mcp.WithDescription(&quot;Perform arithmetic operations&quot;),\n    mcp.WithString(&quot;operation&quot;, \n        mcp.Required(),\n        mcp.Enum(&quot;add&quot;, &quot;subtract&quot;, &quot;multiply&quot;, &quot;divide&quot;),\n    ),\n    mcp.WithNumber(&quot;x&quot;, mcp.Required()),\n    mcp.WithNumber(&quot;y&quot;, mcp.Required()),\n)\n \n// File creation tool\nfileTool := mcp.NewTool(&quot;create_file&quot;,\n    mcp.WithDescription(&quot;Create a new file with content&quot;),\n    mcp.WithString(&quot;path&quot;, mcp.Required()),\n    mcp.WithString(&quot;content&quot;, mcp.Required()),\n    mcp.WithString(&quot;encoding&quot;, mcp.Default(&quot;utf-8&quot;)),\n)\n","title":"Tools","titles":["Core Concepts","MCP Protocol Fundamentals"]},"4":{"href":"/core-concepts#prompts","html":"\n<p>Prompts are reusable interaction templates that help structure conversations between users and LLMs.</p>\n<strong>Key characteristics:</strong>\n<ul>\n<li><strong>Template-based</strong>: Use placeholders for dynamic content</li>\n<li><strong>Reusable</strong>: Can be invoked multiple times with different arguments</li>\n<li><strong>Structured</strong>: Define clear input parameters and expected outputs</li>\n<li><strong>Context-aware</strong>: Can include relevant resources or tool suggestions</li>\n</ul>\n<strong>Example use cases:</strong>\n<ul>\n<li>Code review templates</li>\n<li>Documentation generation</li>\n<li>Data analysis workflows</li>\n<li>Creative writing prompts</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Code review prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">reviewPrompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code_review&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Review code for best practices and issues&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The code to review&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;language&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Programming language&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Data analysis prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">analysisPrompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;analyze_data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Analyze dataset and provide insights&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;dataset_uri&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;focus_areas&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Specific areas to focus analysis on&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nPrompts are reusable interaction templates that help structure conversations between users and LLMs.\nKey characteristics:\n\nTemplate-based: Use placeholders for dynamic content\nReusable: Can be invoked multiple times with different arguments\nStructured: Define clear input parameters and expected outputs\nContext-aware: Can include relevant resources or tool suggestions\n\nExample use cases:\n\nCode review templates\nDocumentation generation\nData analysis workflows\nCreative writing prompts\n\n// Code review prompt\nreviewPrompt := mcp.NewPrompt(&quot;code_review&quot;,\n    mcp.WithPromptDescription(&quot;Review code for best practices and issues&quot;),\n    mcp.WithPromptArgument(&quot;code&quot;, \n        mcp.Required(),\n        mcp.Description(&quot;The code to review&quot;),\n    ),\n    mcp.WithPromptArgument(&quot;language&quot;,\n        mcp.Description(&quot;Programming language&quot;),\n    ),\n)\n \n// Data analysis prompt\nanalysisPrompt := mcp.NewPrompt(&quot;analyze_data&quot;,\n    mcp.WithPromptDescription(&quot;Analyze dataset and provide insights&quot;),\n    mcp.WithPromptArgument(&quot;dataset_uri&quot;, mcp.Required()),\n    mcp.WithPromptArgument(&quot;focus_areas&quot;, \n        mcp.Description(&quot;Specific areas to focus analysis on&quot;),\n    ),\n)\n","title":"Prompts","titles":["Core Concepts","MCP Protocol Fundamentals"]},"5":{"href":"/core-concepts#transports","html":"\n<p>Transports define how MCP clients and servers communicate. MCP-Go supports multiple transport methods to fit different deployment scenarios.</p>\n<strong>Available transports:</strong>\n<ol>\n<li>\n<p><strong>Stdio</strong> - Standard input/output (most common)</p>\n<ul>\n<li>Best for: Local tools, CLI integration, desktop applications</li>\n<li>Pros: Simple, secure, no network setup</li>\n<li>Cons: Local only, single client</li>\n</ul>\n</li>\n<li>\n<p><strong>Server-Sent Events (SSE)</strong> - HTTP-based streaming</p>\n<ul>\n<li>Best for: Web applications, real-time updates</li>\n<li>Pros: Web-friendly, real-time, multiple clients</li>\n<li>Cons: HTTP overhead, one-way streaming</li>\n</ul>\n</li>\n<li>\n<p><strong>HTTP</strong> - Traditional request/response</p>\n<ul>\n<li>Best for: Web services, REST-like APIs</li>\n<li>Pros: Standard protocol, caching, load balancing</li>\n<li>Cons: No real-time updates, more complex</li>\n</ul>\n</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Stdio transport (most common)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// HTTP transport</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeHTTP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// SSE transport</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeSSE</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nTransports define how MCP clients and servers communicate. MCP-Go supports multiple transport methods to fit different deployment scenarios.\nAvailable transports:\n\n\nStdio - Standard input/output (most common)\n\nBest for: Local tools, CLI integration, desktop applications\nPros: Simple, secure, no network setup\nCons: Local only, single client\n\n\n\nServer-Sent Events (SSE) - HTTP-based streaming\n\nBest for: Web applications, real-time updates\nPros: Web-friendly, real-time, multiple clients\nCons: HTTP overhead, one-way streaming\n\n\n\nHTTP - Traditional request/response\n\nBest for: Web services, REST-like APIs\nPros: Standard protocol, caching, load balancing\nCons: No real-time updates, more complex\n\n\n\n// Stdio transport (most common)\nserver.ServeStdio(s)\n \n// HTTP transport\nserver.ServeHTTP(s, &quot;:8080&quot;)\n \n// SSE transport\nserver.ServeSSE(s, &quot;:8080&quot;)\n","title":"Transports","titles":["Core Concepts","MCP Protocol Fundamentals"]},"6":{"href":"/core-concepts#sdk-architecture","html":"\n<p>MCP-Go provides a clean architecture that abstracts the complexity of the MCP protocol while giving you full control when needed.</p>\n","isPage":false,"text":"\nMCP-Go provides a clean architecture that abstracts the complexity of the MCP protocol while giving you full control when needed.\n","title":"SDK Architecture","titles":["Core Concepts"]},"7":{"href":"/core-concepts#server-vs-client","html":"\n<p>Understanding when to build servers versus clients is crucial for effective MCP integration.</p>\n<strong>MCP Servers:</strong>\n<ul>\n<li><strong>Purpose</strong>: Expose tools, resources, and prompts to LLMs</li>\n<li><strong>Use cases</strong>:\n<ul>\n<li>Database access layers</li>\n<li>File system tools</li>\n<li>API integrations</li>\n<li>Custom business logic</li>\n</ul>\n</li>\n<li><strong>Characteristics</strong>: Passive, respond to requests, stateful</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Server example - exposes functionality</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Database Tools&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(queryTool, handleQuery)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tableResource, handleTableAccess)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span></code></pre>\n<strong>MCP Clients:</strong>\n<ul>\n<li><strong>Purpose</strong>: Connect to and use MCP servers</li>\n<li><strong>Use cases</strong>:\n<ul>\n<li>LLM applications</li>\n<li>Orchestration tools</li>\n<li>Testing and debugging</li>\n<li>Server composition</li>\n</ul>\n</li>\n<li><strong>Characteristics</strong>: Active, make requests, coordinate multiple servers</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Client example - uses functionality</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;database-server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tools, _ </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">result, _ </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, queryRequest)</span></span></code></pre>\n","isPage":false,"text":"\nUnderstanding when to build servers versus clients is crucial for effective MCP integration.\nMCP Servers:\n\nPurpose: Expose tools, resources, and prompts to LLMs\nUse cases:\n\nDatabase access layers\nFile system tools\nAPI integrations\nCustom business logic\n\n\nCharacteristics: Passive, respond to requests, stateful\n\n// Server example - exposes functionality\ns := server.NewMCPServer(&quot;Database Tools&quot;, &quot;1.0.0&quot;)\ns.AddTool(queryTool, handleQuery)\ns.AddResource(tableResource, handleTableAccess)\nserver.ServeStdio(s)\nMCP Clients:\n\nPurpose: Connect to and use MCP servers\nUse cases:\n\nLLM applications\nOrchestration tools\nTesting and debugging\nServer composition\n\n\nCharacteristics: Active, make requests, coordinate multiple servers\n\n// Client example - uses functionality\nclient := client.NewStdioClient(&quot;database-server&quot;)\ntools, _ := client.ListTools(ctx)\nresult, _ := client.CallTool(ctx, queryRequest)\n","title":"Server vs Client","titles":["Core Concepts","SDK Architecture"]},"8":{"href":"/core-concepts#transport-layer","html":"\n<p>The transport layer abstracts communication protocols, allowing you to focus on business logic rather than protocol details.</p>\n<strong>Key benefits:</strong>\n<ul>\n<li><strong>Protocol agnostic</strong>: Same server code works with any transport</li>\n<li><strong>Automatic serialization</strong>: JSON marshaling/unmarshaling handled automatically</li>\n<li><strong>Error handling</strong>: Transport-specific errors are normalized</li>\n<li><strong>Connection management</strong>: Automatic reconnection and cleanup</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Same server works with any transport</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;My Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Choose transport at runtime</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stdio&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;http&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeHTTP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeSSE</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe transport layer abstracts communication protocols, allowing you to focus on business logic rather than protocol details.\nKey benefits:\n\nProtocol agnostic: Same server code works with any transport\nAutomatic serialization: JSON marshaling/unmarshaling handled automatically\nError handling: Transport-specific errors are normalized\nConnection management: Automatic reconnection and cleanup\n\n// Same server works with any transport\ns := server.NewMCPServer(&quot;My Server&quot;, &quot;1.0.0&quot;)\n \n// Choose transport at runtime\nswitch transport {\ncase &quot;stdio&quot;:\n    server.ServeStdio(s)\ncase &quot;http&quot;:\n    server.ServeHTTP(s, &quot;:8080&quot;)\ncase &quot;sse&quot;:\n    server.ServeSSE(s, &quot;:8080&quot;)\n}\n","title":"Transport Layer","titles":["Core Concepts","SDK Architecture"]},"9":{"href":"/core-concepts#session-management","html":"\n<p>MCP-Go handles session management automatically, supporting multiple concurrent clients with proper isolation.</p>\n<strong>Features:</strong>\n<ul>\n<li><strong>Multi-client support</strong>: Multiple LLMs can connect simultaneously</li>\n<li><strong>Session isolation</strong>: Each client has independent state</li>\n<li><strong>Resource cleanup</strong>: Automatic cleanup when clients disconnect</li>\n<li><strong>Concurrent safety</strong>: Thread-safe operations across all sessions</li>\n</ul>\n<strong>Session lifecycle:</strong>\n<ol>\n<li><strong>Initialize</strong>: Client connects and exchanges capabilities</li>\n<li><strong>Active</strong>: Client makes requests, server responds</li>\n<li><strong>Cleanup</strong>: Connection closes, resources are freed</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Server automatically handles multiple sessions</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Multi-Client Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Hooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        OnSessionStart: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Client </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> connected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        OnSessionEnd: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Client </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> disconnected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<strong>State management patterns:</strong>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Per-session state</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SessionState</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    UserID   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Settings </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sessions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> toolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessionID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    state </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sessions[sessionID]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use session-specific state</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> processWithState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(state, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\nMCP-Go handles session management automatically, supporting multiple concurrent clients with proper isolation.\nFeatures:\n\nMulti-client support: Multiple LLMs can connect simultaneously\nSession isolation: Each client has independent state\nResource cleanup: Automatic cleanup when clients disconnect\nConcurrent safety: Thread-safe operations across all sessions\n\nSession lifecycle:\n\nInitialize: Client connects and exchanges capabilities\nActive: Client makes requests, server responds\nCleanup: Connection closes, resources are freed\n\n// Server automatically handles multiple sessions\ns := server.NewMCPServer(&quot;Multi-Client Server&quot;, &quot;1.0.0&quot;,\n    server.WithHooks(&amp;server.Hooks{\n        OnSessionStart: func(sessionID string) {\n            log.Printf(&quot;Client %s connected&quot;, sessionID)\n        },\n        OnSessionEnd: func(sessionID string) {\n            log.Printf(&quot;Client %s disconnected&quot;, sessionID)\n        },\n    }),\n)\nState management patterns:\n// Per-session state\ntype SessionState struct {\n    UserID   string\n    Settings map[string]interface{}\n}\n \nvar sessions = make(map[string]*SessionState)\n \nfunc toolHandler(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    sessionID := server.GetSessionID(ctx)\n    state := sessions[sessionID]\n    \n    // Use session-specific state\n    return processWithState(state, req)\n}","title":"Session Management","titles":["Core Concepts","SDK Architecture"]},"10":{"href":"/getting-started#getting-started","html":"</header>\n","isPage":true,"text":"\n","title":"Getting Started","titles":[]},"11":{"href":"/getting-started#introduction","html":"\n","isPage":false,"text":"\n","title":"Introduction","titles":["Getting Started"]},"12":{"href":"/getting-started#what-is-mcp","html":"\n<p>The Model Context Protocol (MCP) is an open standard that enables secure, controlled connections between AI applications and external data sources and tools. It provides a standardized way for Large Language Models (LLMs) to access and interact with external systems while maintaining security and user control.</p>\n","isPage":false,"text":"\nThe Model Context Protocol (MCP) is an open standard that enables secure, controlled connections between AI applications and external data sources and tools. It provides a standardized way for Large Language Models (LLMs) to access and interact with external systems while maintaining security and user control.\n","title":"What is MCP?","titles":["Getting Started","Introduction"]},"13":{"href":"/getting-started#why-mcp-go","html":"\n<p>MCP-Go is designed to make building MCP servers in Go fast, simple, and complete:</p>\n<ul>\n<li><strong>Fast</strong>: Minimal overhead with efficient Go implementation</li>\n<li><strong>Simple</strong>: Clean, intuitive API with minimal boilerplate</li>\n<li><strong>Complete</strong>: Full support for the MCP specification including tools, resources, and prompts</li>\n</ul>\n","isPage":false,"text":"\nMCP-Go is designed to make building MCP servers in Go fast, simple, and complete:\n\nFast: Minimal overhead with efficient Go implementation\nSimple: Clean, intuitive API with minimal boilerplate\nComplete: Full support for the MCP specification including tools, resources, and prompts\n\n","title":"Why MCP Go?","titles":["Getting Started","Introduction"]},"14":{"href":"/getting-started#key-features","html":"\n<ul>\n<li><strong>High-level interface</strong>: Focus on your business logic, not protocol details</li>\n<li><strong>Minimal boilerplate</strong>: Get started with just a few lines of code</li>\n<li><strong>Full MCP spec support</strong>: Tools, resources, prompts, and all transport methods</li>\n<li><strong>Type safety</strong>: Leverage Go&#x27;s type system for robust MCP servers</li>\n<li><strong>Multiple transports</strong>: Stdio, StreamableHTTP, Server-Sent Events and In-Process support</li>\n</ul>\n","isPage":false,"text":"\n\nHigh-level interface: Focus on your business logic, not protocol details\nMinimal boilerplate: Get started with just a few lines of code\nFull MCP spec support: Tools, resources, prompts, and all transport methods\nType safety: Leverage Go&#x27;s type system for robust MCP servers\nMultiple transports: Stdio, StreamableHTTP, Server-Sent Events and In-Process support\n\n","title":"Key Features","titles":["Getting Started","Introduction"]},"15":{"href":"/getting-started#installation","html":"\n<p>Add MCP-Go to your Go project:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> get</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> github.com/mark3labs/mcp-go</span></span></code></pre>\n<p>MCP-Go makes it easy to build Model Context Protocol (MCP) servers in Go. This guide will help you create your first MCP server in just a few minutes.</p>\n","isPage":false,"text":"\nAdd MCP-Go to your Go project:\ngo get github.com/mark3labs/mcp-go\nMCP-Go makes it easy to build Model Context Protocol (MCP) servers in Go. This guide will help you create your first MCP server in just a few minutes.\n","title":"Installation","titles":["Getting Started","Introduction"]},"16":{"href":"/getting-started#your-first-mcp-server","html":"\n<p>Let&#x27;s create a simple MCP server with a &quot;hello world&quot; tool:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a new MCP server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Demo 🚀&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;hello_world&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Say hello to someone&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Name of the person to greet&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tool handler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tool, helloHandler)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start the stdio server</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> helloHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    name, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Hello, </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">!&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, name)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nLet&#x27;s create a simple MCP server with a &quot;hello world&quot; tool:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    // Create a new MCP server\n    s := server.NewMCPServer(\n        &quot;Demo 🚀&quot;,\n        &quot;1.0.0&quot;,\n        server.WithToolCapabilities(false),\n    )\n \n    // Add tool\n    tool := mcp.NewTool(&quot;hello_world&quot;,\n        mcp.WithDescription(&quot;Say hello to someone&quot;),\n        mcp.WithString(&quot;name&quot;,\n            mcp.Required(),\n            mcp.Description(&quot;Name of the person to greet&quot;),\n        ),\n    )\n \n    // Add tool handler\n    s.AddTool(tool, helloHandler)\n \n    // Start the stdio server\n    if err := server.ServeStdio(s); err != nil {\n        fmt.Printf(&quot;Server error: %v\\n&quot;, err)\n    }\n}\n \nfunc helloHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    name, err := request.RequireString(&quot;name&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(&quot;Hello, %s!&quot;, name)), nil\n}\n","title":"Your First MCP Server","titles":["Getting Started"]},"17":{"href":"/getting-started#running-your-server","html":"\n<ol>\n<li>Save the code above to a file (e.g., <code>main.go</code>)</li>\n<li>Run it with:\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span></code></pre>\n</li>\n</ol>\n<p>Your MCP server is now running and ready to accept connections via stdio!</p>\n","isPage":false,"text":"\n\nSave the code above to a file (e.g., main.go)\nRun it with:\ngo run main.go\n\n\nYour MCP server is now running and ready to accept connections via stdio!\n","title":"Running Your Server","titles":["Getting Started"]},"18":{"href":"/getting-started#whats-next","html":"\n<p>Now that you have a basic server running, you can:</p>\n<ul>\n<li><strong>Add more tools</strong> - Create tools for calculations, file operations, API calls, etc.</li>\n<li><strong>Add resources</strong> - Expose data sources like files, databases, or APIs</li>\n<li><strong>Add prompts</strong> - Create reusable prompt templates for better LLM interactions</li>\n<li><strong>Explore examples</strong> - Check out the <code>examples/</code> directory for more complex use cases</li>\n</ul>\n","isPage":false,"text":"\nNow that you have a basic server running, you can:\n\nAdd more tools - Create tools for calculations, file operations, API calls, etc.\nAdd resources - Expose data sources like files, databases, or APIs\nAdd prompts - Create reusable prompt templates for better LLM interactions\nExplore examples - Check out the examples/ directory for more complex use cases\n\n","title":"What&#x27;s Next?","titles":["Getting Started"]},"19":{"href":"/getting-started#key-concepts","html":"\n","isPage":false,"text":"\n","title":"Key Concepts","titles":["Getting Started"]},"20":{"href":"/getting-started#tools","html":"\n<p>Tools let LLMs take actions through your server. They&#x27;re like functions that the LLM can call:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">calculatorTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Perform basic arithmetic operations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nTools let LLMs take actions through your server. They&#x27;re like functions that the LLM can call:\ncalculatorTool := mcp.NewTool(&quot;calculate&quot;,\n    mcp.WithDescription(&quot;Perform basic arithmetic operations&quot;),\n    mcp.WithString(&quot;operation&quot;,\n        mcp.Required(),\n        mcp.Enum(&quot;add&quot;, &quot;subtract&quot;, &quot;multiply&quot;, &quot;divide&quot;),\n    ),\n    mcp.WithNumber(&quot;x&quot;, mcp.Required()),\n    mcp.WithNumber(&quot;y&quot;, mcp.Required()),\n)\n","title":"Tools","titles":["Getting Started","Key Concepts"]},"21":{"href":"/getting-started#resources","html":"\n<p>Resources expose data to LLMs. They can be static files or dynamic data:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;docs://readme&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;Project README&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The project&#x27;s README file&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/markdown&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nResources expose data to LLMs. They can be static files or dynamic data:\nresource := mcp.NewResource(\n    &quot;docs://readme&quot;,\n    &quot;Project README&quot;,\n    mcp.WithResourceDescription(&quot;The project&#x27;s README file&quot;),\n    mcp.WithMIMEType(&quot;text/markdown&quot;),\n)\n","title":"Resources","titles":["Getting Started","Key Concepts"]},"22":{"href":"/getting-started#server-options","html":"\n<p>Customize your server with various options:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;My Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(myHooks),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nCustomize your server with various options:\ns := server.NewMCPServer(\n    &quot;My Server&quot;,\n    &quot;1.0.0&quot;,\n    server.WithToolCapabilities(true),\n    server.WithRecovery(),\n    server.WithHooks(myHooks),\n)\n","title":"Server Options","titles":["Getting Started","Key Concepts"]},"23":{"href":"/getting-started#transport-options","html":"\n<p>MCP-Go supports multiple transport methods:</p>\n<ul>\n<li><strong>Stdio</strong> (most common): <code>server.ServeStdio(s)</code></li>\n<li><strong>StreamableHTTP</strong>: <code>server.NewStreamableHTTPServer(s).Start(&quot;:8080&quot;)</code></li>\n<li><strong>Server-Sent Events</strong>: <code>server.ServeSSE(s, &quot;:8080&quot;)</code></li>\n<li><strong>In-Process</strong>: <code>client.NewInProcessClient(server)</code></li>\n</ul>\n","isPage":false,"text":"\nMCP-Go supports multiple transport methods:\n\nStdio (most common): server.ServeStdio(s)\nStreamableHTTP: server.NewStreamableHTTPServer(s).Start(&quot;:8080&quot;)\nServer-Sent Events: server.ServeSSE(s, &quot;:8080&quot;)\nIn-Process: client.NewInProcessClient(server)\n\n","title":"Transport Options","titles":["Getting Started"]},"24":{"href":"/getting-started#need-help","html":"\n<ul>\n<li>Check out the <a href=\"https://github.com/mark3labs/mcp-go/tree/main/examples\">examples</a> for more complex use cases</li>\n<li>Join the discussion on <a href=\"https://discord.gg/RqSS2NQVsY\">Discord</a></li>\n<li>Read the full documentation in the <a href=\"https://github.com/mark3labs/mcp-go/blob/main/README.md\">README</a></li>\n</ul>","isPage":false,"text":"\n\nCheck out the examples for more complex use cases\nJoin the discussion on Discord\nRead the full documentation in the README\n","title":"Need Help?","titles":["Getting Started"]},"25":{"href":"/quick-start#quick-start","html":"</header>\n<p>Get up and running with MCP-Go in minutes. This guide walks you through creating your first MCP server and client.</p>\n","isPage":true,"text":"\nGet up and running with MCP-Go in minutes. This guide walks you through creating your first MCP server and client.\n","title":"Quick Start","titles":[]},"26":{"href":"/quick-start#hello-world-server","html":"\n<p>Let&#x27;s start with the simplest possible MCP server - a &quot;hello world&quot; tool:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">errors</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a new MCP server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Hello World Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Define a simple tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;hello_world&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Say hello to someone&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Name of the person to greet&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tool handler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tool, helloHandler)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start the stdio server</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> helloHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">request</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    name, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Hello, </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">! 👋&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, name)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>Save this as <code>hello-server/main.go</code> and run:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cd</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> hello-server</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> mod</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> init</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> hello-server</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> get</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> github.com/mark3labs/mcp-go</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span></code></pre>\n","isPage":false,"text":"\nLet&#x27;s start with the simplest possible MCP server - a &quot;hello world&quot; tool:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;errors&quot;\n    &quot;fmt&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    // Create a new MCP server\n    s := server.NewMCPServer(\n        &quot;Hello World Server&quot;,\n        &quot;1.0.0&quot;,\n        server.WithToolCapabilities(false),\n    )\n \n    // Define a simple tool\n    tool := mcp.NewTool(&quot;hello_world&quot;,\n        mcp.WithDescription(&quot;Say hello to someone&quot;),\n        mcp.WithString(&quot;name&quot;,\n            mcp.Required(),\n            mcp.Description(&quot;Name of the person to greet&quot;),\n        ),\n    )\n \n    // Add tool handler\n    s.AddTool(tool, helloHandler)\n \n    // Start the stdio server\n    if err := server.ServeStdio(s); err != nil {\n        fmt.Printf(&quot;Server error: %v\\n&quot;, err)\n    }\n}\n \nfunc helloHandler(ctx context.Context, request mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    name, err := request.RequireString(&quot;name&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(&quot;Hello, %s! 👋&quot;, name)), nil\n}\nSave this as hello-server/main.go and run:\ncd hello-server\ngo mod init hello-server\ngo get github.com/mark3labs/mcp-go\ngo run main.go\n","title":"Hello World Server","titles":["Quick Start"]},"27":{"href":"/quick-start#running-your-first-server","html":"\n","isPage":false,"text":"\n","title":"Running Your First Server","titles":["Quick Start"]},"28":{"href":"/quick-start#testing-with-claude-desktop","html":"\n<ol>\n<li>\n<p><strong>Install Claude Desktop</strong> from <a href=\"https://claude.ai/download\">Anthropic&#x27;s website</a></p>\n</li>\n<li>\n<p><strong>Configure your server</strong> by editing Claude&#x27;s config file:</p>\n<p><strong>macOS</strong>: <code>~/Library/Application Support/Claude/claude_desktop_config.json</code>\n<strong>Windows</strong>: <code>%APPDATA%\\Claude\\claude_desktop_config.json</code></p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;mcpServers&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;hello-world&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;command&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;args&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/your/hello-server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n</li>\n<li>\n<p><strong>Restart Claude Desktop</strong> and look for the 🔌 icon indicating MCP connection</p>\n</li>\n<li>\n<p><strong>Test your tool</strong> by asking Claude: &quot;Use the hello_world tool to greet Alice&quot;</p>\n</li>\n</ol>\n","isPage":false,"text":"\n\n\nInstall Claude Desktop from Anthropic&#x27;s website\n\n\nConfigure your server by editing Claude&#x27;s config file:\nmacOS: ~/Library/Application Support/Claude/claude_desktop_config.json\nWindows: %APPDATA%\\Claude\\claude_desktop_config.json\n{\n  &quot;mcpServers&quot;: {\n    &quot;hello-world&quot;: {\n      &quot;command&quot;: &quot;go&quot;,\n      &quot;args&quot;: [&quot;run&quot;, &quot;/path/to/your/hello-server/main.go&quot;]\n    }\n  }\n}\n\n\nRestart Claude Desktop and look for the 🔌 icon indicating MCP connection\n\n\nTest your tool by asking Claude: &quot;Use the hello_world tool to greet Alice&quot;\n\n\n","title":"Testing with Claude Desktop","titles":["Quick Start","Running Your First Server"]},"29":{"href":"/quick-start#testing-with-mcp-inspector","html":"\n<p>For debugging and development, use the MCP Inspector:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Install the MCP Inspector</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">npm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -g</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @modelcontextprotocol/inspector</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Run your server with the inspector</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp-inspector</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span></code></pre>\n<p>This opens a web interface where you can test your tools interactively.</p>\n","isPage":false,"text":"\nFor debugging and development, use the MCP Inspector:\n# Install the MCP Inspector\nnpm install -g @modelcontextprotocol/inspector\n \n# Run your server with the inspector\nmcp-inspector go run main.go\nThis opens a web interface where you can test your tools interactively.\n","title":"Testing with MCP Inspector","titles":["Quick Start","Running Your First Server"]},"30":{"href":"/quick-start#basic-client-example","html":"\n<p>You can also create MCP clients to connect to other servers:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a stdio client that connects to another MCP server</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">\t// NTOE: NewStdioMCPClient will start the connection automatically. Don&#x27;t call the Start method manually</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize the connection</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List available tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name, tool.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call a tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;hello_world&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;World&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Print the result</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Content {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.Type </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, content.Text)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nYou can also create MCP clients to connect to other servers:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\n \nfunc main() {\n    // Create a stdio client that connects to another MCP server\n\t// NTOE: NewStdioMCPClient will start the connection automatically. Don&#x27;t call the Start method manually\n    c, err := client.NewStdioMCPClient(\n        &quot;go&quot;, &quot;run&quot;, &quot;path/to/server/main.go&quot;,\n    )\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer c.Close()\n \n    ctx := context.Background()\n \n    // Initialize the connection\n    if err := c.Initialize(ctx); err != nil {\n        log.Fatal(err)\n    }\n \n    // List available tools\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Available tools: %d\\n&quot;, len(tools.Tools))\n    for _, tool := range tools.Tools {\n        fmt.Printf(&quot;- %s: %s\\n&quot;, tool.Name, tool.Description)\n    }\n \n    // Call a tool\n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolParams{\n            Name: &quot;hello_world&quot;,\n            Arguments: map[string]interface{}{\n                &quot;name&quot;: &quot;World&quot;,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // Print the result\n    for _, content := range result.Content {\n        if content.Type == &quot;text&quot; {\n            fmt.Printf(&quot;Result: %s\\n&quot;, content.Text)\n        }\n    }\n}\n","title":"Basic Client Example","titles":["Quick Start"]},"31":{"href":"/quick-start#streamablehttp-client-example","html":"\n<p>For StreamableHTTP-based servers, use the StreamableHTTP client:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a StreamableHTTP client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize and use the client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call a tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;hello_world&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;StreamableHTTP World&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nFor StreamableHTTP-based servers, use the StreamableHTTP client:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\n \nfunc main() {\n    // Create a StreamableHTTP client\n    c := client.NewStreamableHttpClient(&quot;http://localhost:8080/mcp&quot;)\n    defer c.Close()\n \n    ctx := context.Background()\n \n    // Initialize and use the client\n    if err := c.Initialize(ctx); err != nil {\n        log.Fatal(err)\n    }\n \n    // Call a tool\n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name: &quot;hello_world&quot;,\n            Arguments: map[string]interface{}{\n                &quot;name&quot;: &quot;StreamableHTTP World&quot;,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Tool result: %+v\\n&quot;, result)\n}\n","title":"StreamableHTTP Client Example","titles":["Quick Start","Basic Client Example"]},"32":{"href":"/quick-start#whats-next","html":"\n<p>Now that you have a working MCP server and client:</p>\n<ul>\n<li><strong>Learn about <a href=\"/servers/tools\">Tools</a></strong> - Create powerful tool interfaces</li>\n<li><strong>Add <a href=\"/servers/resources\">Resources</a></strong> - Expose data sources to LLMs</li>\n<li><strong>Create <a href=\"/servers/prompts\">Prompts</a></strong> - Build reusable prompt templates</li>\n<li><strong>Explore <a href=\"/servers/advanced\">Advanced Features</a></strong> - Production-ready features</li>\n</ul>\n","isPage":false,"text":"\nNow that you have a working MCP server and client:\n\nLearn about Tools - Create powerful tool interfaces\nAdd Resources - Expose data sources to LLMs\nCreate Prompts - Build reusable prompt templates\nExplore Advanced Features - Production-ready features\n\n","title":"What&#x27;s Next?","titles":["Quick Start"]},"33":{"href":"/quick-start#common-issues","html":"\n","isPage":false,"text":"\n","title":"Common Issues","titles":["Quick Start"]},"34":{"href":"/quick-start#server-wont-start","html":"\n<ul>\n<li>Check that the port isn&#x27;t already in use</li>\n<li>Verify Go module dependencies are installed</li>\n<li>Ensure proper file permissions</li>\n</ul>\n","isPage":false,"text":"\n\nCheck that the port isn&#x27;t already in use\nVerify Go module dependencies are installed\nEnsure proper file permissions\n\n","title":"Server Won&#x27;t Start","titles":["Quick Start","Common Issues"]},"35":{"href":"/quick-start#client-connection-failed","html":"\n<ul>\n<li>Verify the server is running and accessible</li>\n<li>Check network connectivity for StreamableHTTP clients</li>\n<li>Validate stdio command paths for stdio clients</li>\n</ul>\n","isPage":false,"text":"\n\nVerify the server is running and accessible\nCheck network connectivity for StreamableHTTP clients\nValidate stdio command paths for stdio clients\n\n","title":"Client Connection Failed","titles":["Quick Start","Common Issues"]},"36":{"href":"/quick-start#tool-calls-failing","html":"\n<ul>\n<li>Verify tool parameter types match the schema</li>\n<li>Check error handling in your tool functions</li>\n<li>Use the MCP Inspector for debugging</li>\n</ul>","isPage":false,"text":"\n\nVerify tool parameter types match the schema\nCheck error handling in your tool functions\nUse the MCP Inspector for debugging\n","title":"Tool Calls Failing","titles":["Quick Start","Common Issues"]},"37":{"href":"/clients/basics#client-basics","html":"</header>\n<p>Learn the fundamentals of creating and managing MCP clients, including lifecycle management, initialization, and error handling.</p>\n","isPage":true,"text":"\nLearn the fundamentals of creating and managing MCP clients, including lifecycle management, initialization, and error handling.\n","title":"Client Basics","titles":[]},"38":{"href":"/clients/basics#creating-clients","html":"\n<p>MCP-Go provides client constructors for each supported transport. The choice of transport determines how your client communicates with the server.</p>\n","isPage":false,"text":"\nMCP-Go provides client constructors for each supported transport. The choice of transport determines how your client communicates with the server.\n","title":"Creating Clients","titles":["Client Basics"]},"39":{"href":"/clients/basics#client-constructor-patterns","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// STDIO client - for command-line tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;command&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;arg1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;arg2&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// StreamableHTTP client - for web services</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// SSE client - for real-time web applications</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp/sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// In-process client - for testing and embedded scenarios</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(server)</span></span></code></pre>\n","isPage":false,"text":"\n// STDIO client - for command-line tools\nclient, err := client.NewStdioMCPClient(&quot;command&quot;, &quot;arg1&quot;, &quot;arg2&quot;)\n \n// StreamableHTTP client - for web services\nclient := client.NewStreamableHttpClient(&quot;http://localhost:8080/mcp&quot;)\n \n// SSE client - for real-time web applications\nclient := client.NewSSEMCPClient(&quot;http://localhost:8080/mcp/sse&quot;)\n \n// In-process client - for testing and embedded scenarios\nclient := client.NewInProcessClient(server)\n","title":"Client Constructor Patterns","titles":["Client Basics","Creating Clients"]},"40":{"href":"/clients/basics#stdio-client-creation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">errors</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">math</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">net/http</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create client that spawns a subprocess</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to create STDIO client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// With custom environment variables</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createStdioClientWithEnv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    env </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;LOG_LEVEL=debug&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;DATABASE_URL=sqlite://test.db&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, env, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to create STDIO client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;errors&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;math&quot;\n    &quot;net/http&quot;\n    &quot;sync&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\n \nfunc createStdioClient() (client.Client, error) {\n    // Create client that spawns a subprocess\n    c, err := client.NewStdioMCPClient(\n        &quot;go&quot;, []string{}, &quot;run&quot;, &quot;/path/to/server/main.go&quot;,\n    )\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to create STDIO client: %w&quot;, err)\n    }\n \n    return c, nil\n}\n \n// With custom environment variables\nfunc createStdioClientWithEnv() (client.Client, error) {\n    env := []string{\n        &quot;LOG_LEVEL=debug&quot;,\n        &quot;DATABASE_URL=sqlite://test.db&quot;,\n    }\n    c, err := client.NewStdioMCPClient(\n        &quot;go&quot;, env, &quot;run&quot;, &quot;/path/to/server/main.go&quot;,\n    )\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to create STDIO client: %w&quot;, err)\n    }\n \n    return c, nil\n}\n","title":"STDIO Client Creation","titles":["Client Basics","Creating Clients"]},"41":{"href":"/clients/basics#streamablehttp-client-creation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createStreamableHTTPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Basic StreamableHTTP client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\thttpTransport, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(server.URL,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">\t\t// Set timeout</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\ttransport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second),</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">\t\t// Set custom headers</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\ttransport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPHeaders</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">\t\t\t&quot;X-Custom-Header&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;custom-value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">\t\t\t&quot;Y-Another-Header&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;another-value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t}),</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">\t\t// With custom HTTP client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\ttransport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPBasicClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to create StreamableHTTP transport: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(httpTransport)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createStreamableHTTPClient() client.Client {\n    // Basic StreamableHTTP client\n\thttpTransport, err := transport.NewStreamableHTTP(server.URL,\n\t\t// Set timeout\n\t\ttransport.WithHTTPTimeout(30*time.Second),\n\t\t// Set custom headers\n\t\ttransport.WithHTTPHeaders(map[string]string{\n\t\t\t&quot;X-Custom-Header&quot;: &quot;custom-value&quot;,\n\t\t\t&quot;Y-Another-Header&quot;: &quot;another-value&quot;,\n\t\t}),\n\t\t// With custom HTTP client\n\t\ttransport.WithHTTPBasicClient(&amp;http.Client{}),\n\t)\n    if err != nil {\n        log.Fatalf(&quot;Failed to create StreamableHTTP transport: %v&quot;, err)\n    }\n    c := client.NewClient(httpTransport)\n    return c\n}\n","title":"StreamableHTTP Client Creation","titles":["Client Basics","Creating Clients"]},"42":{"href":"/clients/basics#sse-client-creation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Basic SSE client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\tc, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(testServer.URL</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">\t\t// Set custom headers</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">\t\tWithHeaders</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">\t\t\t&quot;X-Custom-Header&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;custom-value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">\t\t\t&quot;Y-Another-Header&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;another-value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createSSEClient() client.Client {\n    // Basic SSE client\n\tc, err := NewSSEMCPClient(testServer.URL+&quot;/sse&quot;,\n\t\t// Set custom headers\n\t\tWithHeaders(map[string]string{\n\t\t\t&quot;X-Custom-Header&quot;: &quot;custom-value&quot;,\n\t\t\t&quot;Y-Another-Header&quot;: &quot;another-value&quot;,\n\t\t}),\n\t)\n    return c\n}\n","title":"SSE Client Creation","titles":["Client Basics","Creating Clients"]},"43":{"href":"/clients/basics#client-lifecycle","html":"\n<p>Understanding the client lifecycle is crucial for proper resource management and error handling.</p>\n","isPage":false,"text":"\nUnderstanding the client lifecycle is crucial for proper resource management and error handling.\n","title":"Client Lifecycle","titles":["Client Basics"]},"44":{"href":"/clients/basics#lifecycle-stages","html":"\n<ol>\n<li><strong>Creation</strong> - Instantiate the client</li>\n<li><strong>Initialization</strong> - Establish connection and exchange capabilities</li>\n<li><strong>Operation</strong> - Use tools, resources, and prompts</li>\n<li><strong>Cleanup</strong> - Close connections and free resources</li>\n</ol>\n","isPage":false,"text":"\n\nCreation - Instantiate the client\nInitialization - Establish connection and exchange capabilities\nOperation - Use tools, resources, and prompts\nCleanup - Close connections and free resources\n\n","title":"Lifecycle Stages","titles":["Client Basics","Client Lifecycle"]},"45":{"href":"/clients/basics#complete-lifecycle-example","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateClientLifecycle</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 1. Creation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server-command&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client creation failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Ensure cleanup happens</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> closeErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); closeErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error closing client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, closeErr)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 2. Initialization</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client initialization failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 3. Operation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> performClientOperations</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client operations failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // 4. Cleanup (handled by defer)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> performClientOperations</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List available tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Found </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> tools&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use the tools</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name:      tool.Name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;example input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;format&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            continue</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc demonstrateClientLifecycle() error {\n    // 1. Creation\n    c, err := client.NewSSEMCPClient(&quot;server-command&quot;)\n    if err != nil {\n        return fmt.Errorf(&quot;client creation failed: %w&quot;, err)\n    }\n \n    // Ensure cleanup happens\n    defer func() {\n        if closeErr := c.Close(); closeErr != nil {\n            log.Printf(&quot;Error closing client: %v&quot;, closeErr)\n        }\n    }()\n \n    ctx := context.Background()\n \n    // 2. Initialization\n    if err := c.Initialize(ctx); err != nil {\n        return fmt.Errorf(&quot;client initialization failed: %w&quot;, err)\n    }\n \n    // 3. Operation\n    if err := performClientOperations(ctx, c); err != nil {\n        return fmt.Errorf(&quot;client operations failed: %w&quot;, err)\n    }\n \n    // 4. Cleanup (handled by defer)\n    return nil\n}\n \nfunc performClientOperations(ctx context.Context, c client.Client) error {\n    // List available tools\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        return err\n    }\n \n    log.Printf(&quot;Found %d tools&quot;, len(tools.Tools))\n \n    // Use the tools\n    for _, tool := range tools.Tools {\n        result, err := c.CallTool(ctx, mcp.CallToolRequest{\n            Params: mcp.CallToolRequestParams{\n                Name:      tool.Name,\n                Arguments: map[string]interface{}{\n                    &quot;input&quot;: &quot;example input&quot;,\n                    &quot;format&quot;: &quot;json&quot;,\n                },\n            },\n        })\n        if err != nil {\n            log.Printf(&quot;Tool %s failed: %v&quot;, tool.Name, err)\n            continue\n        }\n \n        log.Printf(&quot;Tool %s result: %+v&quot;, tool.Name, result)\n    }\n \n    return nil\n}\n","title":"Complete Lifecycle Example","titles":["Client Basics","Client Lifecycle"]},"46":{"href":"/clients/basics#initialization-process","html":"\n<p>The initialization process establishes the MCP connection and exchanges capabilities:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> initializeClientWithDetails</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize with custom client info</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    initReq </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ProtocolVersion: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2024-11-05&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Capabilities: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Tools:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolsCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Resources: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourcesCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Prompts:   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptsCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ClientInfo: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientInfo</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;My Application&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Version: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">InitializeWithRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, initReq)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;initialization failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Connected to server: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> v</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result.ServerInfo.Name, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result.ServerInfo.Version)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server capabilities: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result.Capabilities)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe initialization process establishes the MCP connection and exchanges capabilities:\nfunc initializeClientWithDetails(ctx context.Context, c client.Client) error {\n    // Initialize with custom client info\n    initReq := mcp.InitializeRequest{\n        Params: mcp.InitializeRequestParams{\n            ProtocolVersion: &quot;2024-11-05&quot;,\n            Capabilities: mcp.ClientCapabilities{\n                Tools:     &amp;mcp.ToolsCapability{},\n                Resources: &amp;mcp.ResourcesCapability{},\n                Prompts:   &amp;mcp.PromptsCapability{},\n            },\n            ClientInfo: mcp.ClientInfo{\n                Name:    &quot;My Application&quot;,\n                Version: &quot;1.0.0&quot;,\n            },\n        },\n    }\n \n    result, err := c.InitializeWithRequest(ctx, initReq)\n    if err != nil {\n        return fmt.Errorf(&quot;initialization failed: %w&quot;, err)\n    }\n \n    log.Printf(&quot;Connected to server: %s v%s&quot;, \n        result.ServerInfo.Name, \n        result.ServerInfo.Version)\n    \n    log.Printf(&quot;Server capabilities: %+v&quot;, result.Capabilities)\n \n    return nil\n}\n","title":"Initialization Process","titles":["Client Basics","Client Lifecycle"]},"47":{"href":"/clients/basics#graceful-shutdown","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ManagedClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cancel </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CancelFunc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    done   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewManagedClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">clientType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> clientType {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stdio&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server-command&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;streamablehttp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown client type: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, clientType)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client: c,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx:    ctx,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cancel: cancel,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        done:   </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize in background</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(mc.done)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Client initialization failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mc, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">mc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WaitForReady</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">timeout</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mc.done:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(timeout):</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client initialization timeout&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mc.ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mc.ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">mc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Wait for initialization to complete or timeout</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mc.done:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Timeout waiting for client shutdown&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ManagedClient struct {\n    client client.Client\n    ctx    context.Context\n    cancel context.CancelFunc\n    done   chan struct{}\n}\n \nfunc NewManagedClient(clientType, address string) (*ManagedClient, error) {\n    var c client.Client\n    var err error\n \n    switch clientType {\n    case &quot;stdio&quot;:\n        c, err = client.NewSSEMCPClient(&quot;server-command&quot;)\n    case &quot;streamablehttp&quot;:\n        c = client.NewStreamableHttpClient(address)\n    case &quot;sse&quot;:\n        c = client.NewSSEMCPClient(address)\n    default:\n        return nil, fmt.Errorf(&quot;unknown client type: %s&quot;, clientType)\n    }\n \n    if err != nil {\n        return nil, err\n    }\n \n    ctx, cancel := context.WithCancel(context.Background())\n \n    mc := &amp;ManagedClient{\n        client: c,\n        ctx:    ctx,\n        cancel: cancel,\n        done:   make(chan struct{}),\n    }\n \n    // Initialize in background\n    go func() {\n        defer close(mc.done)\n        if err := c.Initialize(ctx); err != nil {\n            log.Printf(&quot;Client initialization failed: %v&quot;, err)\n        }\n    }()\n \n    return mc, nil\n}\n \nfunc (mc *ManagedClient) WaitForReady(timeout time.Duration) error {\n    select {\n    case &lt;-mc.done:\n        return nil\n    case &lt;-time.After(timeout):\n        return fmt.Errorf(&quot;client initialization timeout&quot;)\n    case &lt;-mc.ctx.Done():\n        return mc.ctx.Err()\n    }\n}\n \nfunc (mc *ManagedClient) Close() error {\n    mc.cancel()\n    \n    // Wait for initialization to complete or timeout\n    select {\n    case &lt;-mc.done:\n    case &lt;-time.After(5 * time.Second):\n        log.Println(&quot;Timeout waiting for client shutdown&quot;)\n    }\n \n    return mc.client.Close()\n}\n","title":"Graceful Shutdown","titles":["Client Basics","Client Lifecycle"]},"48":{"href":"/clients/basics#error-handling","html":"\n<p>Proper error handling is essential for robust client applications.</p>\n","isPage":false,"text":"\nProper error handling is essential for robust client applications.\n","title":"Error Handling","titles":["Client Basics"]},"49":{"href":"/clients/basics#error-types","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Connection errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrConnectionFailed </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;connection failed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrConnectionLost   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;connection lost&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrTimeout          </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation timeout&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Protocol errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrInvalidResponse    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid response&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrProtocolViolation  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;protocol violation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrUnsupportedVersion </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unsupported protocol version&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Operation errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrToolNotFound       </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tool not found&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrResourceNotFound   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resource not found&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrInvalidArguments   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid arguments&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrPermissionDenied   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;permission denied&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n// Connection errors\nvar (\n    ErrConnectionFailed = errors.New(&quot;connection failed&quot;)\n    ErrConnectionLost   = errors.New(&quot;connection lost&quot;)\n    ErrTimeout          = errors.New(&quot;operation timeout&quot;)\n)\n \n// Protocol errors\nvar (\n    ErrInvalidResponse    = errors.New(&quot;invalid response&quot;)\n    ErrProtocolViolation  = errors.New(&quot;protocol violation&quot;)\n    ErrUnsupportedVersion = errors.New(&quot;unsupported protocol version&quot;)\n)\n \n// Operation errors\nvar (\n    ErrToolNotFound       = errors.New(&quot;tool not found&quot;)\n    ErrResourceNotFound   = errors.New(&quot;resource not found&quot;)\n    ErrInvalidArguments   = errors.New(&quot;invalid arguments&quot;)\n    ErrPermissionDenied   = errors.New(&quot;permission denied&quot;)\n)\n","title":"Error Types","titles":["Client Basics","Error Handling"]},"50":{"href":"/clients/basics#comprehensive-error-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleClientErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;example_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;param&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Connection errors - may be recoverable</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrConnectionLost):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Connection lost, attempting reconnect...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> reconnectErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> reconnectClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c); reconnectErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Reconnection failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, reconnectErr)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Retry the operation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleClientErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrTimeout):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Operation timed out, retrying with longer timeout...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">60</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleClientErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Protocol errors - usually not recoverable</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrProtocolViolation):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Protocol violation: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrUnsupportedVersion):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Unsupported protocol version: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Operation errors - check and fix request</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrToolNotFound):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Maybe list available tools and suggest alternatives</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">            suggestAlternativeTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrInvalidArguments):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Invalid arguments: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Maybe get tool schema and show required parameters</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">            showToolSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;example_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrPermissionDenied):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Permission denied: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Maybe prompt for authentication</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Unknown errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Unexpected error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Process successful result</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> reconnectClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Close existing connection</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error closing client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Wait before reconnecting</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Reinitialize</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> suggestAlternativeTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to list tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools:&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name, tool.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> showToolSchema</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to list tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tool.Name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> toolName {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool schema for </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">:&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, toolName)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Description: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Input schema: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.InputSchema)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> not found&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, toolName)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleClientErrors(ctx context.Context, c client.Client) {\n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name: &quot;example_tool&quot;,\n            Arguments: map[string]interface{}{\n                &quot;param&quot;: &quot;value&quot;,\n            },\n        },\n    })\n \n    if err != nil {\n        switch {\n        // Connection errors - may be recoverable\n        case errors.Is(err, client.ErrConnectionLost):\n            log.Println(&quot;Connection lost, attempting reconnect...&quot;)\n            if reconnectErr := reconnectClient(c); reconnectErr != nil {\n                log.Printf(&quot;Reconnection failed: %v&quot;, reconnectErr)\n                return\n            }\n            // Retry the operation\n            return handleClientErrors(ctx, c)\n \n        case errors.Is(err, client.ErrTimeout):\n            log.Println(&quot;Operation timed out, retrying with longer timeout...&quot;)\n            ctx, cancel := context.WithTimeout(context.Background(), 60*time.Second)\n            defer cancel()\n            return handleClientErrors(ctx, c)\n \n        // Protocol errors - usually not recoverable\n        case errors.Is(err, client.ErrProtocolViolation):\n            log.Printf(&quot;Protocol violation: %v&quot;, err)\n            return\n \n        case errors.Is(err, client.ErrUnsupportedVersion):\n            log.Printf(&quot;Unsupported protocol version: %v&quot;, err)\n            return\n \n        // Operation errors - check and fix request\n        case errors.Is(err, client.ErrToolNotFound):\n            log.Printf(&quot;Tool not found: %v&quot;, err)\n            // Maybe list available tools and suggest alternatives\n            suggestAlternativeTools(ctx, c)\n            return\n \n        case errors.Is(err, client.ErrInvalidArguments):\n            log.Printf(&quot;Invalid arguments: %v&quot;, err)\n            // Maybe get tool schema and show required parameters\n            showToolSchema(ctx, c, &quot;example_tool&quot;)\n            return\n \n        case errors.Is(err, client.ErrPermissionDenied):\n            log.Printf(&quot;Permission denied: %v&quot;, err)\n            // Maybe prompt for authentication\n            return\n \n        // Unknown errors\n        default:\n            log.Printf(&quot;Unexpected error: %v&quot;, err)\n            return\n        }\n    }\n \n    // Process successful result\n    log.Printf(&quot;Tool result: %+v&quot;, result)\n}\n \nfunc reconnectClient(c client.Client) error {\n    // Close existing connection\n    if err := c.Close(); err != nil {\n        log.Printf(&quot;Error closing client: %v&quot;, err)\n    }\n \n    // Wait before reconnecting\n    time.Sleep(1 * time.Second)\n \n    // Reinitialize\n    ctx, cancel := context.WithTimeout(context.Background(), 30*time.Second)\n    defer cancel()\n \n    return c.Initialize(ctx)\n}\n \nfunc suggestAlternativeTools(ctx context.Context, c client.Client) {\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        log.Printf(&quot;Failed to list tools: %v&quot;, err)\n        return\n    }\n \n    log.Println(&quot;Available tools:&quot;)\n    for _, tool := range tools.Tools {\n        log.Printf(&quot;- %s: %s&quot;, tool.Name, tool.Description)\n    }\n}\n \nfunc showToolSchema(ctx context.Context, c client.Client, toolName string) {\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        log.Printf(&quot;Failed to list tools: %v&quot;, err)\n        return\n    }\n \n    for _, tool := range tools.Tools {\n        if tool.Name == toolName {\n            log.Printf(&quot;Tool schema for %s:&quot;, toolName)\n            log.Printf(&quot;Description: %s&quot;, tool.Description)\n            log.Printf(&quot;Input schema: %+v&quot;, tool.InputSchema)\n            return\n        }\n    }\n \n    log.Printf(&quot;Tool %s not found&quot;, toolName)\n}\n","title":"Comprehensive Error Handling","titles":["Client Basics","Error Handling"]},"51":{"href":"/clients/basics#retry-logic-with-exponential-backoff","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RetryConfig</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    MaxRetries      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    InitialDelay    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    MaxDelay        </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    BackoffFactor   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    RetryableErrors []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> DefaultRetryConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RetryConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RetryConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MaxRetries:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        InitialDelay:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MaxDelay:      </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        BackoffFactor: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        RetryableErrors: []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            client.ErrConnectionLost,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            client.ErrTimeout,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            client.ErrConnectionFailed,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rc </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RetryConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsRetryable</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, retryableErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.RetryableErrors {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, retryableErr) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> WithRetry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">T</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">](</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">config</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RetryConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">operation</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">T</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)) (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">T</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> lastErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> zero </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">T</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> config.MaxRetries; attempt</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> operation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        lastErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Don&#x27;t retry non-retryable errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsRetryable</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Don&#x27;t retry on last attempt</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> config.MaxRetries {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Calculate delay with exponential backoff</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        delay </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.InitialDelay) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> math.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Pow</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.BackoffFactor, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(attempt)))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> delay </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> config.MaxDelay {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            delay </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> config.MaxDelay</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Attempt </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed, retrying in </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, attempt</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, delay, err)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Wait with context cancellation support</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(delay):</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> zero, ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> zero, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed after </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> attempts: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, config.MaxRetries</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, lastErr)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage example</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callToolWithRetry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    config </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> DefaultRetryConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> WithRetry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, config, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype RetryConfig struct {\n    MaxRetries      int\n    InitialDelay    time.Duration\n    MaxDelay        time.Duration\n    BackoffFactor   float64\n    RetryableErrors []error\n}\n \nfunc DefaultRetryConfig() RetryConfig {\n    return RetryConfig{\n        MaxRetries:    3,\n        InitialDelay:  1 * time.Second,\n        MaxDelay:      30 * time.Second,\n        BackoffFactor: 2.0,\n        RetryableErrors: []error{\n            client.ErrConnectionLost,\n            client.ErrTimeout,\n            client.ErrConnectionFailed,\n        },\n    }\n}\n \nfunc (rc RetryConfig) IsRetryable(err error) bool {\n    for _, retryableErr := range rc.RetryableErrors {\n        if errors.Is(err, retryableErr) {\n            return true\n        }\n    }\n    return false\n}\n \nfunc WithRetry[T any](ctx context.Context, config RetryConfig, operation func() (T, error)) (T, error) {\n    var lastErr error\n    var zero T\n \n    for attempt := 0; attempt &lt;= config.MaxRetries; attempt++ {\n        result, err := operation()\n        if err == nil {\n            return result, nil\n        }\n \n        lastErr = err\n \n        // Don&#x27;t retry non-retryable errors\n        if !config.IsRetryable(err) {\n            break\n        }\n \n        // Don&#x27;t retry on last attempt\n        if attempt == config.MaxRetries {\n            break\n        }\n \n        // Calculate delay with exponential backoff\n        delay := time.Duration(float64(config.InitialDelay) * math.Pow(config.BackoffFactor, float64(attempt)))\n        if delay &gt; config.MaxDelay {\n            delay = config.MaxDelay\n        }\n \n        log.Printf(&quot;Attempt %d failed, retrying in %v: %v&quot;, attempt+1, delay, err)\n \n        // Wait with context cancellation support\n        select {\n        case &lt;-time.After(delay):\n        case &lt;-ctx.Done():\n            return zero, ctx.Err()\n        }\n    }\n \n    return zero, fmt.Errorf(&quot;failed after %d attempts: %w&quot;, config.MaxRetries+1, lastErr)\n}\n \n// Usage example\nfunc callToolWithRetry(ctx context.Context, c client.Client, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    config := DefaultRetryConfig()\n    \n    return WithRetry(ctx, config, func() (*mcp.CallToolResult, error) {\n        return c.CallTool(ctx, req)\n    })\n}\n","title":"Retry Logic with Exponential Backoff","titles":["Client Basics","Error Handling"]},"52":{"href":"/clients/basics#context-and-timeout-management","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateContextUsage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Operation with timeout</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;long_running_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;duration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">60</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// seconds</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, context.DeadlineExceeded) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call timed out&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool completed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateCancellation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start operation in goroutine</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;long_running_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, context.Canceled) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call was cancelled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool completed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Cancel after 5 seconds</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Wait a bit to see the cancellation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc demonstrateContextUsage(c client.Client) {\n    // Operation with timeout\n    ctx, cancel := context.WithTimeout(context.Background(), 30*time.Second)\n    defer cancel()\n \n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name: &quot;long_running_tool&quot;,\n            Arguments: map[string]interface{}{\n                &quot;duration&quot;: 60, // seconds\n            },\n        },\n    })\n \n    if err != nil {\n        if errors.Is(err, context.DeadlineExceeded) {\n            log.Println(&quot;Tool call timed out&quot;)\n        } else {\n            log.Printf(&quot;Tool call failed: %v&quot;, err)\n        }\n        return\n    }\n \n    log.Printf(&quot;Tool completed: %+v&quot;, result)\n}\n \nfunc demonstrateCancellation(c client.Client) {\n    ctx, cancel := context.WithCancel(context.Background())\n \n    // Start operation in goroutine\n    go func() {\n        result, err := c.CallTool(ctx, mcp.CallToolRequest{\n            Params: mcp.CallToolRequestParams{\n                Name: &quot;long_running_tool&quot;,\n            },\n        })\n \n        if err != nil {\n            if errors.Is(err, context.Canceled) {\n                log.Println(&quot;Tool call was cancelled&quot;)\n            } else {\n                log.Printf(&quot;Tool call failed: %v&quot;, err)\n            }\n            return\n        }\n \n        log.Printf(&quot;Tool completed: %+v&quot;, result)\n    }()\n \n    // Cancel after 5 seconds\n    time.Sleep(5 * time.Second)\n    cancel()\n    \n    // Wait a bit to see the cancellation\n    time.Sleep(1 * time.Second)\n}\n","title":"Context and Timeout Management","titles":["Client Basics","Error Handling"]},"53":{"href":"/clients/basics#connection-monitoring","html":"\n","isPage":false,"text":"\n","title":"Connection Monitoring","titles":["Client Basics"]},"54":{"href":"/clients/basics#health-checks","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ClientHealthMonitor</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    interval </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    timeout  </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    healthy  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewClientHealthMonitor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">interval</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">timeout</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientHealthMonitor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientHealthMonitor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client:   c,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        interval: interval,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        timeout:  timeout,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        healthy:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">chm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientHealthMonitor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ticker </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTicker</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(chm.interval)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ticker.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ticker.C:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            chm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">checkHealth</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">chm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientHealthMonitor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">checkHealth</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, chm.timeout)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Try to list tools as a health check</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> chm.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    chm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    chm.healthy </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    chm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Health check failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">chm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientHealthMonitor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsHealthy</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    chm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> chm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> chm.healthy</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ClientHealthMonitor struct {\n    client   client.Client\n    interval time.Duration\n    timeout  time.Duration\n    healthy  bool\n    mutex    sync.RWMutex\n}\n \nfunc NewClientHealthMonitor(c client.Client, interval, timeout time.Duration) *ClientHealthMonitor {\n    return &amp;ClientHealthMonitor{\n        client:   c,\n        interval: interval,\n        timeout:  timeout,\n        healthy:  false,\n    }\n}\n \nfunc (chm *ClientHealthMonitor) Start(ctx context.Context) {\n    ticker := time.NewTicker(chm.interval)\n    defer ticker.Stop()\n \n    for {\n        select {\n        case &lt;-ctx.Done():\n            return\n        case &lt;-ticker.C:\n            chm.checkHealth(ctx)\n        }\n    }\n}\n \nfunc (chm *ClientHealthMonitor) checkHealth(ctx context.Context) {\n    ctx, cancel := context.WithTimeout(ctx, chm.timeout)\n    defer cancel()\n \n    // Try to list tools as a health check\n    _, err := chm.client.ListTools(ctx)\n    \n    chm.mutex.Lock()\n    chm.healthy = (err == nil)\n    chm.mutex.Unlock()\n \n    if err != nil {\n        log.Printf(&quot;Health check failed: %v&quot;, err)\n    }\n}\n \nfunc (chm *ClientHealthMonitor) IsHealthy() bool {\n    chm.mutex.RLock()\n    defer chm.mutex.RUnlock()\n    return chm.healthy\n}\n","title":"Health Checks","titles":["Client Basics","Connection Monitoring"]},"55":{"href":"/clients/basics#connection-recovery","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ResilientClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    factory    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client     </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex      </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    recovering </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewResilientClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">factory</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        factory: factory,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ensureConnected</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;&amp;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">rc.recovering {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Double-check after acquiring write lock</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;&amp;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">rc.recovering {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.recovering </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() { rc.recovering </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Close existing client if any</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create new client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    newClient, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">factory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to create client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize new client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> newClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        newClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to initialize client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> newClient</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ensureConnected</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isConnectionError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Mark for recovery and retry once</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rc.recovering </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> retryErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ensureConnected</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); retryErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;recovery failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, retryErr)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isConnectionError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrConnectionLost) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">           errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrConnectionFailed)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ResilientClient struct {\n    factory    func() (client.Client, error)\n    client     client.Client\n    mutex      sync.RWMutex\n    recovering bool\n}\n \nfunc NewResilientClient(factory func() (client.Client, error)) *ResilientClient {\n    return &amp;ResilientClient{\n        factory: factory,\n    }\n}\n \nfunc (rc *ResilientClient) ensureConnected(ctx context.Context) error {\n    rc.mutex.RLock()\n    if rc.client != nil &amp;&amp; !rc.recovering {\n        rc.mutex.RUnlock()\n        return nil\n    }\n    rc.mutex.RUnlock()\n \n    rc.mutex.Lock()\n    defer rc.mutex.Unlock()\n \n    // Double-check after acquiring write lock\n    if rc.client != nil &amp;&amp; !rc.recovering {\n        return nil\n    }\n \n    rc.recovering = true\n    defer func() { rc.recovering = false }()\n \n    // Close existing client if any\n    if rc.client != nil {\n        rc.client.Close()\n    }\n \n    // Create new client\n    newClient, err := rc.factory()\n    if err != nil {\n        return fmt.Errorf(&quot;failed to create client: %w&quot;, err)\n    }\n \n    // Initialize new client\n    if err := newClient.Initialize(ctx); err != nil {\n        newClient.Close()\n        return fmt.Errorf(&quot;failed to initialize client: %w&quot;, err)\n    }\n \n    rc.client = newClient\n    return nil\n}\n \nfunc (rc *ResilientClient) CallTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    if err := rc.ensureConnected(ctx); err != nil {\n        return nil, err\n    }\n \n    rc.mutex.RLock()\n    client := rc.client\n    rc.mutex.RUnlock()\n \n    result, err := client.CallTool(ctx, req)\n    if err != nil &amp;&amp; isConnectionError(err) {\n        // Mark for recovery and retry once\n        rc.mutex.Lock()\n        rc.recovering = true\n        rc.mutex.Unlock()\n \n        if retryErr := rc.ensureConnected(ctx); retryErr != nil {\n            return nil, fmt.Errorf(&quot;recovery failed: %w&quot;, retryErr)\n        }\n \n        rc.mutex.RLock()\n        client = rc.client\n        rc.mutex.RUnlock()\n \n        return client.CallTool(ctx, req)\n    }\n \n    return result, err\n}\n \nfunc isConnectionError(err error) bool {\n    return errors.Is(err, client.ErrConnectionLost) ||\n           errors.Is(err, client.ErrConnectionFailed)\n}\n","title":"Connection Recovery","titles":["Client Basics","Connection Monitoring"]},"56":{"href":"/clients/basics#next-steps","html":"\n<ul>\n<li><strong><a href=\"/clients/operations\">Client Operations</a></strong> - Learn to use tools, resources, and prompts</li>\n<li><strong><a href=\"/clients/transports\">Client Transports</a></strong> - Explore transport-specific features</li>\n</ul>","isPage":false,"text":"\n\nClient Operations - Learn to use tools, resources, and prompts\nClient Transports - Explore transport-specific features\n","title":"Next Steps","titles":["Client Basics"]},"57":{"href":"/clients#building-mcp-clients","html":"</header>\n<p>Learn how to build MCP clients that connect to and interact with MCP servers. This section covers client creation, operations, and transport-specific implementations.</p>\n","isPage":true,"text":"\nLearn how to build MCP clients that connect to and interact with MCP servers. This section covers client creation, operations, and transport-specific implementations.\n","title":"Building MCP Clients","titles":[]},"58":{"href":"/clients#overview","html":"\n<p>MCP clients connect to servers to access tools, resources, and prompts. MCP-Go provides client implementations for all supported transports, making it easy to integrate MCP functionality into your applications.</p>\n","isPage":false,"text":"\nMCP clients connect to servers to access tools, resources, and prompts. MCP-Go provides client implementations for all supported transports, making it easy to integrate MCP functionality into your applications.\n","title":"Overview","titles":["Building MCP Clients"]},"59":{"href":"/clients#what-youll-learn","html":"\n<ul>\n<li><strong><a href=\"/clients/basics\">Client Basics</a></strong> - Creating and managing client lifecycle</li>\n<li><strong><a href=\"/clients/operations\">Client Operations</a></strong> - Using tools, resources, and prompts</li>\n<li><strong><a href=\"/clients/transports\">Client Transports</a></strong> - Transport-specific client implementations</li>\n</ul>\n","isPage":false,"text":"\n\nClient Basics - Creating and managing client lifecycle\nClient Operations - Using tools, resources, and prompts\nClient Transports - Transport-specific client implementations\n\n","title":"What You&#x27;ll Learn","titles":["Building MCP Clients"]},"60":{"href":"/clients#quick-example","html":"\n<p>Here&#x27;s a complete example showing how to create and use an MCP client:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create STDIO client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{} , </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize the connection</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, initRequest); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Discover available capabilities</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateClientOperations</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateClientOperations</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List available tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to list tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name, tool.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List available resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resources, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to list resources: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Available resources: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resources.Resources))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources.Resources {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resource.URI, resource.Name)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call a tool if available</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Calling tool: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name: tool.Name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;example input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;format&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tool call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Read a resource if available</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resources.Resources) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources.Resources[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Reading resource: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resource.URI)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        content, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI: resource.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resource read failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resource content: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, content)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nHere&#x27;s a complete example showing how to create and use an MCP client:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\n \nfunc main() {\n    // Create STDIO client\n    c, err := client.NewStdioMCPClient(\n        &quot;go&quot;, []string{} , &quot;run&quot;, &quot;/path/to/server/main.go&quot;,\n    )\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer c.Close()\n \n    ctx := context.Background()\n \n    // Initialize the connection\n    if err := c.Initialize(ctx, initRequest); err != nil {\n        log.Fatal(err)\n    }\n \n    // Discover available capabilities\n    if err := demonstrateClientOperations(ctx, c); err != nil {\n        log.Fatal(err)\n    }\n}\n \nfunc demonstrateClientOperations(ctx context.Context, c client.Client) error {\n    // List available tools\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        return fmt.Errorf(&quot;failed to list tools: %w&quot;, err)\n    }\n \n    fmt.Printf(&quot;Available tools: %d\\n&quot;, len(tools.Tools))\n    for _, tool := range tools.Tools {\n        fmt.Printf(&quot;- %s: %s\\n&quot;, tool.Name, tool.Description)\n    }\n \n    // List available resources\n    resources, err := c.ListResources(ctx)\n    if err != nil {\n        return fmt.Errorf(&quot;failed to list resources: %w&quot;, err)\n    }\n \n    fmt.Printf(&quot;\\nAvailable resources: %d\\n&quot;, len(resources.Resources))\n    for _, resource := range resources.Resources {\n        fmt.Printf(&quot;- %s: %s\\n&quot;, resource.URI, resource.Name)\n    }\n \n    // Call a tool if available\n    if len(tools.Tools) &gt; 0 {\n        tool := tools.Tools[0]\n        fmt.Printf(&quot;\\nCalling tool: %s\\n&quot;, tool.Name)\n \n        result, err := c.CallTool(ctx, mcp.CallToolRequest{\n            Params: mcp.CallToolRequestParams{\n                Name: tool.Name,\n                Arguments: map[string]interface{}{\n                    &quot;input&quot;: &quot;example input&quot;,\n                    &quot;format&quot;: &quot;text&quot;,\n                },\n            },\n        })\n        if err != nil {\n            return fmt.Errorf(&quot;tool call failed: %w&quot;, err)\n        }\n \n        fmt.Printf(&quot;Tool result: %+v\\n&quot;, result)\n    }\n \n    // Read a resource if available\n    if len(resources.Resources) &gt; 0 {\n        resource := resources.Resources[0]\n        fmt.Printf(&quot;\\nReading resource: %s\\n&quot;, resource.URI)\n \n        content, err := c.ReadResource(ctx, mcp.ReadResourceRequest{\n            Params: mcp.ReadResourceRequestParams{\n                URI: resource.URI,\n            },\n        })\n        if err != nil {\n            return fmt.Errorf(&quot;resource read failed: %w&quot;, err)\n        }\n \n        fmt.Printf(&quot;Resource content: %+v\\n&quot;, content)\n    }\n \n    return nil\n}\n","title":"Quick Example","titles":["Building MCP Clients"]},"61":{"href":"/clients#client-types-by-transport","html":"\n","isPage":false,"text":"\n","title":"Client Types by Transport","titles":["Building MCP Clients"]},"62":{"href":"/clients#stdio-client","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Command-line applications</li>\n<li>Desktop software integration</li>\n<li>Local development and testing</li>\n<li>Single-server connections</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create STDIO client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server-command&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;arg1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;arg2&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nBest for:\n\nCommand-line applications\nDesktop software integration\nLocal development and testing\nSingle-server connections\n\n// Create STDIO client\nclient, err := client.NewStdioMCPClient(&quot;server-command&quot;, &quot;arg1&quot;, &quot;arg2&quot;)\n","title":"STDIO Client","titles":["Building MCP Clients","Client Types by Transport"]},"63":{"href":"/clients#streamablehttp-client","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Web applications</li>\n<li>Microservice architectures</li>\n<li>Load-balanced deployments</li>\n<li>REST-like interactions</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create StreamableHTTP client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nBest for:\n\nWeb applications\nMicroservice architectures\nLoad-balanced deployments\nREST-like interactions\n\n// Create StreamableHTTP client\nclient := client.NewStreamableHttpClient(&quot;http://localhost:8080/mcp&quot;)\n","title":"StreamableHTTP Client","titles":["Building MCP Clients","Client Types by Transport"]},"64":{"href":"/clients#sse-client","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Real-time web applications</li>\n<li>Browser-based interfaces</li>\n<li>Streaming data scenarios</li>\n<li>Multi-client environments</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create SSE client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp/sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nBest for:\n\nReal-time web applications\nBrowser-based interfaces\nStreaming data scenarios\nMulti-client environments\n\n// Create SSE client\nclient := client.NewSSEMCPClient(&quot;http://localhost:8080/mcp/sse&quot;)\n","title":"SSE Client","titles":["Building MCP Clients","Client Types by Transport"]},"65":{"href":"/clients#in-process-client","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Testing and development</li>\n<li>Embedded scenarios</li>\n<li>High-performance applications</li>\n<li>Library integrations</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create in-process client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(server)</span></span></code></pre>\n","isPage":false,"text":"\nBest for:\n\nTesting and development\nEmbedded scenarios\nHigh-performance applications\nLibrary integrations\n\n// Create in-process client\nclient := client.NewInProcessClient(server)\n","title":"In-Process Client","titles":["Building MCP Clients","Client Types by Transport"]},"66":{"href":"/clients#common-client-patterns","html":"\n","isPage":false,"text":"\n","title":"Common Client Patterns","titles":["Building MCP Clients"]},"67":{"href":"/clients#connection-management","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">errors</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MCPClientManager</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cancel </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CancelFunc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewMCPClientManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">clientType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPClientManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> clientType {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stdio&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server-command&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;http&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown client type: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, clientType)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    manager </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPClientManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client: c,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx:    ctx,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cancel: cancel,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize connection</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to initialize client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> manager, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPClientManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    m.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> m.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nimport (\n    &quot;context&quot;\n    &quot;errors&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;sync&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\n \ntype MCPClientManager struct {\n    client client.Client\n    ctx    context.Context\n    cancel context.CancelFunc\n}\n \nfunc NewMCPClientManager(clientType, address string) (*MCPClientManager, error) {\n    var c client.Client\n    var err error\n \n    switch clientType {\n    case &quot;stdio&quot;:\n        c, err = client.NewStdioMCPClient(&quot;server-command&quot;)\n    case &quot;http&quot;:\n        c = client.NewStreamableHttpClient(address)\n    case &quot;sse&quot;:\n        c = client.NewSSEMCPClient(address)\n    default:\n        return nil, fmt.Errorf(&quot;unknown client type: %s&quot;, clientType)\n    }\n \n    if err != nil {\n        return nil, err\n    }\n \n    ctx, cancel := context.WithCancel(context.Background())\n \n    manager := &amp;MCPClientManager{\n        client: c,\n        ctx:    ctx,\n        cancel: cancel,\n    }\n \n    // Initialize connection\n    if err := c.Initialize(ctx); err != nil {\n        cancel()\n        return nil, fmt.Errorf(&quot;failed to initialize client: %w&quot;, err)\n    }\n \n    return manager, nil\n}\n \nfunc (m *MCPClientManager) Close() error {\n    m.cancel()\n    return m.client.Close()\n}\n","title":"Connection Management","titles":["Building MCP Clients","Common Client Patterns"]},"68":{"href":"/clients#error-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleClientErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Tool call with error handling</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;example_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;param&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrConnectionLost):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Connection lost, attempting reconnect...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Implement reconnection logic</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrToolNotFound):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrInvalidArguments):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Invalid arguments: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Unexpected error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Process successful result</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    processToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleClientErrors(ctx context.Context, c client.Client) {\n    // Tool call with error handling\n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name: &quot;example_tool&quot;,\n            Arguments: map[string]interface{}{\n                &quot;param&quot;: &quot;value&quot;,\n            },\n        },\n    })\n \n    if err != nil {\n        switch {\n        case errors.Is(err, client.ErrConnectionLost):\n            log.Println(&quot;Connection lost, attempting reconnect...&quot;)\n            // Implement reconnection logic\n        case errors.Is(err, client.ErrToolNotFound):\n            log.Printf(&quot;Tool not found: %v&quot;, err)\n        case errors.Is(err, client.ErrInvalidArguments):\n            log.Printf(&quot;Invalid arguments: %v&quot;, err)\n        default:\n            log.Printf(&quot;Unexpected error: %v&quot;, err)\n        }\n        return\n    }\n \n    // Process successful result\n    processToolResult(result)\n}\n","title":"Error Handling","titles":["Building MCP Clients","Common Client Patterns"]},"69":{"href":"/clients#retry-logic","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callToolWithRetry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">maxRetries</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> lastErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> maxRetries; attempt</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        lastErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Don&#x27;t retry certain errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrInvalidArguments) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">           errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, client.ErrToolNotFound) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Exponential backoff</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> maxRetries {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            backoff </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">attempt) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Attempt </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed, retrying in </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, attempt</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, backoff, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(backoff):</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed after </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> attempts: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, maxRetries</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, lastErr)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc callToolWithRetry(ctx context.Context, c client.Client, req mcp.CallToolRequest, maxRetries int) (*mcp.CallToolResult, error) {\n    var lastErr error\n \n    for attempt := 0; attempt &lt;= maxRetries; attempt++ {\n        result, err := c.CallTool(ctx, req)\n        if err == nil {\n            return result, nil\n        }\n \n        lastErr = err\n \n        // Don&#x27;t retry certain errors\n        if errors.Is(err, client.ErrInvalidArguments) ||\n           errors.Is(err, client.ErrToolNotFound) {\n            break\n        }\n \n        // Exponential backoff\n        if attempt &lt; maxRetries {\n            backoff := time.Duration(1&lt;&lt;attempt) * time.Second\n            log.Printf(&quot;Attempt %d failed, retrying in %v: %v&quot;, attempt+1, backoff, err)\n            \n            select {\n            case &lt;-time.After(backoff):\n            case &lt;-ctx.Done():\n                return nil, ctx.Err()\n            }\n        }\n    }\n \n    return nil, fmt.Errorf(&quot;failed after %d attempts: %w&quot;, maxRetries+1, lastErr)\n}\n","title":"Retry Logic","titles":["Building MCP Clients","Common Client Patterns"]},"70":{"href":"/clients#integration-patterns","html":"\n","isPage":false,"text":"\n","title":"Integration Patterns","titles":["Building MCP Clients"]},"71":{"href":"/clients#llm-application-integration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> LLMApplication</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpClient </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    llmClient </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LLMClient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewLLMApplication</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">mcpAddress</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LLMApplication</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpClient </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(mcpAddress)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LLMApplication</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcpClient: mcpClient,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        llmClient: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewLLMClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">app </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LLMApplication</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ProcessUserQuery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">query</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get available tools for the LLM</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app.mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Send query to LLM with available tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    response, toolCalls, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app.llmClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Chat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, query, tools.Tools)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Execute any tool calls</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, toolCall </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> toolCalls {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app.mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name:      toolCall.Name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Arguments: toolCall.Arguments,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tool call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Send tool result back to LLM</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        response, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app.llmClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ContinueWithToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, toolCall.ID, result)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> response, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype LLMApplication struct {\n    mcpClient client.Client\n    llmClient LLMClient\n}\n \nfunc NewLLMApplication(mcpAddress string) (*LLMApplication, error) {\n    mcpClient := client.NewStreamableHttpClient(mcpAddress)\n    \n    ctx := context.Background()\n    if err := mcpClient.Initialize(ctx); err != nil {\n        return nil, err\n    }\n \n    return &amp;LLMApplication{\n        mcpClient: mcpClient,\n        llmClient: NewLLMClient(),\n    }, nil\n}\n \nfunc (app *LLMApplication) ProcessUserQuery(ctx context.Context, query string) (string, error) {\n    // Get available tools for the LLM\n    tools, err := app.mcpClient.ListTools(ctx)\n    if err != nil {\n        return &quot;&quot;, err\n    }\n \n    // Send query to LLM with available tools\n    response, toolCalls, err := app.llmClient.Chat(ctx, query, tools.Tools)\n    if err != nil {\n        return &quot;&quot;, err\n    }\n \n    // Execute any tool calls\n    for _, toolCall := range toolCalls {\n        result, err := app.mcpClient.CallTool(ctx, mcp.CallToolRequest{\n            Params: mcp.CallToolRequestParams{\n                Name:      toolCall.Name,\n                Arguments: toolCall.Arguments,\n            },\n        })\n        if err != nil {\n            return &quot;&quot;, fmt.Errorf(&quot;tool call failed: %w&quot;, err)\n        }\n \n        // Send tool result back to LLM\n        response, err = app.llmClient.ContinueWithToolResult(ctx, toolCall.ID, result)\n        if err != nil {\n            return &quot;&quot;, err\n        }\n    }\n \n    return response, nil\n}\n","title":"LLM Application Integration","titles":["Building MCP Clients","Integration Patterns"]},"72":{"href":"/clients#multi-server-client","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MultiServerClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    clients </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewMultiServerClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MultiServerClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MultiServerClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        clients: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MultiServerClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">name</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">clientType</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> clientType {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;http&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unsupported client type: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, clientType)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to initialize client for </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, name, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.clients[name] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MultiServerClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">serverName</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.clients[serverName]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, serverName)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name:      toolName,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: args,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MultiServerClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetAllTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">][]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    allTools </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">][]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> serverName, c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.clients {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to get tools from </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, serverName, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        allTools[serverName] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> allTools, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype MultiServerClient struct {\n    clients map[string]client.Client\n    mutex   sync.RWMutex\n}\n \nfunc NewMultiServerClient() *MultiServerClient {\n    return &amp;MultiServerClient{\n        clients: make(map[string]client.Client),\n    }\n}\n \nfunc (msc *MultiServerClient) AddServer(name, address string, clientType string) error {\n    msc.mutex.Lock()\n    defer msc.mutex.Unlock()\n \n    var c client.Client\n    var err error\n \n    switch clientType {\n    case &quot;http&quot;:\n        c = client.NewStreamableHttpClient(address)\n    case &quot;sse&quot;:\n        c = client.NewSSEMCPClient(address)\n    default:\n        return fmt.Errorf(&quot;unsupported client type: %s&quot;, clientType)\n    }\n \n    ctx := context.Background()\n    if err := c.Initialize(ctx); err != nil {\n        return fmt.Errorf(&quot;failed to initialize client for %s: %w&quot;, name, err)\n    }\n \n    msc.clients[name] = c\n    return nil\n}\n \nfunc (msc *MultiServerClient) CallTool(ctx context.Context, serverName, toolName string, args map[string]interface{}) (*mcp.CallToolResult, error) {\n    msc.mutex.RLock()\n    c, exists := msc.clients[serverName]\n    msc.mutex.RUnlock()\n \n    if !exists {\n        return nil, fmt.Errorf(&quot;server not found: %s&quot;, serverName)\n    }\n \n    return c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name:      toolName,\n            Arguments: args,\n        },\n    })\n}\n \nfunc (msc *MultiServerClient) GetAllTools(ctx context.Context) (map[string][]mcp.Tool, error) {\n    msc.mutex.RLock()\n    defer msc.mutex.RUnlock()\n \n    allTools := make(map[string][]mcp.Tool)\n \n    for serverName, c := range msc.clients {\n        tools, err := c.ListTools(ctx)\n        if err != nil {\n            return nil, fmt.Errorf(&quot;failed to get tools from %s: %w&quot;, serverName, err)\n        }\n        allTools[serverName] = tools.Tools\n    }\n \n    return allTools, nil\n}\n","title":"Multi-Server Client","titles":["Building MCP Clients","Integration Patterns"]},"73":{"href":"/clients#next-steps","html":"\n<p>Explore each client topic in detail:</p>\n<ul>\n<li><strong><a href=\"/clients/basics\">Client Basics</a></strong> - Client lifecycle and error handling</li>\n<li><strong><a href=\"/clients/operations\">Client Operations</a></strong> - Tools, resources, and prompts</li>\n<li><strong><a href=\"/clients/transports\">Client Transports</a></strong> - Transport-specific implementations</li>\n</ul>","isPage":false,"text":"\nExplore each client topic in detail:\n\nClient Basics - Client lifecycle and error handling\nClient Operations - Tools, resources, and prompts\nClient Transports - Transport-specific implementations\n","title":"Next Steps","titles":["Building MCP Clients"]},"74":{"href":"/clients/operations#client-operations","html":"</header>\n<p>Learn how to use MCP clients to interact with servers through tools, resources, prompts, and subscriptions.</p>\n","isPage":true,"text":"\nLearn how to use MCP clients to interact with servers through tools, resources, prompts, and subscriptions.\n","title":"Client Operations","titles":[]},"75":{"href":"/clients/operations#listing-resources","html":"\n<p>Resources provide read-only access to data. Before reading resources, you typically need to discover what&#x27;s available.</p>\n","isPage":false,"text":"\nResources provide read-only access to data. Before reading resources, you typically need to discover what&#x27;s available.\n","title":"Listing Resources","titles":["Client Operations"]},"76":{"href":"/clients/operations#basic-resource-listing","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">base64</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">encoding/json</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">reflect</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">regexp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List all available resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resources, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to list resources: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available resources: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resources.Resources))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources.Resources {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> (</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">): </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            resource.URI, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            resource.MIMEType, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            resource.Name)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resource.Description </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  Description: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resource.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nimport (\n    &quot;base64&quot;\n    &quot;context&quot;\n    &quot;encoding/json&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;reflect&quot;\n    &quot;regexp&quot;\n    &quot;strings&quot;\n    &quot;sync&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n)\n \nfunc listResources(ctx context.Context, c client.Client) error {\n    // List all available resources\n    resources, err := c.ListResources(ctx)\n    if err != nil {\n        return fmt.Errorf(&quot;failed to list resources: %w&quot;, err)\n    }\n \n    fmt.Printf(&quot;Available resources: %d\\n&quot;, len(resources.Resources))\n    for _, resource := range resources.Resources {\n        fmt.Printf(&quot;- %s (%s): %s\\n&quot;, \n            resource.URI, \n            resource.MIMEType, \n            resource.Name)\n        \n        if resource.Description != &quot;&quot; {\n            fmt.Printf(&quot;  Description: %s\\n&quot;, resource.Description)\n        }\n    }\n \n    return nil\n}\n","title":"Basic Resource Listing","titles":["Client Operations","Listing Resources"]},"77":{"href":"/clients/operations#filtered-resource-listing","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listResourcesByType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">mimeType</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Resource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resources, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Resource</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources.Resources {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resource.MIMEType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mimeType {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            filtered </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(filtered, resource)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listResourcesByPattern</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">pattern</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Resource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resources, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    regex, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> regexp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Compile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(pattern)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid pattern: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Resource</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources.Resources {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> regex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">MatchString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resource.URI) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            filtered </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(filtered, resource)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage examples</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateResourceFiltering</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Find all JSON resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonResources, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listResourcesByType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error listing JSON resources: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Found </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> JSON resources</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonResources))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Find all user-related resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userResources, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listResourcesByPattern</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`users?://.*`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error listing user resources: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Found </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> user resources</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(userResources))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc listResourcesByType(ctx context.Context, c client.Client, mimeType string) ([]mcp.Resource, error) {\n    resources, err := c.ListResources(ctx)\n    if err != nil {\n        return nil, err\n    }\n \n    var filtered []mcp.Resource\n    for _, resource := range resources.Resources {\n        if resource.MIMEType == mimeType {\n            filtered = append(filtered, resource)\n        }\n    }\n \n    return filtered, nil\n}\n \nfunc listResourcesByPattern(ctx context.Context, c client.Client, pattern string) ([]mcp.Resource, error) {\n    resources, err := c.ListResources(ctx)\n    if err != nil {\n        return nil, err\n    }\n \n    regex, err := regexp.Compile(pattern)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;invalid pattern: %w&quot;, err)\n    }\n \n    var filtered []mcp.Resource\n    for _, resource := range resources.Resources {\n        if regex.MatchString(resource.URI) {\n            filtered = append(filtered, resource)\n        }\n    }\n \n    return filtered, nil\n}\n \n// Usage examples\nfunc demonstrateResourceFiltering(ctx context.Context, c client.Client) {\n    // Find all JSON resources\n    jsonResources, err := listResourcesByType(ctx, c, &quot;application/json&quot;)\n    if err != nil {\n        log.Printf(&quot;Error listing JSON resources: %v&quot;, err)\n    } else {\n        fmt.Printf(&quot;Found %d JSON resources\\n&quot;, len(jsonResources))\n    }\n \n    // Find all user-related resources\n    userResources, err := listResourcesByPattern(ctx, c, `users?://.*`)\n    if err != nil {\n        log.Printf(&quot;Error listing user resources: %v&quot;, err)\n    } else {\n        fmt.Printf(&quot;Found %d user resources\\n&quot;, len(userResources))\n    }\n}\n","title":"Filtered Resource Listing","titles":["Client Operations","Listing Resources"]},"78":{"href":"/clients/operations#reading-resources","html":"\n<p>Once you know what resources are available, you can read their content.</p>\n","isPage":false,"text":"\nOnce you know what resources are available, you can read their content.\n","title":"Reading Resources","titles":["Client Operations"]},"79":{"href":"/clients/operations#basic-resource-reading","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI: uri,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to read resource </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, uri, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateResourceReading</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List resources first</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resources, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to list resources: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Read each resource</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources.Resources {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Reading resource: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resource.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, resource.URI)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to read resource </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resource.URI, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            continue</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Process resource contents</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Contents {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Content </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  URI: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, content.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  MIME Type: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, content.MIMEType)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.Text </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  Text: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">truncateString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content.Text, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.Blob </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  Blob: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> bytes</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content.Blob))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> truncateString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">maxLen</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> maxLen {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> s</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> s[:maxLen] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;...&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc readResource(ctx context.Context, c client.Client, uri string) (*mcp.ReadResourceResult, error) {\n    result, err := c.ReadResource(ctx, mcp.ReadResourceRequest{\n        Params: mcp.ReadResourceRequestParams{\n            URI: uri,\n        },\n    })\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to read resource %s: %w&quot;, uri, err)\n    }\n \n    return result, nil\n}\n \nfunc demonstrateResourceReading(ctx context.Context, c client.Client) {\n    // List resources first\n    resources, err := c.ListResources(ctx)\n    if err != nil {\n        log.Printf(&quot;Failed to list resources: %v&quot;, err)\n        return\n    }\n \n    // Read each resource\n    for _, resource := range resources.Resources {\n        fmt.Printf(&quot;\\nReading resource: %s\\n&quot;, resource.URI)\n        \n        result, err := readResource(ctx, c, resource.URI)\n        if err != nil {\n            log.Printf(&quot;Failed to read resource %s: %v&quot;, resource.URI, err)\n            continue\n        }\n \n        // Process resource contents\n        for i, content := range result.Contents {\n            fmt.Printf(&quot;Content %d:\\n&quot;, i+1)\n            fmt.Printf(&quot;  URI: %s\\n&quot;, content.URI)\n            fmt.Printf(&quot;  MIME Type: %s\\n&quot;, content.MIMEType)\n            \n            if content.Text != &quot;&quot; {\n                fmt.Printf(&quot;  Text: %s\\n&quot;, truncateString(content.Text, 100))\n            }\n            \n            if content.Blob != &quot;&quot; {\n                fmt.Printf(&quot;  Blob: %d bytes\\n&quot;, len(content.Blob))\n            }\n        }\n    }\n}\n \nfunc truncateString(s string, maxLen int) string {\n    if len(s) &lt;= maxLen {\n        return s\n    }\n    return s[:maxLen] + &quot;...&quot;\n}\n","title":"Basic Resource Reading","titles":["Client Operations","Reading Resources"]},"80":{"href":"/clients/operations#typed-resource-reading","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper functions for common resource types</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readJSONResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, uri)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Contents) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;no content in resource&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Contents[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.MIMEType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected JSON, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, content.MIMEType)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unmarshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content.Text), </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">data); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to parse JSON: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readTextResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, uri)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Contents) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;no content in resource&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Contents[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HasPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content.MIMEType, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected text, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, content.MIMEType)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.Text, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readBinaryResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, uri)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Contents) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;no content in resource&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Contents[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content.Blob </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;no binary data in resource&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> base64.StdEncoding.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content.Blob)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to decode binary data: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// Helper functions for common resource types\nfunc readJSONResource(ctx context.Context, c client.Client, uri string) (map[string]interface{}, error) {\n    result, err := readResource(ctx, c, uri)\n    if err != nil {\n        return nil, err\n    }\n \n    if len(result.Contents) == 0 {\n        return nil, fmt.Errorf(&quot;no content in resource&quot;)\n    }\n \n    content := result.Contents[0]\n    if content.MIMEType != &quot;application/json&quot; {\n        return nil, fmt.Errorf(&quot;expected JSON, got %s&quot;, content.MIMEType)\n    }\n \n    var data map[string]interface{}\n    if err := json.Unmarshal([]byte(content.Text), &amp;data); err != nil {\n        return nil, fmt.Errorf(&quot;failed to parse JSON: %w&quot;, err)\n    }\n \n    return data, nil\n}\n \nfunc readTextResource(ctx context.Context, c client.Client, uri string) (string, error) {\n    result, err := readResource(ctx, c, uri)\n    if err != nil {\n        return &quot;&quot;, err\n    }\n \n    if len(result.Contents) == 0 {\n        return &quot;&quot;, fmt.Errorf(&quot;no content in resource&quot;)\n    }\n \n    content := result.Contents[0]\n    if !strings.HasPrefix(content.MIMEType, &quot;text/&quot;) {\n        return &quot;&quot;, fmt.Errorf(&quot;expected text, got %s&quot;, content.MIMEType)\n    }\n \n    return content.Text, nil\n}\n \nfunc readBinaryResource(ctx context.Context, c client.Client, uri string) ([]byte, error) {\n    result, err := readResource(ctx, c, uri)\n    if err != nil {\n        return nil, err\n    }\n \n    if len(result.Contents) == 0 {\n        return nil, fmt.Errorf(&quot;no content in resource&quot;)\n    }\n \n    content := result.Contents[0]\n    if content.Blob == &quot;&quot; {\n        return nil, fmt.Errorf(&quot;no binary data in resource&quot;)\n    }\n \n    data, err := base64.StdEncoding.DecodeString(content.Blob)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to decode binary data: %w&quot;, err)\n    }\n \n    return data, nil\n}\n","title":"Typed Resource Reading","titles":["Client Operations","Reading Resources"]},"81":{"href":"/clients/operations#resource-caching","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ResourceCache</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cache </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cacheEntry</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ttl   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cacheEntry</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    timestamp </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewResourceCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ttl</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cache: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cacheEntry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ttl:   ttl,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    entry, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.cache[uri]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Since</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(entry.timestamp) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.ttl {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> entry.result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Set</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">result</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.cache[uri] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cacheEntry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result:    result,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        timestamp: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Check cache first</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cached, found </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri); found {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cached, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Read from server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> readResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, uri)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Cache the result</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Set</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri, result)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ResourceCache struct {\n    cache map[string]cacheEntry\n    mutex sync.RWMutex\n    ttl   time.Duration\n}\n \ntype cacheEntry struct {\n    result    *mcp.ReadResourceResult\n    timestamp time.Time\n}\n \nfunc NewResourceCache(ttl time.Duration) *ResourceCache {\n    return &amp;ResourceCache{\n        cache: make(map[string]cacheEntry),\n        ttl:   ttl,\n    }\n}\n \nfunc (rc *ResourceCache) Get(uri string) (*mcp.ReadResourceResult, bool) {\n    rc.mutex.RLock()\n    defer rc.mutex.RUnlock()\n \n    entry, exists := rc.cache[uri]\n    if !exists || time.Since(entry.timestamp) &gt; rc.ttl {\n        return nil, false\n    }\n \n    return entry.result, true\n}\n \nfunc (rc *ResourceCache) Set(uri string, result *mcp.ReadResourceResult) {\n    rc.mutex.Lock()\n    defer rc.mutex.Unlock()\n \n    rc.cache[uri] = cacheEntry{\n        result:    result,\n        timestamp: time.Now(),\n    }\n}\n \nfunc (rc *ResourceCache) ReadResource(ctx context.Context, c client.Client, uri string) (*mcp.ReadResourceResult, error) {\n    // Check cache first\n    if cached, found := rc.Get(uri); found {\n        return cached, nil\n    }\n \n    // Read from server\n    result, err := readResource(ctx, c, uri)\n    if err != nil {\n        return nil, err\n    }\n \n    // Cache the result\n    rc.Set(uri, result)\n    return result, nil\n}\n","title":"Resource Caching","titles":["Client Operations","Reading Resources"]},"82":{"href":"/clients/operations#calling-tools","html":"\n<p>Tools provide functionality that can be invoked with parameters.</p>\n","isPage":false,"text":"\nTools provide functionality that can be invoked with parameters.\n","title":"Calling Tools","titles":["Client Operations"]},"83":{"href":"/clients/operations#basic-tool-calling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name:      name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: args,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tool call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateToolCalling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List available tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to list tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name, tool.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call a specific tool</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Calling tool: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, tool.Name, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;example input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;format&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Content {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Content </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> (</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">): </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, content.Type, content.Text)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc callTool(ctx context.Context, c client.Client, name string, args map[string]interface{}) (*mcp.CallToolResult, error) {\n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name:      name,\n            Arguments: args,\n        },\n    })\n    if err != nil {\n        return nil, fmt.Errorf(&quot;tool call failed: %w&quot;, err)\n    }\n \n    return result, nil\n}\n \nfunc demonstrateToolCalling(ctx context.Context, c client.Client) {\n    // List available tools\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        log.Printf(&quot;Failed to list tools: %v&quot;, err)\n        return\n    }\n \n    fmt.Printf(&quot;Available tools: %d\\n&quot;, len(tools.Tools))\n    for _, tool := range tools.Tools {\n        fmt.Printf(&quot;- %s: %s\\n&quot;, tool.Name, tool.Description)\n    }\n \n    // Call a specific tool\n    if len(tools.Tools) &gt; 0 {\n        tool := tools.Tools[0]\n        fmt.Printf(&quot;\\nCalling tool: %s\\n&quot;, tool.Name)\n \n        result, err := callTool(ctx, c, tool.Name, map[string]interface{}{\n            &quot;input&quot;: &quot;example input&quot;,\n            &quot;format&quot;: &quot;text&quot;,\n        })\n        if err != nil {\n            log.Printf(&quot;Tool call failed: %v&quot;, err)\n            return\n        }\n \n        fmt.Printf(&quot;Tool result:\\n&quot;)\n        for i, content := range result.Content {\n            fmt.Printf(&quot;Content %d (%s): %s\\n&quot;, i+1, content.Type, content.Text)\n        }\n    }\n}\n","title":"Basic Tool Calling","titles":["Client Operations","Calling Tools"]},"84":{"href":"/clients/operations#tool-schema-validation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateToolArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tool</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    schema </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tool.InputSchema</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Check required properties</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> schema.Required </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, required </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> schema.Required {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args[required]; </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;missing required argument: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, required)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate argument types</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> schema.Properties </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> name, value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            propSchema, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> schema.Properties[name]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown argument: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, name)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateValue</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(value, propSchema); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid argument </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, name, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateValue</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">value</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">schema</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    schemaType, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> schema[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;schema missing type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> schemaType {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected string, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%T</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;number&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected number, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%T</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;integer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected integer, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%T</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;boolean&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected boolean, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%T</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;array&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value.([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}); </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected array, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%T</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;object&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}); </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected object, got </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%T</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callToolWithValidation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get tool schema</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to list tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, t </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> t.Name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> toolName {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">t</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tool not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, toolName)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate arguments</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateToolArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tool, args); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;argument validation failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call tool</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, toolName, args)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc validateToolArguments(tool mcp.Tool, args map[string]interface{}) error {\n    schema := tool.InputSchema\n    \n    // Check required properties\n    if schema.Required != nil {\n        for _, required := range schema.Required {\n            if _, exists := args[required]; !exists {\n                return fmt.Errorf(&quot;missing required argument: %s&quot;, required)\n            }\n        }\n    }\n \n    // Validate argument types\n    if schema.Properties != nil {\n        for name, value := range args {\n            propSchema, exists := schema.Properties[name]\n            if !exists {\n                return fmt.Errorf(&quot;unknown argument: %s&quot;, name)\n            }\n \n            if err := validateValue(value, propSchema); err != nil {\n                return fmt.Errorf(&quot;invalid argument %s: %w&quot;, name, err)\n            }\n        }\n    }\n \n    return nil\n}\n \nfunc validateValue(value interface{}, schema map[string]any) error {\n    schemaType, ok := schema[&quot;type&quot;].(string)\n    if !ok {\n        return fmt.Errorf(&quot;schema missing type&quot;)\n    }\n    \n    switch schemaType {\n    case &quot;string&quot;:\n        if _, ok := value.(string); !ok {\n            return fmt.Errorf(&quot;expected string, got %T&quot;, value)\n        }\n    case &quot;number&quot;:\n        if _, ok := value.(float64); !ok {\n            return fmt.Errorf(&quot;expected number, got %T&quot;, value)\n        }\n    case &quot;integer&quot;:\n        if _, ok := value.(float64); !ok {\n            return fmt.Errorf(&quot;expected integer, got %T&quot;, value)\n        }\n    case &quot;boolean&quot;:\n        if _, ok := value.(bool); !ok {\n            return fmt.Errorf(&quot;expected boolean, got %T&quot;, value)\n        }\n    case &quot;array&quot;:\n        if _, ok := value.([]interface{}); !ok {\n            return fmt.Errorf(&quot;expected array, got %T&quot;, value)\n        }\n    case &quot;object&quot;:\n        if _, ok := value.(map[string]interface{}); !ok {\n            return fmt.Errorf(&quot;expected object, got %T&quot;, value)\n        }\n    }\n \n    return nil\n}\n \nfunc callToolWithValidation(ctx context.Context, c client.Client, toolName string, args map[string]interface{}) (*mcp.CallToolResult, error) {\n    // Get tool schema\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to list tools: %w&quot;, err)\n    }\n \n    var tool *mcp.Tool\n    for _, t := range tools.Tools {\n        if t.Name == toolName {\n            tool = &amp;t\n            break\n        }\n    }\n \n    if tool == nil {\n        return nil, fmt.Errorf(&quot;tool not found: %s&quot;, toolName)\n    }\n \n    // Validate arguments\n    if err := validateToolArguments(*tool, args); err != nil {\n        return nil, fmt.Errorf(&quot;argument validation failed: %w&quot;, err)\n    }\n \n    // Call tool\n    return callTool(ctx, c, toolName, args)\n}\n","title":"Tool Schema Validation","titles":["Client Operations","Calling Tools"]},"85":{"href":"/clients/operations#batch-tool-operations","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ToolCall</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Arguments </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ToolResult</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Call   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolCall</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Error  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callToolsBatch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">calls</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    results </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(calls))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use goroutines for concurrent calls</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wg </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">WaitGroup</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, call </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> calls {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">index</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolCall</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ToolCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, toolCall.Name, toolCall.Arguments)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            results[index] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Call:   toolCall,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Result: result,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Error:  err,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }(i, call)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Wait</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> results</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateBatchToolCalls</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    calls </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;get_weather&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;location&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;New York&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;get_weather&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;location&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;London&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:         </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:         </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">20</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    results </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> callToolsBatch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, calls)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> results {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Call </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> (</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">):</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result.Call.Name)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Error </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  Error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result.Error)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  Success: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result.Result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ToolCall struct {\n    Name      string\n    Arguments map[string]interface{}\n}\n \ntype ToolResult struct {\n    Call   ToolCall\n    Result *mcp.CallToolResult\n    Error  error\n}\n \nfunc callToolsBatch(ctx context.Context, c client.Client, calls []ToolCall) []ToolResult {\n    results := make([]ToolResult, len(calls))\n    \n    // Use goroutines for concurrent calls\n    var wg sync.WaitGroup\n    for i, call := range calls {\n        wg.Add(1)\n        go func(index int, toolCall ToolCall) {\n            defer wg.Done()\n            \n            result, err := callTool(ctx, c, toolCall.Name, toolCall.Arguments)\n            results[index] = ToolResult{\n                Call:   toolCall,\n                Result: result,\n                Error:  err,\n            }\n        }(i, call)\n    }\n    \n    wg.Wait()\n    return results\n}\n \nfunc demonstrateBatchToolCalls(ctx context.Context, c client.Client) {\n    calls := []ToolCall{\n        {\n            Name: &quot;get_weather&quot;,\n            Arguments: map[string]interface{}{\n                &quot;location&quot;: &quot;New York&quot;,\n            },\n        },\n        {\n            Name: &quot;get_weather&quot;,\n            Arguments: map[string]interface{}{\n                &quot;location&quot;: &quot;London&quot;,\n            },\n        },\n        {\n            Name: &quot;calculate&quot;,\n            Arguments: map[string]interface{}{\n                &quot;operation&quot;: &quot;add&quot;,\n                &quot;x&quot;:         10,\n                &quot;y&quot;:         20,\n            },\n        },\n    }\n \n    results := callToolsBatch(ctx, c, calls)\n    \n    for i, result := range results {\n        fmt.Printf(&quot;Call %d (%s):\\n&quot;, i+1, result.Call.Name)\n        if result.Error != nil {\n            fmt.Printf(&quot;  Error: %v\\n&quot;, result.Error)\n        } else {\n            fmt.Printf(&quot;  Success: %+v\\n&quot;, result.Result)\n        }\n    }\n}\n","title":"Batch Tool Operations","titles":["Client Operations","Calling Tools"]},"86":{"href":"/clients/operations#using-prompts","html":"\n<p>Prompts provide reusable templates for LLM interactions.</p>\n","isPage":false,"text":"\nPrompts provide reusable templates for LLM interactions.\n","title":"Using Prompts","titles":["Client Operations"]},"87":{"href":"/clients/operations#basic-prompt-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name:      name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: args,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to get prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstratePromptUsage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List available prompts</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    prompts, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListPrompts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to list prompts: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available prompts: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(prompts.Prompts))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, prompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> prompts.Prompts {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, prompt.Name, prompt.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(prompt.Arguments) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;  Arguments:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, arg </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> prompt.Arguments {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;    - </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, arg.Name, arg.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use a specific prompt</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(prompts.Prompts) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> prompts.Prompts[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Using prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, prompt.Name)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, prompt.Name, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Add appropriate arguments based on prompt schema</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to get prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Prompt result:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Description: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Messages: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Messages))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, message </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Messages {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Message </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> (</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">): </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, message.Role, message.Content.Text)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc getPrompt(ctx context.Context, c client.Client, name string, args map[string]interface{}) (*mcp.GetPromptResult, error) {\n    result, err := c.GetPrompt(ctx, mcp.GetPromptRequest{\n        Params: mcp.GetPromptRequestParams{\n            Name:      name,\n            Arguments: args,\n        },\n    })\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to get prompt: %w&quot;, err)\n    }\n \n    return result, nil\n}\n \nfunc demonstratePromptUsage(ctx context.Context, c client.Client) {\n    // List available prompts\n    prompts, err := c.ListPrompts(ctx)\n    if err != nil {\n        log.Printf(&quot;Failed to list prompts: %v&quot;, err)\n        return\n    }\n \n    fmt.Printf(&quot;Available prompts: %d\\n&quot;, len(prompts.Prompts))\n    for _, prompt := range prompts.Prompts {\n        fmt.Printf(&quot;- %s: %s\\n&quot;, prompt.Name, prompt.Description)\n        \n        if len(prompt.Arguments) &gt; 0 {\n            fmt.Printf(&quot;  Arguments:\\n&quot;)\n            for _, arg := range prompt.Arguments {\n                fmt.Printf(&quot;    - %s: %s\\n&quot;, arg.Name, arg.Description)\n            }\n        }\n    }\n \n    // Use a specific prompt\n    if len(prompts.Prompts) &gt; 0 {\n        prompt := prompts.Prompts[0]\n        fmt.Printf(&quot;\\nUsing prompt: %s\\n&quot;, prompt.Name)\n \n        result, err := getPrompt(ctx, c, prompt.Name, map[string]interface{}{\n            // Add appropriate arguments based on prompt schema\n        })\n        if err != nil {\n            log.Printf(&quot;Failed to get prompt: %v&quot;, err)\n            return\n        }\n \n        fmt.Printf(&quot;Prompt result:\\n&quot;)\n        fmt.Printf(&quot;Description: %s\\n&quot;, result.Description)\n        fmt.Printf(&quot;Messages: %d\\n&quot;, len(result.Messages))\n        \n        for i, message := range result.Messages {\n            fmt.Printf(&quot;Message %d (%s): %s\\n&quot;, i+1, message.Role, message.Content.Text)\n        }\n    }\n}\n","title":"Basic Prompt Usage","titles":["Client Operations","Using Prompts"]},"88":{"href":"/clients/operations#prompt-template-processing","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PromptProcessor</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewPromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{client: c}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">pp </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ProcessPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pp.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name:      name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: args,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result.Messages, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">pp </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">BuildConversation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">promptName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">userMessage</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get prompt template</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    messages, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ProcessPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, promptName, args)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add user message</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(messages, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">TextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(userMessage),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> messages, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">pp </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FormatForLLM</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">messages</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{} {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    formatted </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(messages))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, message </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> messages {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        formatted[i] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;role&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    message.Role,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: message.Content.Text,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> formatted</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype PromptProcessor struct {\n    client client.Client\n}\n \nfunc NewPromptProcessor(c client.Client) *PromptProcessor {\n    return &amp;PromptProcessor{client: c}\n}\n \nfunc (pp *PromptProcessor) ProcessPrompt(ctx context.Context, name string, args map[string]interface{}) ([]mcp.PromptMessage, error) {\n    result, err := pp.client.GetPrompt(ctx, mcp.GetPromptRequest{\n        Params: mcp.GetPromptRequestParams{\n            Name:      name,\n            Arguments: args,\n        },\n    })\n    if err != nil {\n        return nil, err\n    }\n \n    return result.Messages, nil\n}\n \nfunc (pp *PromptProcessor) BuildConversation(ctx context.Context, promptName string, args map[string]interface{}, userMessage string) ([]mcp.PromptMessage, error) {\n    // Get prompt template\n    messages, err := pp.ProcessPrompt(ctx, promptName, args)\n    if err != nil {\n        return nil, err\n    }\n \n    // Add user message\n    messages = append(messages, mcp.PromptMessage{\n        Role: &quot;user&quot;,\n        Content: mcp.TextContent(userMessage),\n    })\n \n    return messages, nil\n}\n \nfunc (pp *PromptProcessor) FormatForLLM(messages []mcp.PromptMessage) []map[string]interface{} {\n    formatted := make([]map[string]interface{}, len(messages))\n    \n    for i, message := range messages {\n        formatted[i] = map[string]interface{}{\n            &quot;role&quot;:    message.Role,\n            &quot;content&quot;: message.Content.Text,\n        }\n    }\n    \n    return formatted\n}\n","title":"Prompt Template Processing","titles":["Client Operations","Using Prompts"]},"89":{"href":"/clients/operations#dynamic-prompt-generation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> generateCodeReviewPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">code</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">language</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    processor </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewPromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> processor.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ProcessPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code_review&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:     code,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;language&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: language,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;focus&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;best-practices&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> generateDataAnalysisPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">datasetURI</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">analysisType</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    processor </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewPromptProcessor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> processor.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ProcessPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;analyze_data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;dataset_uri&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   datasetURI,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;analysis_type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: analysisType,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;focus_areas&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;trends&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;outliers&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;correlations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateDynamicPrompts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Generate code review prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    codeReviewMessages, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> generateCodeReviewPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;func main() { fmt.Println(</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Hello</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">) }&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to generate code review prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Code review prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> messages</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(codeReviewMessages))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Generate data analysis prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    analysisMessages, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> generateDataAnalysisPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, c, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;dataset://sales_data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;exploratory&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to generate analysis prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Data analysis prompt: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> messages</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(analysisMessages))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc generateCodeReviewPrompt(ctx context.Context, c client.Client, code, language string) ([]mcp.PromptMessage, error) {\n    processor := NewPromptProcessor(c)\n    \n    return processor.ProcessPrompt(ctx, &quot;code_review&quot;, map[string]interface{}{\n        &quot;code&quot;:     code,\n        &quot;language&quot;: language,\n        &quot;focus&quot;:    &quot;best-practices&quot;,\n    })\n}\n \nfunc generateDataAnalysisPrompt(ctx context.Context, c client.Client, datasetURI string, analysisType string) ([]mcp.PromptMessage, error) {\n    processor := NewPromptProcessor(c)\n    \n    return processor.ProcessPrompt(ctx, &quot;analyze_data&quot;, map[string]interface{}{\n        &quot;dataset_uri&quot;:   datasetURI,\n        &quot;analysis_type&quot;: analysisType,\n        &quot;focus_areas&quot;:   []string{&quot;trends&quot;, &quot;outliers&quot;, &quot;correlations&quot;},\n    })\n}\n \nfunc demonstrateDynamicPrompts(ctx context.Context, c client.Client) {\n    // Generate code review prompt\n    codeReviewMessages, err := generateCodeReviewPrompt(ctx, c, \n        &quot;func main() { fmt.Println(\\&quot;Hello\\&quot;) }&quot;, \n        &quot;go&quot;)\n    if err != nil {\n        log.Printf(&quot;Failed to generate code review prompt: %v&quot;, err)\n    } else {\n        fmt.Printf(&quot;Code review prompt: %d messages\\n&quot;, len(codeReviewMessages))\n    }\n \n    // Generate data analysis prompt\n    analysisMessages, err := generateDataAnalysisPrompt(ctx, c, \n        &quot;dataset://sales_data&quot;, \n        &quot;exploratory&quot;)\n    if err != nil {\n        log.Printf(&quot;Failed to generate analysis prompt: %v&quot;, err)\n    } else {\n        fmt.Printf(&quot;Data analysis prompt: %d messages\\n&quot;, len(analysisMessages))\n    }\n}\n","title":"Dynamic Prompt Generation","titles":["Client Operations","Using Prompts"]},"90":{"href":"/clients/operations#subscriptions","html":"\n<p>Some transports support subscriptions for receiving real-time notifications.</p>\n","isPage":false,"text":"\nSome transports support subscriptions for receiving real-time notifications.\n","title":"Subscriptions","titles":["Client Operations"]},"91":{"href":"/clients/operations#basic-subscription-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleSubscriptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Check if client supports subscriptions</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    subscriber, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Subscriber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Client does not support subscriptions&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Subscribe to notifications</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> subscriber.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to subscribe: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle notifications</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notifications:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">            handleNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Subscription cancelled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">notification</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification.Method {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;notifications/progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleProgressNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;notifications/message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleMessageNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;notifications/resources/updated&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleResourceUpdateNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;notifications/tools/updated&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleToolUpdateNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Unknown notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, notification.Method)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleProgressNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">notification</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> progress </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ProgressNotification</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unmarshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification.Params, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">progress); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to parse progress notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Progress: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">/</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> - </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        progress.Progress, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        progress.Total, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        progress.Message)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleMessageNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">notification</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> message </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MessageNotification</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unmarshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification.Params, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">message); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to parse message notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server message: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, message.Text)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleResourceUpdateNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">notification</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resources updated, refreshing cache...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Invalidate resource cache or refresh resource list</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleToolUpdateNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">notification</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tools updated, refreshing tool list...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Refresh tool list</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleSubscriptions(ctx context.Context, c client.Client) {\n    // Check if client supports subscriptions\n    subscriber, ok := c.(client.Subscriber)\n    if !ok {\n        log.Println(&quot;Client does not support subscriptions&quot;)\n        return\n    }\n \n    // Subscribe to notifications\n    notifications, err := subscriber.Subscribe(ctx)\n    if err != nil {\n        log.Printf(&quot;Failed to subscribe: %v&quot;, err)\n        return\n    }\n \n    // Handle notifications\n    for {\n        select {\n        case notification := &lt;-notifications:\n            handleNotification(notification)\n        case &lt;-ctx.Done():\n            log.Println(&quot;Subscription cancelled&quot;)\n            return\n        }\n    }\n}\n \nfunc handleNotification(notification mcp.Notification) {\n    switch notification.Method {\n    case &quot;notifications/progress&quot;:\n        handleProgressNotification(notification)\n    case &quot;notifications/message&quot;:\n        handleMessageNotification(notification)\n    case &quot;notifications/resources/updated&quot;:\n        handleResourceUpdateNotification(notification)\n    case &quot;notifications/tools/updated&quot;:\n        handleToolUpdateNotification(notification)\n    default:\n        log.Printf(&quot;Unknown notification: %s&quot;, notification.Method)\n    }\n}\n \nfunc handleProgressNotification(notification mcp.Notification) {\n    var progress mcp.ProgressNotification\n    if err := json.Unmarshal(notification.Params, &amp;progress); err != nil {\n        log.Printf(&quot;Failed to parse progress notification: %v&quot;, err)\n        return\n    }\n \n    fmt.Printf(&quot;Progress: %d/%d - %s\\n&quot;, \n        progress.Progress, \n        progress.Total, \n        progress.Message)\n}\n \nfunc handleMessageNotification(notification mcp.Notification) {\n    var message mcp.MessageNotification\n    if err := json.Unmarshal(notification.Params, &amp;message); err != nil {\n        log.Printf(&quot;Failed to parse message notification: %v&quot;, err)\n        return\n    }\n \n    fmt.Printf(&quot;Server message: %s\\n&quot;, message.Text)\n}\n \nfunc handleResourceUpdateNotification(notification mcp.Notification) {\n    log.Println(&quot;Resources updated, refreshing cache...&quot;)\n    // Invalidate resource cache or refresh resource list\n}\n \nfunc handleToolUpdateNotification(notification mcp.Notification) {\n    log.Println(&quot;Tools updated, refreshing tool list...&quot;)\n    // Refresh tool list\n}\n","title":"Basic Subscription Handling","titles":["Client Operations","Subscriptions"]},"92":{"href":"/clients/operations#advanced-subscription-management","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SubscriptionManager</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client        </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    subscriber    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Subscriber</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handlers      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">][]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">NotificationHandler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx           </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cancel        </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CancelFunc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    wg            </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">WaitGroup</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex         </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NotificationHandler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewSubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    subscriber, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Subscriber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client does not support subscriptions&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client:     c,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        subscriber: subscriber,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handlers:   </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">][]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">NotificationHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx:        ctx,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cancel:     cancel,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.subscriber.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sm.ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to subscribe: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.notifications </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">handleNotifications</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Wait</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">method</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NotificationHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.handlers[method] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sm.handlers[method], handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RemoveHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">method</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> NotificationHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handlers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.handlers[method]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handlers {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> reflect.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ValueOf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(h).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Pointer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> reflect.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ValueOf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(handler).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Pointer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            sm.handlers[method] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(handlers[:i], handlers[i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">handleNotifications</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sm.notifications:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">processNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sm.ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">processNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">notification</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handlers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.handlers[notification.Method]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, handler </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handlers {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Handler error for </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, notification.Method, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage example</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateSubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewSubscriptionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to create subscription manager: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add handlers</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;notifications/progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">n</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Progress notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, n)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;notifications/message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">n</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Message notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, n)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start handling</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to start subscription manager: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Let it run for a while</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Stop</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype SubscriptionManager struct {\n    client        client.Client\n    subscriber    client.Subscriber\n    notifications chan mcp.Notification\n    handlers      map[string][]NotificationHandler\n    ctx           context.Context\n    cancel        context.CancelFunc\n    wg            sync.WaitGroup\n    mutex         sync.RWMutex\n}\n \ntype NotificationHandler func(mcp.Notification) error\n \nfunc NewSubscriptionManager(c client.Client) (*SubscriptionManager, error) {\n    subscriber, ok := c.(client.Subscriber)\n    if !ok {\n        return nil, fmt.Errorf(&quot;client does not support subscriptions&quot;)\n    }\n \n    ctx, cancel := context.WithCancel(context.Background())\n \n    sm := &amp;SubscriptionManager{\n        client:     c,\n        subscriber: subscriber,\n        handlers:   make(map[string][]NotificationHandler),\n        ctx:        ctx,\n        cancel:     cancel,\n    }\n \n    return sm, nil\n}\n \nfunc (sm *SubscriptionManager) Start() error {\n    notifications, err := sm.subscriber.Subscribe(sm.ctx)\n    if err != nil {\n        return fmt.Errorf(&quot;failed to subscribe: %w&quot;, err)\n    }\n \n    sm.notifications = notifications\n \n    sm.wg.Add(1)\n    go sm.handleNotifications()\n \n    return nil\n}\n \nfunc (sm *SubscriptionManager) Stop() {\n    sm.cancel()\n    sm.wg.Wait()\n}\n \nfunc (sm *SubscriptionManager) AddHandler(method string, handler NotificationHandler) {\n    sm.mutex.Lock()\n    defer sm.mutex.Unlock()\n \n    sm.handlers[method] = append(sm.handlers[method], handler)\n}\n \nfunc (sm *SubscriptionManager) RemoveHandler(method string, handler NotificationHandler) {\n    sm.mutex.Lock()\n    defer sm.mutex.Unlock()\n \n    handlers := sm.handlers[method]\n    for i, h := range handlers {\n        if reflect.ValueOf(h).Pointer() == reflect.ValueOf(handler).Pointer() {\n            sm.handlers[method] = append(handlers[:i], handlers[i+1:]...)\n            break\n        }\n    }\n}\n \nfunc (sm *SubscriptionManager) handleNotifications() {\n    defer sm.wg.Done()\n \n    for {\n        select {\n        case notification := &lt;-sm.notifications:\n            sm.processNotification(notification)\n        case &lt;-sm.ctx.Done():\n            return\n        }\n    }\n}\n \nfunc (sm *SubscriptionManager) processNotification(notification mcp.Notification) {\n    sm.mutex.RLock()\n    handlers := sm.handlers[notification.Method]\n    sm.mutex.RUnlock()\n \n    for _, handler := range handlers {\n        if err := handler(notification); err != nil {\n            log.Printf(&quot;Handler error for %s: %v&quot;, notification.Method, err)\n        }\n    }\n}\n \n// Usage example\nfunc demonstrateSubscriptionManager(c client.Client) {\n    sm, err := NewSubscriptionManager(c)\n    if err != nil {\n        log.Printf(&quot;Failed to create subscription manager: %v&quot;, err)\n        return\n    }\n \n    // Add handlers\n    sm.AddHandler(&quot;notifications/progress&quot;, func(n mcp.Notification) error {\n        log.Printf(&quot;Progress notification: %+v&quot;, n)\n        return nil\n    })\n \n    sm.AddHandler(&quot;notifications/message&quot;, func(n mcp.Notification) error {\n        log.Printf(&quot;Message notification: %+v&quot;, n)\n        return nil\n    })\n \n    // Start handling\n    if err := sm.Start(); err != nil {\n        log.Printf(&quot;Failed to start subscription manager: %v&quot;, err)\n        return\n    }\n \n    // Let it run for a while\n    time.Sleep(30 * time.Second)\n \n    // Stop\n    sm.Stop()\n}\n","title":"Advanced Subscription Management","titles":["Client Operations","Subscriptions"]},"93":{"href":"/clients/operations#next-steps","html":"\n<ul>\n<li><strong><a href=\"/clients/transports\">Client Transports</a></strong> - Learn transport-specific client features</li>\n<li><strong><a href=\"/clients/basics\">Client Basics</a></strong> - Review fundamental concepts</li>\n</ul>","isPage":false,"text":"\n\nClient Transports - Learn transport-specific client features\nClient Basics - Review fundamental concepts\n","title":"Next Steps","titles":["Client Operations"]},"94":{"href":"/clients/transports#client-transports","html":"</header>\n<p>Learn about transport-specific client implementations and how to choose the right transport for your use case.</p>\n","isPage":true,"text":"\nLearn about transport-specific client implementations and how to choose the right transport for your use case.\n","title":"Client Transports","titles":[]},"95":{"href":"/clients/transports#transport-overview","html":"\n<p>MCP-Go provides client implementations for all supported transports. Each transport has different characteristics and is optimized for specific scenarios.</p>\n<table><thead><tr><th>Transport</th><th>Best For</th><th>Connection</th><th>Real-time</th><th>Multi-client</th></tr></thead><tbody><tr><td><strong>STDIO</strong></td><td>CLI tools, desktop apps</td><td>Process pipes</td><td>No</td><td>No</td></tr><tr><td><strong>StreamableHTTP</strong></td><td>Web services, APIs</td><td>HTTP requests</td><td>No</td><td>Yes</td></tr><tr><td><strong>SSE</strong></td><td>Web apps, real-time</td><td>HTTP + EventSource</td><td>Yes</td><td>Yes</td></tr><tr><td><strong>In-Process</strong></td><td>Testing, embedded</td><td>Direct calls</td><td>Yes</td><td>No</td></tr></tbody></table>\n","isPage":false,"text":"\nMCP-Go provides client implementations for all supported transports. Each transport has different characteristics and is optimized for specific scenarios.\nTransportBest ForConnectionReal-timeMulti-clientSTDIOCLI tools, desktop appsProcess pipesNoNoStreamableHTTPWeb services, APIsHTTP requestsNoYesSSEWeb apps, real-timeHTTP + EventSourceYesYesIn-ProcessTesting, embeddedDirect callsYesNo\n","title":"Transport Overview","titles":["Client Transports"]},"96":{"href":"/clients/transports#stdio-client","html":"\n<p>STDIO clients communicate with servers through standard input/output, typically by spawning a subprocess.</p>\n","isPage":false,"text":"\nSTDIO clients communicate with servers through standard input/output, typically by spawning a subprocess.\n","title":"STDIO Client","titles":["Client Transports"]},"97":{"href":"/clients/transports#basic-stdio-client","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">crypto/tls</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">errors</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">net/http</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">os</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create client that spawns a subprocess</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize connection</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, initRequest); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use the client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, listToolsRequest)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;crypto/tls&quot;\n    &quot;errors&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;net/http&quot;\n    &quot;os&quot;\n    &quot;sync&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc createStdioClient() {\n    // Create client that spawns a subprocess\n    c, err := client.NewStdioMCPClient(\n        &quot;go&quot;, []string{}, &quot;run&quot;, &quot;/path/to/server/main.go&quot;,\n    )\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer c.Close()\n \n    ctx := context.Background()\n \n    // Initialize connection\n    if err := c.Initialize(ctx, initRequest); err != nil {\n        log.Fatal(err)\n    }\n \n    // Use the client\n    tools, err := c.ListTools(ctx, listToolsRequest)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    log.Printf(&quot;Available tools: %d&quot;, len(tools.Tools))\n}\n","title":"Basic STDIO Client","titles":["Client Transports","STDIO Client"]},"98":{"href":"/clients/transports#stdio-error-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Define error constants for STDIO client errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrProcessExited  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;process exited&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrProcessTimeout </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;process timeout&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrBrokenPipe     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;broken pipe&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleStdioErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;example_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrProcessExited):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server process exited unexpectedly&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Attempt to restart</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> restartErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Restart</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); restartErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to restart: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, restartErr)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrProcessTimeout):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server process timed out&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Kill and restart process</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Kill</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> restartErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Restart</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); restartErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to restart: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, restartErr)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrBrokenPipe):</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Communication pipe broken&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Process likely crashed, restart</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> restartErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Restart</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); restartErr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to restart: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, restartErr)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Unexpected error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// Define error constants for STDIO client errors\nvar (\n    ErrProcessExited  = errors.New(&quot;process exited&quot;)\n    ErrProcessTimeout = errors.New(&quot;process timeout&quot;)\n    ErrBrokenPipe     = errors.New(&quot;broken pipe&quot;)\n)\n \nfunc handleStdioErrors(c *client.StdioClient) {\n    ctx := context.Background()\n \n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name: &quot;example_tool&quot;,\n        },\n    })\n \n    if err != nil {\n        switch {\n        case errors.Is(err, ErrProcessExited):\n            log.Println(&quot;Server process exited unexpectedly&quot;)\n            // Attempt to restart\n            if restartErr := c.Restart(); restartErr != nil {\n                log.Printf(&quot;Failed to restart: %v&quot;, restartErr)\n            }\n \n        case errors.Is(err, ErrProcessTimeout):\n            log.Println(&quot;Server process timed out&quot;)\n            // Kill and restart process\n            c.Kill()\n            if restartErr := c.Restart(); restartErr != nil {\n                log.Printf(&quot;Failed to restart: %v&quot;, restartErr)\n            }\n \n        case errors.Is(err, ErrBrokenPipe):\n            log.Println(&quot;Communication pipe broken&quot;)\n            // Process likely crashed, restart\n            if restartErr := c.Restart(); restartErr != nil {\n                log.Printf(&quot;Failed to restart: %v&quot;, restartErr)\n            }\n \n        default:\n            log.Printf(&quot;Unexpected error: %v&quot;, err)\n        }\n        return\n    }\n \n    log.Printf(&quot;Tool result: %+v&quot;, result)\n}\n","title":"STDIO Error Handling","titles":["Client Transports","STDIO Client"]},"99":{"href":"/clients/transports#stdio-process-management","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ManagedStdioClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StdioClient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    options     </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StdioOptions</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    restartChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx         </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cancel      </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CancelFunc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    wg          </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">WaitGroup</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewManagedStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">options</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StdioOptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        options:     options,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        restartChan: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx:         ctx,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cancel:      cancel,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">monitorProcess</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioClientWithOptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(msc.options)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(msc.ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">monitorProcess</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">msc.ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">msc.restartChan:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Restarting STDIO client...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                msc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Wait before restarting</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to restart client: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">                // Try again after delay</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.restartChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{}:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Client restarted successfully&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client not available&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isProcessError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Trigger restart</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.restartChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{}:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;process error, restarting: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">msc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ManagedStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    msc.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Wait</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> msc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isProcessError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrProcessExited) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">           errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrBrokenPipe) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">           errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrProcessTimeout)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Define connection error constants</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrConnectionLost   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;connection lost&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrConnectionFailed </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;connection failed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrUnauthorized     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unauthorized&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ErrForbidden        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;forbidden&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\ntype ManagedStdioClient struct {\n    client      *client.StdioClient\n    options     client.StdioOptions\n    restartChan chan struct{}\n    ctx         context.Context\n    cancel      context.CancelFunc\n    wg          sync.WaitGroup\n}\n \nfunc NewManagedStdioClient(options client.StdioOptions) (*ManagedStdioClient, error) {\n    ctx, cancel := context.WithCancel(context.Background())\n \n    msc := &amp;ManagedStdioClient{\n        options:     options,\n        restartChan: make(chan struct{}, 1),\n        ctx:         ctx,\n        cancel:      cancel,\n    }\n \n    if err := msc.start(); err != nil {\n        cancel()\n        return nil, err\n    }\n \n    msc.wg.Add(1)\n    go msc.monitorProcess()\n \n    return msc, nil\n}\n \nfunc (msc *ManagedStdioClient) start() error {\n    client, err := client.NewStdioClientWithOptions(msc.options)\n    if err != nil {\n        return err\n    }\n \n    if err := client.Initialize(msc.ctx); err != nil {\n        client.Close()\n        return err\n    }\n \n    msc.client = client\n    return nil\n}\n \nfunc (msc *ManagedStdioClient) monitorProcess() {\n    defer msc.wg.Done()\n \n    for {\n        select {\n        case &lt;-msc.ctx.Done():\n            return\n        case &lt;-msc.restartChan:\n            log.Println(&quot;Restarting STDIO client...&quot;)\n            \n            if msc.client != nil {\n                msc.client.Close()\n            }\n \n            // Wait before restarting\n            time.Sleep(1 * time.Second)\n \n            if err := msc.start(); err != nil {\n                log.Printf(&quot;Failed to restart client: %v&quot;, err)\n                // Try again after delay\n                time.Sleep(5 * time.Second)\n                select {\n                case msc.restartChan &lt;- struct{}{}:\n                default:\n                }\n            } else {\n                log.Println(&quot;Client restarted successfully&quot;)\n            }\n        }\n    }\n}\n \nfunc (msc *ManagedStdioClient) CallTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    if msc.client == nil {\n        return nil, fmt.Errorf(&quot;client not available&quot;)\n    }\n \n    result, err := msc.client.CallTool(ctx, req)\n    if err != nil &amp;&amp; isProcessError(err) {\n        // Trigger restart\n        select {\n        case msc.restartChan &lt;- struct{}{}:\n        default:\n        }\n        return nil, fmt.Errorf(&quot;process error, restarting: %w&quot;, err)\n    }\n \n    return result, err\n}\n \nfunc (msc *ManagedStdioClient) Close() error {\n    msc.cancel()\n    msc.wg.Wait()\n    \n    if msc.client != nil {\n        return msc.client.Close()\n    }\n    \n    return nil\n}\n \nfunc isProcessError(err error) bool {\n    return errors.Is(err, ErrProcessExited) ||\n           errors.Is(err, ErrBrokenPipe) ||\n           errors.Is(err, ErrProcessTimeout)\n}\n// Define connection error constants\nvar (\n    ErrConnectionLost   = errors.New(&quot;connection lost&quot;)\n    ErrConnectionFailed = errors.New(&quot;connection failed&quot;)\n    ErrUnauthorized     = errors.New(&quot;unauthorized&quot;)\n    ErrForbidden        = errors.New(&quot;forbidden&quot;)\n)\n","title":"STDIO Process Management","titles":["Client Transports","STDIO Client"]},"100":{"href":"/clients/transports#streamablehttp-client","html":"\n<p>StreamableHTTP clients communicate with servers using traditional HTTP requests.</p>\n","isPage":false,"text":"\nStreamableHTTP clients communicate with servers using traditional HTTP requests.\n","title":"StreamableHTTP Client","titles":["Client Transports"]},"101":{"href":"/clients/transports#basic-streamablehttp-client","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createStreamableHTTPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create StreamableHTTP client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createStreamableHTTPClient() {\n    // Create StreamableHTTP client\n    c := client.NewStreamableHttpClient(&quot;http://localhost:8080/mcp&quot;)\n    defer c.Close()\n \n    ctx := context.Background()\n \n    // Initialize\n    if err := c.Initialize(ctx); err != nil {\n        log.Fatal(err)\n    }\n \n    // Use client\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    log.Printf(&quot;Available tools: %d&quot;, len(tools.Tools))\n}\n","title":"Basic StreamableHTTP Client","titles":["Client Transports","StreamableHTTP Client"]},"102":{"href":"/clients/transports#streamablehttp-client-with-custom-configuration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createCustomStreamableHTTPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create StreamableHTTP client with options</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://api.example.com/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPHeaders</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;User-Agent&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MyApp/1.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;Accept&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:     </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPBasicClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Transport: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Transport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MaxIdleConns:        </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MaxIdleConnsPerHost: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                IdleConnTimeout:     </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">90</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                TLSClientConfig: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">tls</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Config</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    InsecureSkipVerify: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use client...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createCustomStreamableHTTPClient() {\n    // Create StreamableHTTP client with options\n    c := client.NewStreamableHttpClient(&quot;https://api.example.com/mcp&quot;,\n        transport.WithHTTPTimeout(30*time.Second),\n        transport.WithHTTPHeaders(map[string]string{\n            &quot;User-Agent&quot;: &quot;MyApp/1.0&quot;,\n            &quot;Accept&quot;:     &quot;application/json&quot;,\n        }),\n        transport.WithHTTPBasicClient(&amp;http.Client{\n            Transport: &amp;http.Transport{\n                MaxIdleConns:        100,\n                MaxIdleConnsPerHost: 10,\n                IdleConnTimeout:     90 * time.Second,\n                TLSClientConfig: &amp;tls.Config{\n                    InsecureSkipVerify: false,\n                },\n            },\n        }),\n    )\n    defer c.Close()\n \n    ctx := context.Background()\n \n    if err := c.Initialize(ctx); err != nil {\n        log.Fatal(err)\n    }\n \n    // Use client...\n}\n","title":"StreamableHTTP Client with Custom Configuration","titles":["Client Transports","StreamableHTTP Client"]},"103":{"href":"/clients/transports#streamablehttp-authentication","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createAuthenticatedStreamableHTTPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create StreamableHTTP client with OAuth</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPOAuth</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">transport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">OAuthConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ClientID:     </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;your-client-id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ClientSecret: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;your-client-secret&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            TokenURL:     </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://auth.example.com/token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Scopes:       []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;mcp:read&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;mcp:write&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use client...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isAuthError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrUnauthorized) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">           errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrForbidden)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createAuthenticatedStreamableHTTPClient() {\n    // Create StreamableHTTP client with OAuth\n    c := client.NewStreamableHttpClient(&quot;http://localhost:8080/mcp&quot;,\n        transport.WithHTTPOAuth(transport.OAuthConfig{\n            ClientID:     &quot;your-client-id&quot;,\n            ClientSecret: &quot;your-client-secret&quot;,\n            TokenURL:     &quot;https://auth.example.com/token&quot;,\n            Scopes:       []string{&quot;mcp:read&quot;, &quot;mcp:write&quot;},\n        }),\n    )\n    defer c.Close()\n \n    ctx := context.Background()\n \n    if err := c.Initialize(ctx); err != nil {\n        log.Fatal(err)\n    }\n \n    // Use client...\n}\n \nfunc isAuthError(err error) bool {\n    return errors.Is(err, ErrUnauthorized) ||\n           errors.Is(err, ErrForbidden)\n}\n","title":"StreamableHTTP Authentication","titles":["Client Transports","StreamableHTTP Client"]},"104":{"href":"/clients/transports#streamablehttp-connection-pooling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> StreamableHTTPClientPool</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    clients </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    factory </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    maxSize </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewStreamableHTTPClientPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">baseURL</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">maxSize</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StreamableHTTPClientPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    pool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StreamableHTTPClientPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        clients: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, maxSize),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        maxSize: maxSize,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        factory: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(baseURL)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Pre-populate pool</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> maxSize; i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        pool.clients </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pool.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">factory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">pool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StreamableHTTPClientPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">pool.clients:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pool.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">factory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">pool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StreamableHTTPClientPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Put</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pool.clients </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Pool full, close client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">pool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StreamableHTTPClientPool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pool.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> pool.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Put</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype StreamableHTTPClientPool struct {\n    clients chan *client.Client\n    factory func() *client.Client\n    maxSize int\n}\n \nfunc NewStreamableHTTPClientPool(baseURL string, maxSize int) *StreamableHTTPClientPool {\n    pool := &amp;StreamableHTTPClientPool{\n        clients: make(chan *client.Client, maxSize),\n        maxSize: maxSize,\n        factory: func() *client.Client {\n            return client.NewStreamableHttpClient(baseURL)\n        },\n    }\n \n    // Pre-populate pool\n    for i := 0; i &lt; maxSize; i++ {\n        pool.clients &lt;- pool.factory()\n    }\n \n    return pool\n}\n \nfunc (pool *StreamableHTTPClientPool) Get() *client.Client {\n    select {\n    case c := &lt;-pool.clients:\n        return c\n    default:\n        return pool.factory()\n    }\n}\n \nfunc (pool *StreamableHTTPClientPool) Put(c *client.Client) {\n    select {\n    case pool.clients &lt;- c:\n    default:\n        // Pool full, close client\n        c.Close()\n    }\n}\n \nfunc (pool *StreamableHTTPClientPool) CallTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    c := pool.Get()\n    defer pool.Put(c)\n \n    return c.CallTool(ctx, req)\n}\n","title":"StreamableHTTP Connection Pooling","titles":["Client Transports","StreamableHTTP Client"]},"105":{"href":"/clients/transports#sse-client","html":"\n<p>SSE (Server-Sent Events) clients provide real-time communication with servers.</p>\n","isPage":false,"text":"\nSSE (Server-Sent Events) clients provide real-time communication with servers.\n","title":"SSE Client","titles":["Client Transports"]},"106":{"href":"/clients/transports#basic-sse-client","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create SSE client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp/sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Set authentication</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetHeader</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Authorization&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Bearer your-token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Subscribe to notifications</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle notifications in background</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notifications {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, notification)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use client for regular operations</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createSSEClient() {\n    // Create SSE client\n    c := client.NewSSEClient(&quot;http://localhost:8080/mcp/sse&quot;)\n    defer c.Close()\n \n    // Set authentication\n    c.SetHeader(&quot;Authorization&quot;, &quot;Bearer your-token&quot;)\n \n    ctx := context.Background()\n \n    // Initialize\n    if err := c.Initialize(ctx); err != nil {\n        log.Fatal(err)\n    }\n \n    // Subscribe to notifications\n    notifications, err := c.Subscribe(ctx)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // Handle notifications in background\n    go func() {\n        for notification := range notifications {\n            log.Printf(&quot;Notification: %+v&quot;, notification)\n        }\n    }()\n \n    // Use client for regular operations\n    tools, err := c.ListTools(ctx)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    log.Printf(&quot;Available tools: %d&quot;, len(tools.Tools))\n}\n","title":"Basic SSE Client","titles":["Client Transports","SSE Client"]},"107":{"href":"/clients/transports#sse-client-with-reconnection","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ResilientSSEClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    baseURL     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    headers     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEClient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx         </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cancel      </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CancelFunc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    reconnectCh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex       </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">baseURL</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        baseURL:     baseURL,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        headers:     </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx:         ctx,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cancel:      cancel,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        reconnectCh: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">reconnectLoop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rsc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetHeader</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">key</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">value</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.headers[key] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rsc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rsc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rsc.baseURL)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Set headers</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> key, value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.headers {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetHeader</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(key, value)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rsc.ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rsc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">reconnectLoop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">rsc.ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">rsc.reconnectCh:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Reconnecting SSE client...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; attempt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 5</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; attempt</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Reconnection attempt </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, attempt, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    backoff </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(attempt) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(backoff):</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">rsc.ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Reconnected successfully&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                    break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rsc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client not connected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isConnectionError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Trigger reconnection</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.reconnectCh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{}:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;connection error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rsc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;client not connected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">rsc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResilientSSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rsc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper function to check if an error is a connection error</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isConnectionError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrConnectionLost) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">           errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrConnectionFailed)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ResilientSSEClient struct {\n    baseURL     string\n    headers     map[string]string\n    client      *client.SSEClient\n    ctx         context.Context\n    cancel      context.CancelFunc\n    reconnectCh chan struct{}\n    mutex       sync.RWMutex\n}\n \nfunc NewResilientSSEClient(baseURL string) *ResilientSSEClient {\n    ctx, cancel := context.WithCancel(context.Background())\n \n    rsc := &amp;ResilientSSEClient{\n        baseURL:     baseURL,\n        headers:     make(map[string]string),\n        ctx:         ctx,\n        cancel:      cancel,\n        reconnectCh: make(chan struct{}, 1),\n    }\n \n    go rsc.reconnectLoop()\n    return rsc\n}\n \nfunc (rsc *ResilientSSEClient) SetHeader(key, value string) {\n    rsc.mutex.Lock()\n    defer rsc.mutex.Unlock()\n    rsc.headers[key] = value\n}\n \nfunc (rsc *ResilientSSEClient) connect() error {\n    rsc.mutex.Lock()\n    defer rsc.mutex.Unlock()\n \n    if rsc.client != nil {\n        rsc.client.Close()\n    }\n \n    client := client.NewSSEClient(rsc.baseURL)\n    \n    // Set headers\n    for key, value := range rsc.headers {\n        client.SetHeader(key, value)\n    }\n \n    if err := client.Initialize(rsc.ctx); err != nil {\n        return err\n    }\n \n    rsc.client = client\n    return nil\n}\n \nfunc (rsc *ResilientSSEClient) reconnectLoop() {\n    for {\n        select {\n        case &lt;-rsc.ctx.Done():\n            return\n        case &lt;-rsc.reconnectCh:\n            log.Println(&quot;Reconnecting SSE client...&quot;)\n            \n            for attempt := 1; attempt &lt;= 5; attempt++ {\n                if err := rsc.connect(); err != nil {\n                    log.Printf(&quot;Reconnection attempt %d failed: %v&quot;, attempt, err)\n                    \n                    backoff := time.Duration(attempt) * time.Second\n                    select {\n                    case &lt;-time.After(backoff):\n                    case &lt;-rsc.ctx.Done():\n                        return\n                    }\n                } else {\n                    log.Println(&quot;Reconnected successfully&quot;)\n                    break\n                }\n            }\n        }\n    }\n}\n \nfunc (rsc *ResilientSSEClient) CallTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    rsc.mutex.RLock()\n    client := rsc.client\n    rsc.mutex.RUnlock()\n \n    if client == nil {\n        return nil, fmt.Errorf(&quot;client not connected&quot;)\n    }\n \n    result, err := client.CallTool(ctx, req)\n    if err != nil &amp;&amp; isConnectionError(err) {\n        // Trigger reconnection\n        select {\n        case rsc.reconnectCh &lt;- struct{}{}:\n        default:\n        }\n        return nil, fmt.Errorf(&quot;connection error: %w&quot;, err)\n    }\n \n    return result, err\n}\n \nfunc (rsc *ResilientSSEClient) Subscribe(ctx context.Context) (&lt;-chan mcp.Notification, error) {\n    rsc.mutex.RLock()\n    client := rsc.client\n    rsc.mutex.RUnlock()\n \n    if client == nil {\n        return nil, fmt.Errorf(&quot;client not connected&quot;)\n    }\n \n    return client.Subscribe(ctx)\n}\n \nfunc (rsc *ResilientSSEClient) Close() error {\n    rsc.cancel()\n    \n    rsc.mutex.Lock()\n    defer rsc.mutex.Unlock()\n    \n    if rsc.client != nil {\n        return rsc.client.Close()\n    }\n    \n    return nil\n}\n \n// Helper function to check if an error is a connection error\nfunc isConnectionError(err error) bool {\n    return errors.Is(err, ErrConnectionLost) ||\n           errors.Is(err, ErrConnectionFailed)\n}\n","title":"SSE Client with Reconnection","titles":["Client Transports","SSE Client"]},"108":{"href":"/clients/transports#sse-event-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SSEEventHandler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEClient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handlers    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">][]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex       </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx         </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cancel      </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CancelFunc</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    wg          </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">WaitGroup</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewSSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">c</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithCancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client:   c,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handlers: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">][]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx:      ctx,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cancel:   cancel,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifications, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> seh.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Subscribe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(seh.ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> seh.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">notifications:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                seh.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">handleNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">seh.ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.wg.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Wait</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnProgress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">addHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;notifications/progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">addHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;notifications/message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnResourceUpdate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">addHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;notifications/resources/updated&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnToolUpdate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">addHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;notifications/tools/updated&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">addHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">method</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> seh.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.handlers[method] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(seh.handlers[method], handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">seh </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SSEEventHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">handleNotification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">notification</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handlers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> seh.handlers[notification.Method]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    seh.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, handler </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> handlers {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        go</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(notification)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype SSEEventHandler struct {\n    client      *client.SSEClient\n    handlers    map[string][]func(mcp.Notification)\n    mutex       sync.RWMutex\n    ctx         context.Context\n    cancel      context.CancelFunc\n    wg          sync.WaitGroup\n}\n \nfunc NewSSEEventHandler(c *client.SSEClient) *SSEEventHandler {\n    ctx, cancel := context.WithCancel(context.Background())\n \n    return &amp;SSEEventHandler{\n        client:   c,\n        handlers: make(map[string][]func(mcp.Notification)),\n        ctx:      ctx,\n        cancel:   cancel,\n    }\n}\n \nfunc (seh *SSEEventHandler) Start() error {\n    notifications, err := seh.client.Subscribe(seh.ctx)\n    if err != nil {\n        return err\n    }\n \n    seh.wg.Add(1)\n    go func() {\n        defer seh.wg.Done()\n        \n        for {\n            select {\n            case notification := &lt;-notifications:\n                seh.handleNotification(notification)\n            case &lt;-seh.ctx.Done():\n                return\n            }\n        }\n    }()\n \n    return nil\n}\n \nfunc (seh *SSEEventHandler) Stop() {\n    seh.cancel()\n    seh.wg.Wait()\n}\n \nfunc (seh *SSEEventHandler) OnProgress(handler func(mcp.Notification)) {\n    seh.addHandler(&quot;notifications/progress&quot;, handler)\n}\n \nfunc (seh *SSEEventHandler) OnMessage(handler func(mcp.Notification)) {\n    seh.addHandler(&quot;notifications/message&quot;, handler)\n}\n \nfunc (seh *SSEEventHandler) OnResourceUpdate(handler func(mcp.Notification)) {\n    seh.addHandler(&quot;notifications/resources/updated&quot;, handler)\n}\n \nfunc (seh *SSEEventHandler) OnToolUpdate(handler func(mcp.Notification)) {\n    seh.addHandler(&quot;notifications/tools/updated&quot;, handler)\n}\n \nfunc (seh *SSEEventHandler) addHandler(method string, handler func(mcp.Notification)) {\n    seh.mutex.Lock()\n    defer seh.mutex.Unlock()\n    \n    seh.handlers[method] = append(seh.handlers[method], handler)\n}\n \nfunc (seh *SSEEventHandler) handleNotification(notification mcp.Notification) {\n    seh.mutex.RLock()\n    handlers := seh.handlers[notification.Method]\n    seh.mutex.RUnlock()\n \n    for _, handler := range handlers {\n        go handler(notification)\n    }\n}\n","title":"SSE Event Handling","titles":["Client Transports","SSE Client"]},"109":{"href":"/clients/transports#in-process-client","html":"\n<p>In-process clients provide direct communication with servers in the same process.</p>\n","isPage":false,"text":"\nIn-process clients provide direct communication with servers in the same process.\n","title":"In-Process Client","titles":["Client Transports"]},"110":{"href":"/clients/transports#basic-in-process-client","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Test Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tools to server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;test_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Test tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            input </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Processed: &quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> +</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create in-process client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize (no network overhead)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;test_tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;test data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc createInProcessClient() {\n    // Create server\n    s := server.NewMCPServer(&quot;Test Server&quot;, &quot;1.0.0&quot;)\n    \n    // Add tools to server\n    s.AddTool(\n        mcp.NewTool(&quot;test_tool&quot;,\n            mcp.WithDescription(&quot;Test tool&quot;),\n            mcp.WithString(&quot;input&quot;, mcp.Required()),\n        ),\n        func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n            input := req.Params.Arguments[&quot;input&quot;].(string)\n            return mcp.NewToolResultText(&quot;Processed: &quot; + input), nil\n        },\n    )\n \n    // Create in-process client\n    c := client.NewInProcessClient(s)\n    defer c.Close()\n \n    ctx := context.Background()\n \n    // Initialize (no network overhead)\n    if err := c.Initialize(ctx); err != nil {\n        log.Fatal(err)\n    }\n \n    // Use client\n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name: &quot;test_tool&quot;,\n            Arguments: map[string]interface{}{\n                &quot;input&quot;: &quot;test data&quot;,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    log.Printf(&quot;Tool result: %+v&quot;, result)\n}\n","title":"Basic In-Process Client","titles":["Client Transports","In-Process Client"]},"111":{"href":"/clients/transports#in-process-client-for-testing","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TestClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InProcessClient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewTestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Test Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithAllCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server: s,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client: client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">name</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">description</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(name, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(description))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tc.server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tool, handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">handler</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri, name)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tc.server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resource, handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">name</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name:      name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: args,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI: uri,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tc.client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage in tests</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> TestWithInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">t</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">testing</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">T</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tc </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewTestClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add test tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;echo&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Echo input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        input </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(input), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    require.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NoError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(t, err)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Test tool call</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tc.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;echo&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;hello world&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    require.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NoError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(t, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    assert.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Equal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(t, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;hello world&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result.Content[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].Text)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype TestClient struct {\n    server *server.MCPServer\n    client *client.InProcessClient\n}\n \nfunc NewTestClient() *TestClient {\n    s := server.NewMCPServer(&quot;Test Server&quot;, &quot;1.0.0&quot;,\n        server.WithAllCapabilities(),\n    )\n \n    return &amp;TestClient{\n        server: s,\n        client: client.NewInProcessClient(s),\n    }\n}\n \nfunc (tc *TestClient) AddTool(name, description string, handler server.ToolHandler) {\n    tool := mcp.NewTool(name, mcp.WithDescription(description))\n    tc.server.AddTool(tool, handler)\n}\n \nfunc (tc *TestClient) AddResource(uri, name string, handler server.ResourceHandler) {\n    resource := mcp.NewResource(uri, name)\n    tc.server.AddResource(resource, handler)\n}\n \nfunc (tc *TestClient) Initialize(ctx context.Context) error {\n    return tc.client.Initialize(ctx)\n}\n \nfunc (tc *TestClient) CallTool(ctx context.Context, name string, args map[string]interface{}) (*mcp.CallToolResult, error) {\n    return tc.client.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolRequestParams{\n            Name:      name,\n            Arguments: args,\n        },\n    })\n}\n \nfunc (tc *TestClient) ReadResource(ctx context.Context, uri string) (*mcp.ReadResourceResult, error) {\n    return tc.client.ReadResource(ctx, mcp.ReadResourceRequest{\n        Params: mcp.ReadResourceRequestParams{\n            URI: uri,\n        },\n    })\n}\n \nfunc (tc *TestClient) Close() error {\n    return tc.client.Close()\n}\n \n// Usage in tests\nfunc TestWithInProcessClient(t *testing.T) {\n    tc := NewTestClient()\n    defer tc.Close()\n \n    // Add test tool\n    tc.AddTool(&quot;echo&quot;, &quot;Echo input&quot;, func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n        input := req.Params.Arguments[&quot;input&quot;].(string)\n        return mcp.NewToolResultText(input), nil\n    })\n \n    ctx := context.Background()\n    err := tc.Initialize(ctx)\n    require.NoError(t, err)\n \n    // Test tool call\n    result, err := tc.CallTool(ctx, &quot;echo&quot;, map[string]interface{}{\n        &quot;input&quot;: &quot;hello world&quot;,\n    })\n    require.NoError(t, err)\n    assert.Equal(t, &quot;hello world&quot;, result.Content[0].Text)\n}\n","title":"In-Process Client for Testing","titles":["Client Transports","In-Process Client"]},"112":{"href":"/clients/transports#transport-selection","html":"\n","isPage":false,"text":"\n","title":"Transport Selection","titles":["Client Transports"]},"113":{"href":"/clients/transports#decision-matrix","html":"\n<p>Choose your transport based on these factors:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TransportRequirements</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    RealTime        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    MultiClient     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    NetworkRequired </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Performance     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // &quot;high&quot;, &quot;medium&quot;, &quot;low&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Complexity      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // &quot;low&quot;, &quot;medium&quot;, &quot;high&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SelectTransport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TransportRequirements</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">req.NetworkRequired </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Performance </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;high&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;inprocess&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">req.NetworkRequired </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">req.MultiClient:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stdio&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.RealTime </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.MultiClient:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.NetworkRequired </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.MultiClient:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;streamablehttp&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stdio&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Default fallback</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage examples</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateTransportSelection</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // High-performance testing</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    testReq </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TransportRequirements</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        RealTime:        </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MultiClient:     </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        NetworkRequired: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Performance:     </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;high&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Complexity:      </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;low&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Testing: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SelectTransport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(testReq))</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Real-time web application</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    webReq </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TransportRequirements</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        RealTime:        </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MultiClient:     </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        NetworkRequired: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Performance:     </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;medium&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Complexity:      </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;medium&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Web app: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SelectTransport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(webReq))</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // CLI tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cliReq </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TransportRequirements</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        RealTime:        </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        MultiClient:     </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        NetworkRequired: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Performance:     </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;medium&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Complexity:      </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;low&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;CLI tool: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SelectTransport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(cliReq))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nChoose your transport based on these factors:\ntype TransportRequirements struct {\n    RealTime        bool\n    MultiClient     bool\n    NetworkRequired bool\n    Performance     string // &quot;high&quot;, &quot;medium&quot;, &quot;low&quot;\n    Complexity      string // &quot;low&quot;, &quot;medium&quot;, &quot;high&quot;\n}\n \nfunc SelectTransport(req TransportRequirements) string {\n    switch {\n    case !req.NetworkRequired &amp;&amp; req.Performance == &quot;high&quot;:\n        return &quot;inprocess&quot;\n    \n    case !req.NetworkRequired &amp;&amp; !req.MultiClient:\n        return &quot;stdio&quot;\n    \n    case req.RealTime &amp;&amp; req.MultiClient:\n        return &quot;sse&quot;\n    \n    case req.NetworkRequired &amp;&amp; req.MultiClient:\n        return &quot;streamablehttp&quot;\n    \n    default:\n        return &quot;stdio&quot; // Default fallback\n    }\n}\n \n// Usage examples\nfunc demonstrateTransportSelection() {\n    // High-performance testing\n    testReq := TransportRequirements{\n        RealTime:        false,\n        MultiClient:     false,\n        NetworkRequired: false,\n        Performance:     &quot;high&quot;,\n        Complexity:      &quot;low&quot;,\n    }\n    fmt.Printf(&quot;Testing: %s\\n&quot;, SelectTransport(testReq))\n \n    // Real-time web application\n    webReq := TransportRequirements{\n        RealTime:        true,\n        MultiClient:     true,\n        NetworkRequired: true,\n        Performance:     &quot;medium&quot;,\n        Complexity:      &quot;medium&quot;,\n    }\n    fmt.Printf(&quot;Web app: %s\\n&quot;, SelectTransport(webReq))\n \n    // CLI tool\n    cliReq := TransportRequirements{\n        RealTime:        false,\n        MultiClient:     false,\n        NetworkRequired: false,\n        Performance:     &quot;medium&quot;,\n        Complexity:      &quot;low&quot;,\n    }\n    fmt.Printf(&quot;CLI tool: %s\\n&quot;, SelectTransport(cliReq))\n}\n","title":"Decision Matrix","titles":["Client Transports","Transport Selection"]},"114":{"href":"/clients/transports#multi-transport-client-factory","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ClientFactory</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    configs </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        configs: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">cf </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetStdioConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">command</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ...</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cf.configs[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;stdio&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StdioOptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Command: command,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Args:    args,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">cf </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetStreamableHTTPConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">baseURL</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">headers</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cf.configs[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;streamablehttp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        BaseURL </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        BaseURL: baseURL,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Headers: headers,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">cf </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetSSEConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">baseURL</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">headers</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cf.configs[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        BaseURL </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        BaseURL: baseURL,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Headers: headers,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">cf </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">transport</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stdio&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        config, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cf.configs[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;stdio&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StdioOptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;stdio config not set&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioClientWithOptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;streamablehttp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        config, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cf.configs[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;streamablehttp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            BaseURL </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;streamablehttp config not set&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        options </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">transport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StreamableHTTPCOption</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.Headers) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            options </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(options, transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHTTPHeaders</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.Headers))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHttpClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.BaseURL, options</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        config, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cf.configs[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            BaseURL </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sse config not set&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        options </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">transport</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientOption</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.Headers) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            options </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(options, transport.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHeaders</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.Headers))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEMCPClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config.BaseURL, options</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown transport: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, transport)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> demonstrateClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    factory </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewClientFactory</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Configure transports</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    factory.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetStdioConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    factory.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetStreamableHTTPConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Authorization&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Bearer token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    factory.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetSSEConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080/mcp/sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Authorization&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Bearer token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create client based on environment</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    transport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MCP_TRANSPORT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        transport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;stdio&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> factory.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(transport)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use client...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\ntype ClientFactory struct {\n    configs map[string]interface{}\n}\n \nfunc NewClientFactory() *ClientFactory {\n    return &amp;ClientFactory{\n        configs: make(map[string]interface{}),\n    }\n}\n \nfunc (cf *ClientFactory) SetStdioConfig(command string, args ...string) {\n    cf.configs[&quot;stdio&quot;] = client.StdioOptions{\n        Command: command,\n        Args:    args,\n    }\n}\n \nfunc (cf *ClientFactory) SetStreamableHTTPConfig(baseURL string, headers map[string]string) {\n    cf.configs[&quot;streamablehttp&quot;] = struct {\n        BaseURL string\n        Headers map[string]string\n    }{\n        BaseURL: baseURL,\n        Headers: headers,\n    }\n}\n \nfunc (cf *ClientFactory) SetSSEConfig(baseURL string, headers map[string]string) {\n    cf.configs[&quot;sse&quot;] = struct {\n        BaseURL string\n        Headers map[string]string\n    }{\n        BaseURL: baseURL,\n        Headers: headers,\n    }\n}\n \nfunc (cf *ClientFactory) CreateClient(transport string) (client.Client, error) {\n    switch transport {\n    case &quot;stdio&quot;:\n        config, ok := cf.configs[&quot;stdio&quot;].(client.StdioOptions)\n        if !ok {\n            return nil, fmt.Errorf(&quot;stdio config not set&quot;)\n        }\n        return client.NewStdioClientWithOptions(config)\n \n    case &quot;streamablehttp&quot;:\n        config, ok := cf.configs[&quot;streamablehttp&quot;].(struct {\n            BaseURL string\n            Headers map[string]string\n        })\n        if !ok {\n            return nil, fmt.Errorf(&quot;streamablehttp config not set&quot;)\n        }\n        \n        options := []transport.StreamableHTTPCOption{}\n        if len(config.Headers) &gt; 0 {\n            options = append(options, transport.WithHTTPHeaders(config.Headers))\n        }\n        \n        return client.NewStreamableHttpClient(config.BaseURL, options...), nil\n \n    case &quot;sse&quot;:\n        config, ok := cf.configs[&quot;sse&quot;].(struct {\n            BaseURL string\n            Headers map[string]string\n        })\n        if !ok {\n            return nil, fmt.Errorf(&quot;sse config not set&quot;)\n        }\n        \n        options := []transport.ClientOption{}\n        if len(config.Headers) &gt; 0 {\n            options = append(options, transport.WithHeaders(config.Headers))\n        }\n        \n        return client.NewSSEMCPClient(config.BaseURL, options...)\n \n    default:\n        return nil, fmt.Errorf(&quot;unknown transport: %s&quot;, transport)\n    }\n}\n \n// Usage\nfunc demonstrateClientFactory() {\n    factory := NewClientFactory()\n    \n    // Configure transports\n    factory.SetStdioConfig(&quot;go&quot;, &quot;run&quot;, &quot;server.go&quot;)\n    factory.SetStreamableHTTPConfig(&quot;http://localhost:8080/mcp&quot;, map[string]string{\n        &quot;Authorization&quot;: &quot;Bearer token&quot;,\n    })\n    factory.SetSSEConfig(&quot;http://localhost:8080/mcp/sse&quot;, map[string]string{\n        &quot;Authorization&quot;: &quot;Bearer token&quot;,\n    })\n \n    // Create client based on environment\n    transport := os.Getenv(&quot;MCP_TRANSPORT&quot;)\n    if transport == &quot;&quot; {\n        transport = &quot;stdio&quot;\n    }\n \n    client, err := factory.CreateClient(transport)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer client.Close()\n \n    // Use client...\n}","title":"Multi-Transport Client Factory","titles":["Client Transports","Transport Selection"]},"115":{"href":"/servers/advanced#advanced-server-features","html":"</header>\n<p>Explore powerful features that make MCP-Go servers production-ready: typed tools, session management, middleware, hooks, and more.</p>\n","isPage":true,"text":"\nExplore powerful features that make MCP-Go servers production-ready: typed tools, session management, middleware, hooks, and more.\n","title":"Advanced Server Features","titles":[]},"116":{"href":"/servers/advanced#typed-tools","html":"\n<p>Typed tools provide compile-time type safety and automatic parameter validation, reducing boilerplate and preventing runtime errors.</p>\n","isPage":false,"text":"\nTyped tools provide compile-time type safety and automatic parameter validation, reducing boilerplate and preventing runtime errors.\n","title":"Typed Tools","titles":["Advanced Server Features"]},"117":{"href":"/servers/advanced#basic-typed-tool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">encoding/json</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Define input and output types</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> CalculateInput</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Operation </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  `json:&quot;operation&quot; validate:&quot;required,oneof=add subtract multiply divide&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    X         </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;x&quot; validate:&quot;required&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Y         </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;y&quot; validate:&quot;required&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> CalculateOutput</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Result    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;result&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Operation </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  `json:&quot;operation&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Typed Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create typed tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Perform arithmetic operations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tool with typed handler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tool, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTypedToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(handleCalculateTyped))</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCalculateTyped</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">input</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> CalculateInput</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.Operation {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.X </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.Y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.X </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.Y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.X </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.Y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.Y </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;division by zero&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.X </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> input.Y</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    output </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> CalculateOutput</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Result:    result,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Operation: input.Operation,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(output)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to marshal result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;encoding/json&quot;\n    &quot;fmt&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \n// Define input and output types\ntype CalculateInput struct {\n    Operation string  `json:&quot;operation&quot; validate:&quot;required,oneof=add subtract multiply divide&quot;`\n    X         float64 `json:&quot;x&quot; validate:&quot;required&quot;`\n    Y         float64 `json:&quot;y&quot; validate:&quot;required&quot;`\n}\n \ntype CalculateOutput struct {\n    Result    float64 `json:&quot;result&quot;`\n    Operation string  `json:&quot;operation&quot;`\n}\n \nfunc main() {\n    s := server.NewMCPServer(&quot;Typed Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n    )\n \n    // Create typed tool\n    tool := mcp.NewTool(&quot;calculate&quot;,\n        mcp.WithDescription(&quot;Perform arithmetic operations&quot;),\n        mcp.WithString(&quot;operation&quot;, mcp.Required()),\n        mcp.WithNumber(&quot;x&quot;, mcp.Required()),\n        mcp.WithNumber(&quot;y&quot;, mcp.Required()),\n    )\n    \n    // Add tool with typed handler\n    s.AddTool(tool, mcp.NewTypedToolHandler(handleCalculateTyped))\n \n    server.ServeStdio(s)\n}\n \nfunc handleCalculateTyped(ctx context.Context, req mcp.CallToolRequest, input CalculateInput) (*mcp.CallToolResult, error) {\n    var result float64\n    \n    switch input.Operation {\n    case &quot;add&quot;:\n        result = input.X + input.Y\n    case &quot;subtract&quot;:\n        result = input.X - input.Y\n    case &quot;multiply&quot;:\n        result = input.X * input.Y\n    case &quot;divide&quot;:\n        if input.Y == 0 {\n            return mcp.NewToolResultError(&quot;division by zero&quot;), nil\n        }\n        result = input.X / input.Y\n    }\n \n    output := CalculateOutput{\n        Result:    result,\n        Operation: input.Operation,\n    }\n    \n    jsonData, err := json.Marshal(output)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to marshal result: %v&quot;, err)), nil\n    }\n    \n    return mcp.NewToolResultText(string(jsonData)), nil\n}\n","title":"Basic Typed Tool","titles":["Advanced Server Features","Typed Tools"]},"118":{"href":"/servers/advanced#complex-typed-tool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UserCreateInput</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            `json:&quot;name&quot; validate:&quot;required,min=1,max=100&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Email    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            `json:&quot;email&quot; validate:&quot;required,email&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Age      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">               `json:&quot;age&quot; validate:&quot;min=0,max=150&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Tags     []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">          `json:&quot;tags&quot; validate:&quot;dive,min=1&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Metadata </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;metadata&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Active   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">              `json:&quot;active&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UserCreateOutput</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ID        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;id&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;name&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Email     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;email&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    CreatedAt </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;created_at&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Status    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;status&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCreateUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">input</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UserCreateInput</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validation is automatic based on struct tags</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create user in database</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    user </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">User</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ID:        </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">generateID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:      input.Name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Email:     input.Email,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Age:       input.Age,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Tags:      input.Tags,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Metadata:  input.Metadata,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Active:    input.Active,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        CreatedAt: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> db.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Create</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(user); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to create user: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    output </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">UserCreateOutput</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ID:        user.ID,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:      user.Name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Email:     user.Email,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        CreatedAt: user.CreatedAt,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Status:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;created&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultJSON</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(output), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype UserCreateInput struct {\n    Name     string            `json:&quot;name&quot; validate:&quot;required,min=1,max=100&quot;`\n    Email    string            `json:&quot;email&quot; validate:&quot;required,email&quot;`\n    Age      int               `json:&quot;age&quot; validate:&quot;min=0,max=150&quot;`\n    Tags     []string          `json:&quot;tags&quot; validate:&quot;dive,min=1&quot;`\n    Metadata map[string]string `json:&quot;metadata&quot;`\n    Active   bool              `json:&quot;active&quot;`\n}\n \ntype UserCreateOutput struct {\n    ID        string    `json:&quot;id&quot;`\n    Name      string    `json:&quot;name&quot;`\n    Email     string    `json:&quot;email&quot;`\n    CreatedAt time.Time `json:&quot;created_at&quot;`\n    Status    string    `json:&quot;status&quot;`\n}\n \nfunc handleCreateUser(ctx context.Context, req mcp.CallToolRequest, input UserCreateInput) (*mcp.CallToolResult, error) {\n    // Validation is automatic based on struct tags\n    \n    // Create user in database\n    user := &amp;User{\n        ID:        generateID(),\n        Name:      input.Name,\n        Email:     input.Email,\n        Age:       input.Age,\n        Tags:      input.Tags,\n        Metadata:  input.Metadata,\n        Active:    input.Active,\n        CreatedAt: time.Now(),\n    }\n \n    if err := db.Create(user); err != nil {\n        return nil, fmt.Errorf(&quot;failed to create user: %w&quot;, err)\n    }\n \n    output := &amp;UserCreateOutput{\n        ID:        user.ID,\n        Name:      user.Name,\n        Email:     user.Email,\n        CreatedAt: user.CreatedAt,\n        Status:    &quot;created&quot;,\n    }\n \n    return mcp.NewToolResultJSON(output), nil\n}\n","title":"Complex Typed Tool","titles":["Advanced Server Features","Typed Tools"]},"119":{"href":"/servers/advanced#custom-validation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">path/filepath</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/go-playground/validator/v10</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> FileOperationInput</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Path      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;path&quot; validate:&quot;required,filepath&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Operation </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;operation&quot; validate:&quot;required,oneof=read write delete&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Content   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;content&quot; validate:&quot;required_if=Operation write&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Custom validator</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> init</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    validate </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> validator.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    validate.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RegisterValidation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;filepath&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, validateFilePath)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateFilePath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">fl</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> validator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">FieldLevel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    path </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fl.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Field</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Prevent directory traversal</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Contains</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;..&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Ensure path is within allowed directory</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    allowedDir </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;/app/data&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    absPath, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filepath.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Abs</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HasPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(absPath, allowedDir)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nimport (\n    &quot;path/filepath&quot;\n    &quot;strings&quot;\n \n    &quot;github.com/go-playground/validator/v10&quot;\n)\n \ntype FileOperationInput struct {\n    Path      string `json:&quot;path&quot; validate:&quot;required,filepath&quot;`\n    Operation string `json:&quot;operation&quot; validate:&quot;required,oneof=read write delete&quot;`\n    Content   string `json:&quot;content&quot; validate:&quot;required_if=Operation write&quot;`\n}\n \n// Custom validator\nfunc init() {\n    validate := validator.New()\n    validate.RegisterValidation(&quot;filepath&quot;, validateFilePath)\n}\n \nfunc validateFilePath(fl validator.FieldLevel) bool {\n    path := fl.Field().String()\n    \n    // Prevent directory traversal\n    if strings.Contains(path, &quot;..&quot;) {\n        return false\n    }\n    \n    // Ensure path is within allowed directory\n    allowedDir := &quot;/app/data&quot;\n    absPath, err := filepath.Abs(path)\n    if err != nil {\n        return false\n    }\n    \n    return strings.HasPrefix(absPath, allowedDir)\n}\n","title":"Custom Validation","titles":["Advanced Server Features","Typed Tools"]},"120":{"href":"/servers/advanced#session-management","html":"\n<p>Handle multiple clients with per-session state and tools.</p>\n","isPage":false,"text":"\nHandle multiple clients with per-session state and tools.\n","title":"Session Management","titles":["Advanced Server Features"]},"121":{"href":"/servers/advanced#per-session-state","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SessionState</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    UserID      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Permissions []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Settings    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    StartTime   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> SessionManager</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionState</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessions: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">userID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">permissions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.sessions[sessionID] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        UserID:      userID,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Permissions: permissions,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Settings:    </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        StartTime:   time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    session, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.sessions[sessionID]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> session, exists</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RemoveSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    delete</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sm.sessions, sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype SessionState struct {\n    UserID      string\n    Permissions []string\n    Settings    map[string]interface{}\n    StartTime   time.Time\n}\n \ntype SessionManager struct {\n    sessions map[string]*SessionState\n    mutex    sync.RWMutex\n}\n \nfunc NewSessionManager() *SessionManager {\n    return &amp;SessionManager{\n        sessions: make(map[string]*SessionState),\n    }\n}\n \nfunc (sm *SessionManager) CreateSession(sessionID, userID string, permissions []string) {\n    sm.mutex.Lock()\n    defer sm.mutex.Unlock()\n    \n    sm.sessions[sessionID] = &amp;SessionState{\n        UserID:      userID,\n        Permissions: permissions,\n        Settings:    make(map[string]interface{}),\n        StartTime:   time.Now(),\n    }\n}\n \nfunc (sm *SessionManager) GetSession(sessionID string) (*SessionState, bool) {\n    sm.mutex.RLock()\n    defer sm.mutex.RUnlock()\n    \n    session, exists := sm.sessions[sessionID]\n    return session, exists\n}\n \nfunc (sm *SessionManager) RemoveSession(sessionID string) {\n    sm.mutex.Lock()\n    defer sm.mutex.Unlock()\n    \n    delete(sm.sessions, sessionID)\n}\n","title":"Per-Session State","titles":["Advanced Server Features","Session Management"]},"122":{"href":"/servers/advanced#session-aware-tools","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessionManager </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Hooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddOnRegisterSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">session</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Initialize session with default permissions</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessionManager.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(session.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;anonymous&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;read&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> started&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, session.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddOnUnregisterSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">session</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessionManager.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RemoveSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(session.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ended&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, session.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(hooks),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add session-aware tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;get_user_data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Get user-specific data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;data_type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        createSessionAwareTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionManager),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createSessionAwareTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessionID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        session, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid session&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        dataType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;data_type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Check permissions</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">hasPermission</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(session.Permissions, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;read&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;insufficient permissions&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Get user-specific data</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getUserData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(session.UserID, dataType)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to marshal result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc main() {\n    sessionManager := NewSessionManager()\n    \n    hooks := &amp;server.Hooks{}\n    \n    hooks.AddOnRegisterSession(func(ctx context.Context, session server.ClientSession) {\n        // Initialize session with default permissions\n        sessionManager.CreateSession(session.ID(), &quot;anonymous&quot;, []string{&quot;read&quot;})\n        log.Printf(&quot;Session %s started&quot;, session.ID())\n    })\n    \n    hooks.AddOnUnregisterSession(func(ctx context.Context, session server.ClientSession) {\n        sessionManager.RemoveSession(session.ID())\n        log.Printf(&quot;Session %s ended&quot;, session.ID())\n    })\n    \n    s := server.NewMCPServer(&quot;Session Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n        server.WithHooks(hooks),\n    )\n \n    // Add session-aware tool\n    s.AddTool(\n        mcp.NewTool(&quot;get_user_data&quot;,\n            mcp.WithDescription(&quot;Get user-specific data&quot;),\n            mcp.WithString(&quot;data_type&quot;, mcp.Required()),\n        ),\n        createSessionAwareTool(sessionManager),\n    )\n \n    server.ServeStdio(s)\n}\n \nfunc createSessionAwareTool(sm *SessionManager) server.ToolHandler {\n    return func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n        sessionID := server.GetSessionID(ctx)\n        session, exists := sm.GetSession(sessionID)\n        if !exists {\n            return nil, fmt.Errorf(&quot;invalid session&quot;)\n        }\n \n        dataType := req.Params.Arguments[&quot;data_type&quot;].(string)\n        \n        // Check permissions\n        if !hasPermission(session.Permissions, &quot;read&quot;) {\n            return nil, fmt.Errorf(&quot;insufficient permissions&quot;)\n        }\n \n        // Get user-specific data\n        data, err := getUserData(session.UserID, dataType)\n        if err != nil {\n            return nil, err\n        }\n \n        jsonData, err := json.Marshal(data)\n        if err != nil {\n            return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to marshal result: %v&quot;, err)), nil\n        }\n        \n        return mcp.NewToolResultText(string(jsonData)), nil\n    }\n}\n","title":"Session-Aware Tools","titles":["Advanced Server Features","Session Management"]},"123":{"href":"/servers/advanced#middleware","html":"\n<p>Add cross-cutting concerns like logging, authentication, and rate limiting.</p>\n","isPage":false,"text":"\nAdd cross-cutting concerns like logging, authentication, and rate limiting.\n","title":"Middleware","titles":["Advanced Server Features"]},"124":{"href":"/servers/advanced#logging-middleware","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> LoggingMiddleware</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logger </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Logger</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewLoggingMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">logger</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Logger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LoggingMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LoggingMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{logger: logger}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LoggingMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToolMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandlerFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandlerFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        start </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessionID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        m.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call started: tool=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, req.Params.Name)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        duration </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Since</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(start)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            m.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call failed: session=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> tool=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> duration=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> error=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                sessionID, req.Params.Name, duration, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            m.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool call completed: session=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> tool=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> duration=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                sessionID, req.Params.Name, duration)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">LoggingMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ResourceMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        start </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessionID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        m.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resource read started: session=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> uri=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, sessionID, req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        duration </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Since</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(start)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            m.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resource read failed: session=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> uri=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> duration=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> error=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                sessionID, req.Params.URI, duration, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            m.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resource read completed: session=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> uri=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> duration=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                sessionID, req.Params.URI, duration)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype LoggingMiddleware struct {\n    logger *log.Logger\n}\n \nfunc NewLoggingMiddleware(logger *log.Logger) *LoggingMiddleware {\n    return &amp;LoggingMiddleware{logger: logger}\n}\n \nfunc (m *LoggingMiddleware) ToolMiddleware(next server.ToolHandlerFunc) server.ToolHandlerFunc {\n    return func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n        start := time.Now()\n        sessionID := server.GetSessionID(ctx)\n        \n        m.logger.Printf(&quot;Tool call started: tool=%s&quot;, req.Params.Name)\n        \n        result, err := next(ctx, req)\n        \n        duration := time.Since(start)\n        if err != nil {\n            m.logger.Printf(&quot;Tool call failed: session=%s tool=%s duration=%v error=%v&quot;, \n                sessionID, req.Params.Name, duration, err)\n        } else {\n            m.logger.Printf(&quot;Tool call completed: session=%s tool=%s duration=%v&quot;, \n                sessionID, req.Params.Name, duration)\n        }\n        \n        return result, err\n    }\n}\n \nfunc (m *LoggingMiddleware) ResourceMiddleware(next server.ResourceHandler) server.ResourceHandler {\n    return func(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n        start := time.Now()\n        sessionID := server.GetSessionID(ctx)\n        \n        m.logger.Printf(&quot;Resource read started: session=%s uri=%s&quot;, sessionID, req.Params.URI)\n        \n        result, err := next(ctx, req)\n        \n        duration := time.Since(start)\n        if err != nil {\n            m.logger.Printf(&quot;Resource read failed: session=%s uri=%s duration=%v error=%v&quot;, \n                sessionID, req.Params.URI, duration, err)\n        } else {\n            m.logger.Printf(&quot;Resource read completed: session=%s uri=%s duration=%v&quot;, \n                sessionID, req.Params.URI, duration)\n        }\n        \n        return result, err\n    }\n}\n","title":"Logging Middleware","titles":["Advanced Server Features","Middleware"]},"125":{"href":"/servers/advanced#rate-limiting-middleware","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> RateLimitMiddleware</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    limiters </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">rate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Limiter</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rate     </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">rate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Limit</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    burst    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewRateLimitMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">requestsPerSecond</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> float64</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">burst</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RateLimitMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RateLimitMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        limiters: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">rate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Limiter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        rate:     rate.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Limit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(requestsPerSecond),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        burst:    burst,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RateLimitMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getLimiter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">rate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Limiter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    m.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    limiter, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> m.limiters[sessionID]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    m.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        m.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        limiter </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rate.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewLimiter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(m.rate, m.burst)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        m.limiters[sessionID] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> limiter</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        m.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> limiter</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RateLimitMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToolMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessionID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        limiter </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> m.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getLimiter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">limiter.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Allow</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;rate limit exceeded for session </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype RateLimitMiddleware struct {\n    limiters map[string]*rate.Limiter\n    mutex    sync.RWMutex\n    rate     rate.Limit\n    burst    int\n}\n \nfunc NewRateLimitMiddleware(requestsPerSecond float64, burst int) *RateLimitMiddleware {\n    return &amp;RateLimitMiddleware{\n        limiters: make(map[string]*rate.Limiter),\n        rate:     rate.Limit(requestsPerSecond),\n        burst:    burst,\n    }\n}\n \nfunc (m *RateLimitMiddleware) getLimiter(sessionID string) *rate.Limiter {\n    m.mutex.RLock()\n    limiter, exists := m.limiters[sessionID]\n    m.mutex.RUnlock()\n    \n    if !exists {\n        m.mutex.Lock()\n        limiter = rate.NewLimiter(m.rate, m.burst)\n        m.limiters[sessionID] = limiter\n        m.mutex.Unlock()\n    }\n    \n    return limiter\n}\n \nfunc (m *RateLimitMiddleware) ToolMiddleware(next server.ToolHandler) server.ToolHandler {\n    return func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n        sessionID := server.GetSessionID(ctx)\n        limiter := m.getLimiter(sessionID)\n        \n        if !limiter.Allow() {\n            return nil, fmt.Errorf(&quot;rate limit exceeded for session %s&quot;, sessionID)\n        }\n        \n        return next(ctx, req)\n    }\n}\n","title":"Rate Limiting Middleware","titles":["Advanced Server Features","Middleware"]},"126":{"href":"/servers/advanced#authentication-middleware","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> AuthMiddleware</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tokenValidator </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TokenValidator</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewAuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">validator</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TokenValidator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{tokenValidator: validator}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToolMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Extract token from context or request</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        token </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;authentication required&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Validate token</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        user, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> m.tokenValidator.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Validate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(token)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid token: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Add user to context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithValue</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, user)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype AuthMiddleware struct {\n    tokenValidator TokenValidator\n}\n \nfunc NewAuthMiddleware(validator TokenValidator) *AuthMiddleware {\n    return &amp;AuthMiddleware{tokenValidator: validator}\n}\n \nfunc (m *AuthMiddleware) ToolMiddleware(next server.ToolHandler) server.ToolHandler {\n    return func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n        // Extract token from context or request\n        token := extractToken(ctx, req)\n        if token == &quot;&quot; {\n            return nil, fmt.Errorf(&quot;authentication required&quot;)\n        }\n        \n        // Validate token\n        user, err := m.tokenValidator.Validate(token)\n        if err != nil {\n            return nil, fmt.Errorf(&quot;invalid token: %w&quot;, err)\n        }\n        \n        // Add user to context\n        ctx = context.WithValue(ctx, &quot;user&quot;, user)\n        \n        return next(ctx, req)\n    }\n}\n","title":"Authentication Middleware","titles":["Advanced Server Features","Middleware"]},"127":{"href":"/servers/advanced#hooks","html":"\n<p>Implement lifecycle callbacks for telemetry, logging, and custom behavior.</p>\n","isPage":false,"text":"\nImplement lifecycle callbacks for telemetry, logging, and custom behavior.\n","title":"Hooks","titles":["Advanced Server Features"]},"128":{"href":"/servers/advanced#comprehensive-hooks","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> TelemetryHooks</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    metrics </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MetricsCollector</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logger  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Logger</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewTelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">metrics</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MetricsCollector</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">logger</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Logger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        metrics: metrics,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        logger:  logger,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnServerStart</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MCP Server starting&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server.starts&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnServerStop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MCP Server stopping&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;server.stops&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnSessionStart</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session started: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sessions.started&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Gauge</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sessions.active&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, h.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getActiveSessionCount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnSessionEnd</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session ended: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sessions.ended&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Gauge</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sessions.active&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, h.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getActiveSessionCount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnToolCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">duration</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tools.calls&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    toolName,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;session&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: sessionID,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Histogram</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tools.duration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, duration.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Seconds</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: toolName,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tools.errors&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: toolName,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnResourceRead</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">duration</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resources.reads&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;session&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: sessionID,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Histogram</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resources.duration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, duration.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Seconds</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        h.metrics.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Increment</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resources.errors&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype TelemetryHooks struct {\n    metrics MetricsCollector\n    logger  *log.Logger\n}\n \nfunc NewTelemetryHooks(metrics MetricsCollector, logger *log.Logger) *TelemetryHooks {\n    return &amp;TelemetryHooks{\n        metrics: metrics,\n        logger:  logger,\n    }\n}\n \nfunc (h *TelemetryHooks) OnServerStart() {\n    h.logger.Println(&quot;MCP Server starting&quot;)\n    h.metrics.Increment(&quot;server.starts&quot;)\n}\n \nfunc (h *TelemetryHooks) OnServerStop() {\n    h.logger.Println(&quot;MCP Server stopping&quot;)\n    h.metrics.Increment(&quot;server.stops&quot;)\n}\n \nfunc (h *TelemetryHooks) OnSessionStart(sessionID string) {\n    h.logger.Printf(&quot;Session started: %s&quot;, sessionID)\n    h.metrics.Increment(&quot;sessions.started&quot;)\n    h.metrics.Gauge(&quot;sessions.active&quot;, h.getActiveSessionCount())\n}\n \nfunc (h *TelemetryHooks) OnSessionEnd(sessionID string) {\n    h.logger.Printf(&quot;Session ended: %s&quot;, sessionID)\n    h.metrics.Increment(&quot;sessions.ended&quot;)\n    h.metrics.Gauge(&quot;sessions.active&quot;, h.getActiveSessionCount())\n}\n \nfunc (h *TelemetryHooks) OnToolCall(sessionID, toolName string, duration time.Duration, err error) {\n    h.metrics.Increment(&quot;tools.calls&quot;, map[string]string{\n        &quot;tool&quot;:    toolName,\n        &quot;session&quot;: sessionID,\n    })\n    h.metrics.Histogram(&quot;tools.duration&quot;, duration.Seconds(), map[string]string{\n        &quot;tool&quot;: toolName,\n    })\n    \n    if err != nil {\n        h.metrics.Increment(&quot;tools.errors&quot;, map[string]string{\n            &quot;tool&quot;: toolName,\n        })\n    }\n}\n \nfunc (h *TelemetryHooks) OnResourceRead(sessionID, uri string, duration time.Duration, err error) {\n    h.metrics.Increment(&quot;resources.reads&quot;, map[string]string{\n        &quot;session&quot;: sessionID,\n    })\n    h.metrics.Histogram(&quot;resources.duration&quot;, duration.Seconds())\n    \n    if err != nil {\n        h.metrics.Increment(&quot;resources.errors&quot;)\n    }\n}\n","title":"Comprehensive Hooks","titles":["Advanced Server Features","Hooks"]},"129":{"href":"/servers/advanced#custom-business-logic-hooks","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> BusinessHooks</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    auditLogger </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuditLogger</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifier    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notifier</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">BusinessHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnToolCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">duration</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Audit sensitive operations</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isSensitiveTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(toolName) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        h.auditLogger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">LogToolCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID, toolName, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Alert on errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        h.notifier.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendAlert</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed for session </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            toolName, sessionID, err))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Monitor performance</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> duration </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        h.notifier.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendAlert</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Slow tool execution: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> took </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            toolName, duration))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">BusinessHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnSessionStart</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize user-specific resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">initializeUserResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Send welcome notification</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.notifier.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendWelcome</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">BusinessHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnSessionEnd</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Cleanup user resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cleanupUserResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Log session summary</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.auditLogger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">LogSessionEnd</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype BusinessHooks struct {\n    auditLogger AuditLogger\n    notifier    Notifier\n}\n \nfunc (h *BusinessHooks) OnToolCall(sessionID, toolName string, duration time.Duration, err error) {\n    // Audit sensitive operations\n    if isSensitiveTool(toolName) {\n        h.auditLogger.LogToolCall(sessionID, toolName, err)\n    }\n    \n    // Alert on errors\n    if err != nil {\n        h.notifier.SendAlert(fmt.Sprintf(&quot;Tool %s failed for session %s: %v&quot;, \n            toolName, sessionID, err))\n    }\n    \n    // Monitor performance\n    if duration &gt; 30*time.Second {\n        h.notifier.SendAlert(fmt.Sprintf(&quot;Slow tool execution: %s took %v&quot;, \n            toolName, duration))\n    }\n}\n \nfunc (h *BusinessHooks) OnSessionStart(sessionID string) {\n    // Initialize user-specific resources\n    h.initializeUserResources(sessionID)\n    \n    // Send welcome notification\n    h.notifier.SendWelcome(sessionID)\n}\n \nfunc (h *BusinessHooks) OnSessionEnd(sessionID string) {\n    // Cleanup user resources\n    h.cleanupUserResources(sessionID)\n    \n    // Log session summary\n    h.auditLogger.LogSessionEnd(sessionID)\n}\n","title":"Custom Business Logic Hooks","titles":["Advanced Server Features","Hooks"]},"130":{"href":"/servers/advanced#tool-filtering","html":"\n<p>Conditionally expose tools based on context, permissions, or other criteria.</p>\n","isPage":false,"text":"\nConditionally expose tools based on context, permissions, or other criteria.\n","title":"Tool Filtering","titles":["Advanced Server Features"]},"131":{"href":"/servers/advanced#permission-based-filtering","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PermissionFilter</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessionManager </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewPermissionFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PermissionFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PermissionFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{sessionManager: sm}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">f </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PermissionFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FilterTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessionID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    session, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> f.sessionManager.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{} </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// No tools for invalid sessions</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> f.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">hasPermissionForTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(session, tool.Name) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            filtered </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(filtered, tool)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">f </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PermissionFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">hasPermissionForTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">session</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">SessionState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    requiredPermissions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">][]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;delete_user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;admin&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;modify_system&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;admin&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operator&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;read_data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:      {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;admin&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operator&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;create_report&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;admin&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operator&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    required, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> requiredPermissions[toolName]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Allow tools without specific requirements</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, permission </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> session.Permissions {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, req </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> required {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> permission </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype PermissionFilter struct {\n    sessionManager *SessionManager\n}\n \nfunc NewPermissionFilter(sm *SessionManager) *PermissionFilter {\n    return &amp;PermissionFilter{sessionManager: sm}\n}\n \nfunc (f *PermissionFilter) FilterTools(ctx context.Context, tools []mcp.Tool) []mcp.Tool {\n    sessionID := server.GetSessionID(ctx)\n    session, exists := f.sessionManager.GetSession(sessionID)\n    if !exists {\n        return []mcp.Tool{} // No tools for invalid sessions\n    }\n \n    var filtered []mcp.Tool\n    for _, tool := range tools {\n        if f.hasPermissionForTool(session, tool.Name) {\n            filtered = append(filtered, tool)\n        }\n    }\n    \n    return filtered\n}\n \nfunc (f *PermissionFilter) hasPermissionForTool(session *SessionState, toolName string) bool {\n    requiredPermissions := map[string][]string{\n        &quot;delete_user&quot;:    {&quot;admin&quot;},\n        &quot;modify_system&quot;:  {&quot;admin&quot;, &quot;operator&quot;},\n        &quot;read_data&quot;:      {&quot;admin&quot;, &quot;operator&quot;, &quot;user&quot;},\n        &quot;create_report&quot;:  {&quot;admin&quot;, &quot;operator&quot;, &quot;user&quot;},\n    }\n    \n    required, exists := requiredPermissions[toolName]\n    if !exists {\n        return true // Allow tools without specific requirements\n    }\n    \n    for _, permission := range session.Permissions {\n        for _, req := range required {\n            if permission == req {\n                return true\n            }\n        }\n    }\n    \n    return false\n}\n","title":"Permission-Based Filtering","titles":["Advanced Server Features","Tool Filtering"]},"132":{"href":"/servers/advanced#context-based-filtering","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> ContextFilter</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">f </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ContextFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">FilterTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    timeOfDay </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Hour</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    environment </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ENVIRONMENT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> f.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">shouldIncludeTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tool, timeOfDay, environment) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            filtered </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(filtered, tool)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filtered</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">f </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ContextFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">shouldIncludeTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tool</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Tool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">hour</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">env</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Maintenance tools only during off-hours</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    maintenanceTools </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;backup_database&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;cleanup_logs&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:     </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;restart_service&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> maintenanceTools[tool.Name] {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> hour </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 6</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ||</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> hour </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 22</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // Only between 10 PM and 6 AM</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Debug tools only in development</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    debugTools </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;debug_session&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;dump_state&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> debugTools[tool.Name] {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> env </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;development&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype ContextFilter struct{}\n \nfunc (f *ContextFilter) FilterTools(ctx context.Context, tools []mcp.Tool) []mcp.Tool {\n    timeOfDay := time.Now().Hour()\n    environment := os.Getenv(&quot;ENVIRONMENT&quot;)\n    \n    var filtered []mcp.Tool\n    for _, tool := range tools {\n        if f.shouldIncludeTool(tool, timeOfDay, environment) {\n            filtered = append(filtered, tool)\n        }\n    }\n    \n    return filtered\n}\n \nfunc (f *ContextFilter) shouldIncludeTool(tool mcp.Tool, hour int, env string) bool {\n    // Maintenance tools only during off-hours\n    maintenanceTools := map[string]bool{\n        &quot;backup_database&quot;:  true,\n        &quot;cleanup_logs&quot;:     true,\n        &quot;restart_service&quot;:  true,\n    }\n    \n    if maintenanceTools[tool.Name] {\n        return hour &lt; 6 || hour &gt; 22 // Only between 10 PM and 6 AM\n    }\n    \n    // Debug tools only in development\n    debugTools := map[string]bool{\n        &quot;debug_session&quot;: true,\n        &quot;dump_state&quot;:    true,\n    }\n    \n    if debugTools[tool.Name] {\n        return env == &quot;development&quot;\n    }\n    \n    return true\n}\n","title":"Context-Based Filtering","titles":["Advanced Server Features","Tool Filtering"]},"133":{"href":"/servers/advanced#notifications","html":"\n<p>Send server-to-client messages for real-time updates.</p>\n","isPage":false,"text":"\nSend server-to-client messages for real-time updates.\n","title":"Notifications","titles":["Advanced Server Features"]},"134":{"href":"/servers/advanced#custom-notifications","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleLongRunningTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    srv </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServerFromContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Simulate long-running work</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Millisecond)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Send custom notification to all clients</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:     </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;total&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Processing step </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">/100&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        srv.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendNotificationToAllClients</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, notification)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Long operation completed successfully&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleLongRunningTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    srv := server.ServerFromContext(ctx)\n    \n    // Simulate long-running work\n    for i := 0; i &lt; 100; i++ {\n        time.Sleep(100 * time.Millisecond)\n        \n        // Send custom notification to all clients\n        notification := map[string]interface{}{\n            &quot;type&quot;:     &quot;progress&quot;,\n            &quot;progress&quot;: i + 1,\n            &quot;total&quot;:    100,\n            &quot;message&quot;:  fmt.Sprintf(&quot;Processing step %d/100&quot;, i+1),\n        }\n        \n        srv.SendNotificationToAllClients(&quot;progress&quot;, notification)\n    }\n    \n    return mcp.NewToolResultText(&quot;Long operation completed successfully&quot;), nil\n}\n","title":"Custom Notifications","titles":["Advanced Server Features","Notifications"]},"135":{"href":"/servers/advanced#custom-notifications-1","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> CustomNotifier</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewCustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessions: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">n </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RegisterSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    n.sessions[sessionID] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">n </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">UnregisterSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ch, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> n.sessions[sessionID]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ch)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        delete</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(n.sessions, sessionID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">n </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendAlert</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">message</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">severity</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ch, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> n.sessions[sessionID]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ch </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;alert&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Data: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  message,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;severity&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: severity,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;timestamp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Channel full, drop notification</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">n </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">BroadcastSystemMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">message</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> n.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notification </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Notification</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system_message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Data: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   message,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;timestamp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, ch </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> n.sessions {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ch </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> notification:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Channel full, skip this session</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype CustomNotifier struct {\n    sessions map[string]chan mcp.Notification\n    mutex    sync.RWMutex\n}\n \nfunc NewCustomNotifier() *CustomNotifier {\n    return &amp;CustomNotifier{\n        sessions: make(map[string]chan mcp.Notification),\n    }\n}\n \nfunc (n *CustomNotifier) RegisterSession(sessionID string) {\n    n.mutex.Lock()\n    defer n.mutex.Unlock()\n    \n    n.sessions[sessionID] = make(chan mcp.Notification, 100)\n}\n \nfunc (n *CustomNotifier) UnregisterSession(sessionID string) {\n    n.mutex.Lock()\n    defer n.mutex.Unlock()\n    \n    if ch, exists := n.sessions[sessionID]; exists {\n        close(ch)\n        delete(n.sessions, sessionID)\n    }\n}\n \nfunc (n *CustomNotifier) SendAlert(sessionID, message string, severity string) {\n    n.mutex.RLock()\n    defer n.mutex.RUnlock()\n    \n    if ch, exists := n.sessions[sessionID]; exists {\n        select {\n        case ch &lt;- mcp.Notification{\n            Type: &quot;alert&quot;,\n            Data: map[string]interface{}{\n                &quot;message&quot;:  message,\n                &quot;severity&quot;: severity,\n                &quot;timestamp&quot;: time.Now().Unix(),\n            },\n        }:\n        default:\n            // Channel full, drop notification\n        }\n    }\n}\n \nfunc (n *CustomNotifier) BroadcastSystemMessage(message string) {\n    n.mutex.RLock()\n    defer n.mutex.RUnlock()\n    \n    notification := mcp.Notification{\n        Type: &quot;system_message&quot;,\n        Data: map[string]interface{}{\n            &quot;message&quot;:   message,\n            &quot;timestamp&quot;: time.Now().Unix(),\n        },\n    }\n    \n    for _, ch := range n.sessions {\n        select {\n        case ch &lt;- notification:\n        default:\n            // Channel full, skip this session\n        }\n    }\n}\n","title":"Custom Notifications","titles":["Advanced Server Features","Notifications"]},"136":{"href":"/servers/advanced#production-configuration","html":"\n","isPage":false,"text":"\n","title":"Production Configuration","titles":["Advanced Server Features"]},"137":{"href":"/servers/advanced#complete-production-server","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize components</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logger </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(os.Stdout, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;[MCP] &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, log.LstdFlags)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    metrics </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewPrometheusMetrics</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessionManager </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    notifier </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewCustomNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create middleware</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    loggingMW </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewLoggingMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(logger)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rateLimitMW </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewRateLimitMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">20</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 10 req/sec, burst 20</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    authMW </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewAuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewJWTValidator</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create hooks</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    telemetryHooks </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewTelemetryHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(metrics, logger)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    businessHooks </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewBusinessHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewAuditLogger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSlackNotifier</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create server with all features</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Production Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(telemetryHooks),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolHandlerMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(loggingMW.ToolMiddleware),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPermissionFilter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionManager)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tools and resources</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addProductionTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addProductionResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addProductionPrompts</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start server with graceful shutdown</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    startWithGracefulShutdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> startWithGracefulShutdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Setup signal handling</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sigChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> os</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Signal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    signal.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Notify</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sigChan, os.Interrupt, syscall.SIGTERM)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start server in goroutine</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Wait for shutdown signal</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sigChan</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Shutting down server...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Graceful shutdown with timeout</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Shutdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Shutdown error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server stopped&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc main() {\n    // Initialize components\n    logger := log.New(os.Stdout, &quot;[MCP] &quot;, log.LstdFlags)\n    metrics := NewPrometheusMetrics()\n    sessionManager := NewSessionManager()\n    notifier := NewCustomNotifier()\n    \n    // Create middleware\n    loggingMW := NewLoggingMiddleware(logger)\n    rateLimitMW := NewRateLimitMiddleware(10.0, 20) // 10 req/sec, burst 20\n    authMW := NewAuthMiddleware(NewJWTValidator())\n    \n    // Create hooks\n    telemetryHooks := NewTelemetryHooks(metrics, logger)\n    businessHooks := NewBusinessHooks(NewAuditLogger(), NewSlackNotifier())\n    \n    // Create server with all features\n    s := server.NewMCPServer(&quot;Production Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n        server.WithResourceCapabilities(false, true),\n        server.WithPromptCapabilities(true),\n        server.WithRecovery(),\n        server.WithHooks(telemetryHooks),\n        server.WithToolHandlerMiddleware(loggingMW.ToolMiddleware),\n        server.WithToolFilter(NewPermissionFilter(sessionManager)),\n    )\n    \n    // Add tools and resources\n    addProductionTools(s)\n    addProductionResources(s)\n    addProductionPrompts(s)\n    \n    // Start server with graceful shutdown\n    startWithGracefulShutdown(s)\n}\n \nfunc startWithGracefulShutdown(s *server.MCPServer) {\n    // Setup signal handling\n    sigChan := make(chan os.Signal, 1)\n    signal.Notify(sigChan, os.Interrupt, syscall.SIGTERM)\n    \n    // Start server in goroutine\n    go func() {\n        if err := server.ServeStdio(s); err != nil {\n            log.Printf(&quot;Server error: %v&quot;, err)\n        }\n    }()\n    \n    // Wait for shutdown signal\n    &lt;-sigChan\n    log.Println(&quot;Shutting down server...&quot;)\n    \n    // Graceful shutdown with timeout\n    ctx, cancel := context.WithTimeout(context.Background(), 30*time.Second)\n    defer cancel()\n    \n    if err := s.Shutdown(ctx); err != nil {\n        log.Printf(&quot;Shutdown error: %v&quot;, err)\n    }\n    \n    log.Println(&quot;Server stopped&quot;)\n}\n","title":"Complete Production Server","titles":["Advanced Server Features","Production Configuration"]},"138":{"href":"/servers/advanced#next-steps","html":"\n<ul>\n<li><strong><a href=\"/clients\">Client Development</a></strong> - Learn to build MCP clients</li>\n<li><strong><a href=\"/servers/basics\">Server Basics</a></strong> - Review fundamental concepts</li>\n</ul>","isPage":false,"text":"\n\nClient Development - Learn to build MCP clients\nServer Basics - Review fundamental concepts\n","title":"Next Steps","titles":["Advanced Server Features"]},"139":{"href":"/servers/basics#server-basics","html":"</header>\n<p>Learn how to create, configure, and start MCP servers with different transport options.</p>\n","isPage":true,"text":"\nLearn how to create, configure, and start MCP servers with different transport options.\n","title":"Server Basics","titles":[]},"140":{"href":"/servers/basics#creating-a-server","html":"\n<p>The foundation of any MCP server is the <code>NewMCPServer()</code> function. This creates a server instance with basic metadata and optional configuration.</p>\n","isPage":false,"text":"\nThe foundation of any MCP server is the NewMCPServer() function. This creates a server instance with basic metadata and optional configuration.\n","title":"Creating a Server","titles":["Server Basics"]},"141":{"href":"/servers/basics#basic-server-creation","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create a basic server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;My MCP Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,  </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Server name</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,          </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Server version</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start the server (stdio transport)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    // Create a basic server\n    s := server.NewMCPServer(\n        &quot;My MCP Server&quot;,  // Server name\n        &quot;1.0.0&quot;,          // Server version\n    )\n    \n    // Start the server (stdio transport)\n    server.ServeStdio(s)\n}\n","title":"Basic Server Creation","titles":["Server Basics","Creating a Server"]},"142":{"href":"/servers/basics#server-with-options","html":"\n<p>Use server options to configure capabilities and behavior:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;Advanced Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;2.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),      </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Enable tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),  </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Enable resources  </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),    </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Enable prompts</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),                  </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Add panic recovery</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(myHooks),              </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Add lifecycle hooks</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nUse server options to configure capabilities and behavior:\ns := server.NewMCPServer(\n    &quot;Advanced Server&quot;,\n    &quot;2.0.0&quot;,\n    server.WithToolCapabilities(true),      // Enable tools\n    server.WithResourceCapabilities(true),  // Enable resources  \n    server.WithPromptCapabilities(true),    // Enable prompts\n    server.WithRecovery(),                  // Add panic recovery\n    server.WithHooks(myHooks),              // Add lifecycle hooks\n)\n","title":"Server with Options","titles":["Server Basics","Creating a Server"]},"143":{"href":"/servers/basics#server-configuration","html":"\n","isPage":false,"text":"\n","title":"Server Configuration","titles":["Server Basics"]},"144":{"href":"/servers/basics#capabilities","html":"\n<p>Capabilities tell clients what features your server supports:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Enable specific capabilities</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;Specialized Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),      </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Can execute tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),  </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Can provide resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),    </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Can provide prompts</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Or enable all capabilities</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;Full-Featured Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<strong>Capability types:</strong>\n<ul>\n<li><strong>Tools</strong>: Server can execute function calls from LLMs</li>\n<li><strong>Resources</strong>: Server can provide data/content to LLMs</li>\n<li><strong>Prompts</strong>: Server can provide prompt templates</li>\n</ul>\n","isPage":false,"text":"\nCapabilities tell clients what features your server supports:\n// Enable specific capabilities\ns := server.NewMCPServer(\n    &quot;Specialized Server&quot;,\n    &quot;1.0.0&quot;,\n    server.WithToolCapabilities(true),      // Can execute tools\n    server.WithResourceCapabilities(true),  // Can provide resources\n    server.WithPromptCapabilities(true),    // Can provide prompts\n)\n \n// Or enable all capabilities\ns := server.NewMCPServer(\n    &quot;Full-Featured Server&quot;, \n    &quot;1.0.0&quot;,\n    server.WithToolCapabilities(true),\n    server.WithResourceCapabilities(true),\n    server.WithPromptCapabilities(true),\n)\nCapability types:\n\nTools: Server can execute function calls from LLMs\nResources: Server can provide data/content to LLMs\nPrompts: Server can provide prompt templates\n\n","title":"Capabilities","titles":["Server Basics","Server Configuration"]},"145":{"href":"/servers/basics#recovery-middleware","html":"\n<p>Add automatic panic recovery to prevent server crashes:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;Robust Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Automatically recover from panics</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>This catches panics in handlers and returns proper error responses instead of crashing.</p>\n","isPage":false,"text":"\nAdd automatic panic recovery to prevent server crashes:\ns := server.NewMCPServer(\n    &quot;Robust Server&quot;,\n    &quot;1.0.0&quot;, \n    server.WithRecovery(), // Automatically recover from panics\n)\nThis catches panics in handlers and returns proper error responses instead of crashing.\n","title":"Recovery Middleware","titles":["Server Basics","Server Configuration"]},"146":{"href":"/servers/basics#custom-metadata","html":"\n<p>Add additional server information:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;My Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithInstructions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;A server that does amazing things&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nAdd additional server information:\ns := server.NewMCPServer(\n    &quot;My Server&quot;,\n    &quot;1.0.0&quot;,\n    server.WithInstructions(&quot;A server that does amazing things&quot;),\n)\n","title":"Custom Metadata","titles":["Server Basics","Server Configuration"]},"147":{"href":"/servers/basics#starting-servers","html":"\n<p>MCP-Go supports multiple transport methods for different deployment scenarios.</p>\n","isPage":false,"text":"\nMCP-Go supports multiple transport methods for different deployment scenarios.\n","title":"Starting Servers","titles":["Server Basics"]},"148":{"href":"/servers/basics#stdio-transport","html":"\n<p>Standard input/output - most common for local tools:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;My Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start stdio server (blocks until terminated)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<strong>Best for:</strong>\n<ul>\n<li>Local development tools</li>\n<li>CLI integrations</li>\n<li>Desktop applications</li>\n<li>Single-client scenarios</li>\n</ul>\n","isPage":false,"text":"\nStandard input/output - most common for local tools:\nfunc main() {\n    s := server.NewMCPServer(&quot;My Server&quot;, &quot;1.0.0&quot;)\n    \n    // Start stdio server (blocks until terminated)\n    if err := server.ServeStdio(s); err != nil {\n        log.Fatal(err)\n    }\n}\nBest for:\n\nLocal development tools\nCLI integrations\nDesktop applications\nSingle-client scenarios\n\n","title":"Stdio Transport","titles":["Server Basics","Starting Servers"]},"149":{"href":"/servers/basics#http-transport","html":"\n<p>Traditional HTTP request/response:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;HTTP Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create HTTP server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start HTTP server on port 8080</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<strong>Best for:</strong>\n<ul>\n<li>Web services</li>\n<li>Load-balanced deployments</li>\n<li>REST-like APIs</li>\n<li>Caching scenarios</li>\n</ul>\n","isPage":false,"text":"\nTraditional HTTP request/response:\nfunc main() {\n    s := server.NewMCPServer(&quot;HTTP Server&quot;, &quot;1.0.0&quot;)\n    \n    // Create HTTP server\n    httpServer := server.NewStreamableHTTPServer(s)\n    \n    // Start HTTP server on port 8080\n    if err := httpServer.Start(&quot;:8080&quot;); err != nil {\n        log.Fatal(err)\n    }\n}\nBest for:\n\nWeb services\nLoad-balanced deployments\nREST-like APIs\nCaching scenarios\n\n","title":"HTTP Transport","titles":["Server Basics","Starting Servers"]},"150":{"href":"/servers/basics#server-sent-events-sse","html":"\n<p>HTTP-based streaming for real-time updates:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SSE Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create SSE server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start SSE server on port 8080</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<strong>Best for:</strong>\n<ul>\n<li>Web applications</li>\n<li>Real-time notifications</li>\n<li>Multiple concurrent clients</li>\n<li>Browser-based tools</li>\n</ul>\n","isPage":false,"text":"\nHTTP-based streaming for real-time updates:\nfunc main() {\n    s := server.NewMCPServer(&quot;SSE Server&quot;, &quot;1.0.0&quot;)\n    \n    // Create SSE server\n    sseServer := server.NewSSEServer(s)\n    \n    // Start SSE server on port 8080\n    if err := sseServer.Start(&quot;:8080&quot;); err != nil {\n        log.Fatal(err)\n    }\n}\nBest for:\n\nWeb applications\nReal-time notifications\nMultiple concurrent clients\nBrowser-based tools\n\n","title":"Server-Sent Events (SSE)","titles":["Server Basics","Starting Servers"]},"151":{"href":"/servers/basics#custom-transport-options","html":"\n<p>Configure transport-specific options:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// HTTP with custom options</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithEndpointPath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithStateless</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// SSE with custom options</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithSSEEndpoint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/events&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMessageEndpoint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithKeepAlive</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nConfigure transport-specific options:\n// HTTP with custom options\nhttpServer := server.NewStreamableHTTPServer(s,\n    server.WithEndpointPath(&quot;/mcp&quot;),\n    server.WithStateless(true),\n)\n \nif err := httpServer.Start(&quot;:8080&quot;); err != nil {\n    log.Fatal(err)\n}\n \n// SSE with custom options\nsseServer := server.NewSSEServer(s,\n    server.WithSSEEndpoint(&quot;/events&quot;),\n    server.WithMessageEndpoint(&quot;/message&quot;),\n    server.WithKeepAlive(true),\n)\n \nif err := sseServer.Start(&quot;:8080&quot;); err != nil {\n    log.Fatal(err)\n}\n","title":"Custom Transport Options","titles":["Server Basics","Starting Servers"]},"152":{"href":"/servers/basics#environment-based-configuration","html":"\n<p>Configure servers based on environment variables:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Configurable Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Choose transport based on environment</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    transport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MCP_TRANSPORT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;PORT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;8080&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;http&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">port)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">port)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nConfigure servers based on environment variables:\nfunc main() {\n    s := server.NewMCPServer(&quot;Configurable Server&quot;, &quot;1.0.0&quot;)\n    \n    // Choose transport based on environment\n    transport := os.Getenv(&quot;MCP_TRANSPORT&quot;)\n    port := os.Getenv(&quot;PORT&quot;)\n    if port == &quot;&quot; {\n        port = &quot;8080&quot;\n    }\n    \n    switch transport {\n    case &quot;http&quot;:\n        httpServer := server.NewStreamableHTTPServer(s)\n        httpServer.Start(&quot;:&quot;+port)\n    case &quot;sse&quot;:\n        sseServer := server.NewSSEServer(s)\n        sseServer.Start(&quot;:&quot;+port)\n    default:\n        server.ServeStdio(s)\n    }\n}\n}\n","title":"Environment-Based Configuration","titles":["Server Basics"]},"153":{"href":"/servers/basics#server-lifecycle","html":"\n<p>Understanding the server lifecycle helps with proper resource management:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Hooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add session lifecycle hooks</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddOnRegisterSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">session</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Client </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> connected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, session.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddOnUnregisterSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">session</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Client </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> disconnected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, session.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add request hooks</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddBeforeAny</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">id</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">method</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPMethod</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">message</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Processing </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> request&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, method)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    hooks.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddOnError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">id</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">method</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPMethod</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">message</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error in </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, method, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Lifecycle Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHooks</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(hooks),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Graceful shutdown</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> os</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Signal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    signal.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Notify</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c, os.Interrupt, syscall.SIGTERM)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">c</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Shutting down server...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Shutdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nUnderstanding the server lifecycle helps with proper resource management:\nfunc main() {\n    hooks := &amp;server.Hooks{}\n    \n    // Add session lifecycle hooks\n    hooks.AddOnRegisterSession(func(ctx context.Context, session server.ClientSession) {\n        log.Printf(&quot;Client %s connected&quot;, session.ID())\n    })\n    \n    hooks.AddOnUnregisterSession(func(ctx context.Context, session server.ClientSession) {\n        log.Printf(&quot;Client %s disconnected&quot;, session.ID())\n    })\n    \n    // Add request hooks\n    hooks.AddBeforeAny(func(ctx context.Context, id any, method mcp.MCPMethod, message any) {\n        log.Printf(&quot;Processing %s request&quot;, method)\n    })\n    \n    hooks.AddOnError(func(ctx context.Context, id any, method mcp.MCPMethod, message any, err error) {\n        log.Printf(&quot;Error in %s: %v&quot;, method, err)\n    })\n    \n    s := server.NewMCPServer(&quot;Lifecycle Server&quot;, &quot;1.0.0&quot;,\n        server.WithHooks(hooks),\n    )\n    \n    // Graceful shutdown\n    c := make(chan os.Signal, 1)\n    signal.Notify(c, os.Interrupt, syscall.SIGTERM)\n    \n    go func() {\n        &lt;-c\n        log.Println(&quot;Shutting down server...&quot;)\n        s.Shutdown()\n    }()\n    \n    server.ServeStdio(s)\n}\n","title":"Server Lifecycle","titles":["Server Basics"]},"154":{"href":"/servers/basics#error-handling","html":"\n<p>Proper error handling ensures robust server operation:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Error-Safe Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Panic recovery</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add error handling for server startup</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, server.ErrServerClosed) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server closed gracefully&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatalf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nProper error handling ensures robust server operation:\nfunc main() {\n    s := server.NewMCPServer(&quot;Error-Safe Server&quot;, &quot;1.0.0&quot;,\n        server.WithRecovery(), // Panic recovery\n    )\n    \n    // Add error handling for server startup\n    if err := server.ServeStdio(s); err != nil {\n        if errors.Is(err, server.ErrServerClosed) {\n            log.Println(&quot;Server closed gracefully&quot;)\n        } else {\n            log.Fatalf(&quot;Server error: %v&quot;, err)\n        }\n    }\n}\n","title":"Error Handling","titles":["Server Basics"]},"155":{"href":"/servers/basics#next-steps","html":"\n<p>Now that you understand server basics, learn how to add functionality:</p>\n<ul>\n<li><strong><a href=\"/servers/resources\">Resources</a></strong> - Expose data to LLMs</li>\n<li><strong><a href=\"/servers/tools\">Tools</a></strong> - Provide functionality to LLMs</li>\n<li><strong><a href=\"/servers/prompts\">Prompts</a></strong> - Create reusable interaction templates</li>\n<li><strong><a href=\"/servers/advanced\">Advanced Features</a></strong> - Hooks, middleware, and more</li>\n</ul>","isPage":false,"text":"\nNow that you understand server basics, learn how to add functionality:\n\nResources - Expose data to LLMs\nTools - Provide functionality to LLMs\nPrompts - Create reusable interaction templates\nAdvanced Features - Hooks, middleware, and more\n","title":"Next Steps","titles":["Server Basics"]},"156":{"href":"/servers#building-mcp-servers","html":"</header>\n<p>Learn how to build powerful MCP servers with MCP-Go. This section covers everything from basic server setup to advanced features like typed tools and session management.</p>\n","isPage":true,"text":"\nLearn how to build powerful MCP servers with MCP-Go. This section covers everything from basic server setup to advanced features like typed tools and session management.\n","title":"Building MCP Servers","titles":[]},"157":{"href":"/servers#overview","html":"\n<p>MCP servers expose tools, resources, and prompts to LLM clients. MCP-Go makes it easy to build robust servers with minimal boilerplate while providing full control over advanced features.</p>\n","isPage":false,"text":"\nMCP servers expose tools, resources, and prompts to LLM clients. MCP-Go makes it easy to build robust servers with minimal boilerplate while providing full control over advanced features.\n","title":"Overview","titles":["Building MCP Servers"]},"158":{"href":"/servers#what-youll-learn","html":"\n<ul>\n<li><strong><a href=\"/servers/basics\">Server Basics</a></strong> - Creating and configuring servers</li>\n<li><strong><a href=\"/servers/resources\">Resources</a></strong> - Exposing data to LLMs</li>\n<li><strong><a href=\"/servers/tools\">Tools</a></strong> - Providing functionality to LLMs</li>\n<li><strong><a href=\"/servers/prompts\">Prompts</a></strong> - Creating reusable interaction templates</li>\n<li><strong><a href=\"/servers/advanced\">Advanced Features</a></strong> - Typed tools, middleware, hooks, and more</li>\n</ul>\n","isPage":false,"text":"\n\nServer Basics - Creating and configuring servers\nResources - Exposing data to LLMs\nTools - Providing functionality to LLMs\nPrompts - Creating reusable interaction templates\nAdvanced Features - Typed tools, middleware, hooks, and more\n\n","title":"What You&#x27;ll Learn","titles":["Building MCP Servers"]},"159":{"href":"/servers#quick-example","html":"\n<p>Here&#x27;s a complete MCP server that demonstrates the key concepts:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">encoding/json</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> start </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    start </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create server with capabilities</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Demo Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add a tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;get_time&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Get the current time&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;format&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Time format (RFC3339, Unix, etc.)&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;RFC3339&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleGetTime,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add a resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;config://server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;Server Configuration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Current server configuration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleConfig,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add a prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;analyze_logs&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Analyze server logs for issues&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;log_level&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ArgumentDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Minimum log level to analyze&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleAnalyzeLogs,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start the server</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleGetTime</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    format </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;format&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;RFC3339&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> timeStr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> format {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Unix&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        timeStr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        timeStr </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Format</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(time.RFC3339)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(timeStr), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    config </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Demo Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;version&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;uptime&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Since</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(start).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    configJSON, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(configJSON),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleAnalyzeLogs</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logLevel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;error&quot;</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // default value</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments; args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> level, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;log_level&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            logLevel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> level</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Analyze server logs for potential issues&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: mcp.RoleUser,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;Please analyze the server logs for entries at </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> level or higher. &quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;Look for patterns, errors, and potential issues that need attention.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    logLevel,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                )),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nHere&#x27;s a complete MCP server that demonstrates the key concepts:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;encoding/json&quot;\n    &quot;fmt&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nvar start time.Time\n \nfunc main() {\n    start = time.Now()\n    // Create server with capabilities\n    s := server.NewMCPServer(\n        &quot;Demo Server&quot;,\n        &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n        server.WithResourceCapabilities(false, true),\n        server.WithPromptCapabilities(true),\n    )\n \n    // Add a tool\n    s.AddTool(\n        mcp.NewTool(&quot;get_time&quot;,\n            mcp.WithDescription(&quot;Get the current time&quot;),\n            mcp.WithString(&quot;format&quot;, \n                mcp.Description(&quot;Time format (RFC3339, Unix, etc.)&quot;),\n                mcp.DefaultString(&quot;RFC3339&quot;),\n            ),\n        ),\n        handleGetTime,\n    )\n \n    // Add a resource\n    s.AddResource(\n        mcp.NewResource(\n            &quot;config://server&quot;,\n            &quot;Server Configuration&quot;,\n            mcp.WithResourceDescription(&quot;Current server configuration&quot;),\n            mcp.WithMIMEType(&quot;application/json&quot;),\n        ),\n        handleConfig,\n    )\n \n    // Add a prompt\n    s.AddPrompt(\n        mcp.NewPrompt(&quot;analyze_logs&quot;,\n            mcp.WithPromptDescription(&quot;Analyze server logs for issues&quot;),\n            mcp.WithArgument(&quot;log_level&quot;,\n                mcp.ArgumentDescription(&quot;Minimum log level to analyze&quot;),\n            ),\n        ),\n        handleAnalyzeLogs,\n    )\n \n    // Start the server\n    if err := server.ServeStdio(s); err != nil {\n        fmt.Printf(&quot;Server error: %v\\n&quot;, err)\n    }\n}\n \nfunc handleGetTime(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    format := req.GetString(&quot;format&quot;, &quot;RFC3339&quot;)\n    \n    var timeStr string\n    switch format {\n    case &quot;Unix&quot;:\n        timeStr = fmt.Sprintf(&quot;%d&quot;, time.Now().Unix())\n    default:\n        timeStr = time.Now().Format(time.RFC3339)\n    }\n    \n    return mcp.NewToolResultText(timeStr), nil\n}\n \nfunc handleConfig(ctx context.Context, req mcp.ReadResourceRequest) ([]mcp.ResourceContents, error) {\n    config := map[string]interface{}{\n        &quot;name&quot;: &quot;Demo Server&quot;,\n        &quot;version&quot;: &quot;1.0.0&quot;,\n        &quot;uptime&quot;: time.Since(start).String(),\n    }\n    \n    configJSON, err := json.Marshal(config)\n    if err != nil {\n        return nil, err\n    }\n    \n    return []mcp.ResourceContents{\n        mcp.TextResourceContents{\n            URI:      req.Params.URI,\n            MIMEType: &quot;application/json&quot;,\n            Text:     string(configJSON),\n        },\n    }, nil\n}\n \nfunc handleAnalyzeLogs(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    logLevel := &quot;error&quot; // default value\n    if args := req.Params.Arguments; args != nil {\n        if level, ok := args[&quot;log_level&quot;].(string); ok {\n            logLevel = level\n        }\n    }\n    \n    return &amp;mcp.GetPromptResult{\n        Description: &quot;Analyze server logs for potential issues&quot;,\n        Messages: []mcp.PromptMessage{\n            {\n                Role: mcp.RoleUser,\n                Content: mcp.NewTextContent(fmt.Sprintf(\n                    &quot;Please analyze the server logs for entries at %s level or higher. &quot;+\n                    &quot;Look for patterns, errors, and potential issues that need attention.&quot;,\n                    logLevel,\n                )),\n            },\n        },\n    }, nil\n}\n","title":"Quick Example","titles":["Building MCP Servers"]},"160":{"href":"/servers#next-steps","html":"\n<p>Start with <a href=\"/servers/basics\">Server Basics</a> to learn how to create and configure your first MCP server, then explore the other sections to add resources, tools, and advanced features.</p>","isPage":false,"text":"\nStart with Server Basics to learn how to create and configure your first MCP server, then explore the other sections to add resources, tools, and advanced features.","title":"Next Steps","titles":["Building MCP Servers"]},"161":{"href":"/servers/prompts#implementing-prompts","html":"</header>\n<p>Prompts are reusable interaction templates that help structure conversations between users and LLMs. They provide context, instructions, and can include dynamic content from resources.</p>\n","isPage":true,"text":"\nPrompts are reusable interaction templates that help structure conversations between users and LLMs. They provide context, instructions, and can include dynamic content from resources.\n","title":"Implementing Prompts","titles":[]},"162":{"href":"/servers/prompts#prompt-fundamentals","html":"\n<p>Prompts in MCP serve as templates that can be invoked by LLMs to generate structured interactions. They&#x27;re particularly useful for complex workflows, analysis tasks, or any scenario where you want to provide consistent context and instructions.</p>\n","isPage":false,"text":"\nPrompts in MCP serve as templates that can be invoked by LLMs to generate structured interactions. They&#x27;re particularly useful for complex workflows, analysis tasks, or any scenario where you want to provide consistent context and instructions.\n","title":"Prompt Fundamentals","titles":["Implementing Prompts"]},"163":{"href":"/servers/prompts#basic-prompt-structure","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create a simple prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">prompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code_review&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Review code for best practices and issues&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The code to review&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;language&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Programming language&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;auto-detect&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n// Create a simple prompt\nprompt := mcp.NewPrompt(&quot;code_review&quot;,\n    mcp.WithPromptDescription(&quot;Review code for best practices and issues&quot;),\n    mcp.WithPromptArgument(&quot;code&quot;,\n        mcp.Required(),\n        mcp.Description(&quot;The code to review&quot;),\n    ),\n    mcp.WithPromptArgument(&quot;language&quot;,\n        mcp.Description(&quot;Programming language&quot;),\n        mcp.Default(&quot;auto-detect&quot;),\n    ),\n)\n","title":"Basic Prompt Structure","titles":["Implementing Prompts","Prompt Fundamentals"]},"164":{"href":"/servers/prompts#prompt-templates","html":"\n","isPage":false,"text":"\n","title":"Prompt Templates","titles":["Implementing Prompts"]},"165":{"href":"/servers/prompts#basic-code-review-prompt","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Code Assistant&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Code review prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    codeReviewPrompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code_review&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Review code for best practices, bugs, and improvements&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The code to review&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;language&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Programming language (auto-detected if not specified)&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptArgument</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;focus&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Specific areas to focus on&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;security&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;performance&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;readability&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;best-practices&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;all&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;all&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(codeReviewPrompt, handleCodeReview)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCodeReview</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract arguments safely</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;missing required arguments&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    code, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;code argument is required and must be a string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    language </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(args, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;language&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;auto-detect&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    focus </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(args, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;focus&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;all&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Build the prompt based on focus area</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> focus {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;security&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Focus specifically on security vulnerabilities, input validation, and potential attack vectors.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;performance&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Focus on performance optimizations, algorithmic efficiency, and resource usage.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;readability&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Focus on code clarity, naming conventions, and maintainability.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;best-practices&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Focus on language-specific best practices and design patterns.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Provide a comprehensive review covering security, performance, readability, and best practices.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Code review for </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, language),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                    &quot;Please review the following </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> code:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n\\n%s\\n\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Instructions: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Please provide:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">1. Overall assessment</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">2. Specific issues found</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">3. Suggested improvements</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">4. Best practice recommendations</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Code:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span></span></code></pre>\n","isPage":false,"text":"\nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    s := server.NewMCPServer(&quot;Code Assistant&quot;, &quot;1.0.0&quot;,\n        server.WithPromptCapabilities(true),\n    )\n \n    // Code review prompt\n    codeReviewPrompt := mcp.NewPrompt(&quot;code_review&quot;,\n        mcp.WithPromptDescription(&quot;Review code for best practices, bugs, and improvements&quot;),\n        mcp.WithPromptArgument(&quot;code&quot;,\n            mcp.Required(),\n            mcp.Description(&quot;The code to review&quot;),\n        ),\n        mcp.WithPromptArgument(&quot;language&quot;,\n            mcp.Description(&quot;Programming language (auto-detected if not specified)&quot;),\n        ),\n        mcp.WithPromptArgument(&quot;focus&quot;,\n            mcp.Description(&quot;Specific areas to focus on&quot;),\n            mcp.Enum(&quot;security&quot;, &quot;performance&quot;, &quot;readability&quot;, &quot;best-practices&quot;, &quot;all&quot;),\n            mcp.Default(&quot;all&quot;),\n        ),\n    )\n \n    s.AddPrompt(codeReviewPrompt, handleCodeReview)\n    server.ServeStdio(s)\n}\n \nfunc handleCodeReview(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    // Extract arguments safely\n    args := req.Params.Arguments\n    if args == nil {\n        return nil, fmt.Errorf(&quot;missing required arguments&quot;)\n    }\n    \n    code, ok := args[&quot;code&quot;].(string)\n    if !ok {\n        return nil, fmt.Errorf(&quot;code argument is required and must be a string&quot;)\n    }\n    \n    language := getStringArg(args, &quot;language&quot;, &quot;auto-detect&quot;)\n    focus := getStringArg(args, &quot;focus&quot;, &quot;all&quot;)\n \n    // Build the prompt based on focus area\n    var instructions string\n    switch focus {\n    case &quot;security&quot;:\n        instructions = &quot;Focus specifically on security vulnerabilities, input validation, and potential attack vectors.&quot;\n    case &quot;performance&quot;:\n        instructions = &quot;Focus on performance optimizations, algorithmic efficiency, and resource usage.&quot;\n    case &quot;readability&quot;:\n        instructions = &quot;Focus on code clarity, naming conventions, and maintainability.&quot;\n    case &quot;best-practices&quot;:\n        instructions = &quot;Focus on language-specific best practices and design patterns.&quot;\n    default:\n        instructions = &quot;Provide a comprehensive review covering security, performance, readability, and best practices.&quot;\n    }\n \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;Code review for %s code&quot;, language),\n        Messages: []mcp.PromptMessage{\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(fmt.Sprintf(\n                    &quot;Please review the following %s code:\\n\\n%s\\n\\nInstructions: %s\\n\\nPlease provide:\\n1. Overall assessment\\n2. Specific issues found\\n3. Suggested improvements\\n4. Best practice recommendations\\n\\nCode:\\n\n","title":"Basic Code Review Prompt","titles":["Implementing Prompts","Prompt Templates"]},"166":{"href":"/servers/prompts#data-analysis-prompt","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleDataAnalysis</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    datasetURI </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;dataset_uri&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    analysisType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;analysis_type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;exploratory&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    focusAreas </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringSliceArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;focus_areas&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Fetch the dataset (this would typically read from a resource)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    dataset, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> fetchDataset</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, datasetURI)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to fetch dataset: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Build analysis instructions</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> instructions </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Builder</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    instructions.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please analyze the provided dataset. &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> analysisType {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;exploratory&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Perform exploratory data analysis including summary statistics, distributions, and patterns.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;predictive&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Focus on predictive modeling opportunities and feature relationships.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;diagnostic&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Identify data quality issues, outliers, and potential problems.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(focusAreas) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot; Pay special attention to: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Join</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(focusAreas, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;, &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> analysis of dataset&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Title</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(analysisType)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Dataset Information:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">- Source: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">- Records: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">- Columns: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Dataset Preview:</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Please provide a comprehensive analysis including:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">1. Data overview and quality assessment</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">2. Key insights and patterns</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">3. Recommendations for further analysis</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">4. Potential issues or concerns`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    instructions.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    datasetURI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    dataset.RecordCount,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Join</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(dataset.Columns, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;, &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    dataset.Preview,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                )),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleDataAnalysis(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    datasetURI := req.Params.Arguments[&quot;dataset_uri&quot;].(string)\n    analysisType := getStringArg(req.Params.Arguments, &quot;analysis_type&quot;, &quot;exploratory&quot;)\n    focusAreas := getStringSliceArg(req.Params.Arguments, &quot;focus_areas&quot;, []string{})\n \n    // Fetch the dataset (this would typically read from a resource)\n    dataset, err := fetchDataset(ctx, datasetURI)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to fetch dataset: %w&quot;, err)\n    }\n \n    // Build analysis instructions\n    var instructions strings.Builder\n    instructions.WriteString(&quot;Please analyze the provided dataset. &quot;)\n \n    switch analysisType {\n    case &quot;exploratory&quot;:\n        instructions.WriteString(&quot;Perform exploratory data analysis including summary statistics, distributions, and patterns.&quot;)\n    case &quot;predictive&quot;:\n        instructions.WriteString(&quot;Focus on predictive modeling opportunities and feature relationships.&quot;)\n    case &quot;diagnostic&quot;:\n        instructions.WriteString(&quot;Identify data quality issues, outliers, and potential problems.&quot;)\n    }\n \n    if len(focusAreas) &gt; 0 {\n        instructions.WriteString(fmt.Sprintf(&quot; Pay special attention to: %s.&quot;, strings.Join(focusAreas, &quot;, &quot;)))\n    }\n \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;%s analysis of dataset&quot;, strings.Title(analysisType)),\n        Messages: []mcp.PromptMessage{\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(fmt.Sprintf(`%s\n \nDataset Information:\n- Source: %s\n- Records: %d\n- Columns: %s\n \nDataset Preview:\n%s\n \nPlease provide a comprehensive analysis including:\n1. Data overview and quality assessment\n2. Key insights and patterns\n3. Recommendations for further analysis\n4. Potential issues or concerns`,\n                    instructions.String(),\n                    datasetURI,\n                    dataset.RecordCount,\n                    strings.Join(dataset.Columns, &quot;, &quot;),\n                    dataset.Preview,\n                )),\n            },\n        },\n    }, nil\n}\n","title":"Data Analysis Prompt","titles":["Implementing Prompts","Prompt Templates"]},"167":{"href":"/servers/prompts#prompt-arguments","html":"\n","isPage":false,"text":"\n","title":"Prompt Arguments","titles":["Implementing Prompts"]},"168":{"href":"/servers/prompts#flexible-parameter-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleFlexiblePrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Required arguments</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    task </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;task&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Optional arguments with defaults</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tone </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tone&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;professional&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    length </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;length&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;medium&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    audience </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;audience&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;general&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Array arguments</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    keywords </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringSliceArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;keywords&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{})</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Object arguments</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> constraints </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;constraints&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        constraints </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{})</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Build prompt based on parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    prompt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> buildDynamicPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(task, tone, length, audience, keywords, constraints)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Generate </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, task),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(prompt),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">key</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">defaultValue</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> val, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args[key]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> str, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> val.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> str</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> defaultValue</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringSliceArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">key</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">defaultValue</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> val, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args[key]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> slice, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> val.([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(slice))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, v </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> slice {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> str, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> v.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    result[i] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> str</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> defaultValue</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleFlexiblePrompt(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    // Required arguments\n    task := req.Params.Arguments[&quot;task&quot;].(string)\n    \n    // Optional arguments with defaults\n    tone := getStringArg(req.Params.Arguments, &quot;tone&quot;, &quot;professional&quot;)\n    length := getStringArg(req.Params.Arguments, &quot;length&quot;, &quot;medium&quot;)\n    audience := getStringArg(req.Params.Arguments, &quot;audience&quot;, &quot;general&quot;)\n    \n    // Array arguments\n    keywords := getStringSliceArg(req.Params.Arguments, &quot;keywords&quot;, []string{})\n    \n    // Object arguments\n    var constraints map[string]interface{}\n    if c, exists := req.Params.Arguments[&quot;constraints&quot;]; exists {\n        constraints = c.(map[string]interface{})\n    }\n \n    // Build prompt based on parameters\n    prompt := buildDynamicPrompt(task, tone, length, audience, keywords, constraints)\n    \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;Generate %s content&quot;, task),\n        Messages: []mcp.PromptMessage{\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(prompt),\n            },\n        },\n    }, nil\n}\n \nfunc getStringArg(args map[string]interface{}, key, defaultValue string) string {\n    if val, exists := args[key]; exists {\n        if str, ok := val.(string); ok {\n            return str\n        }\n    }\n    return defaultValue\n}\n \nfunc getStringSliceArg(args map[string]interface{}, key string, defaultValue []string) []string {\n    if val, exists := args[key]; exists {\n        if slice, ok := val.([]interface{}); ok {\n            result := make([]string, len(slice))\n            for i, v := range slice {\n                if str, ok := v.(string); ok {\n                    result[i] = str\n                }\n            }\n            return result\n        }\n    }\n    return defaultValue\n}\n","title":"Flexible Parameter Handling","titles":["Implementing Prompts","Prompt Arguments"]},"169":{"href":"/servers/prompts#message-types","html":"\n","isPage":false,"text":"\n","title":"Message Types","titles":["Implementing Prompts"]},"170":{"href":"/servers/prompts#multi-message-conversations","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleConversationPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    scenario </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;scenario&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userRole </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_role&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;customer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> messages []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> scenario {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;customer_support&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;You are a helpful customer support representative. Be polite, professional, and solution-oriented.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;I&#x27;m a </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> with a question about your service.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, userRole)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;assistant&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Hello! I&#x27;m here to help. What can I assist you with today?&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please continue the conversation based on the customer&#x27;s needs.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;technical_interview&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;You are conducting a technical interview. Ask thoughtful questions and provide constructive feedback.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Let&#x27;s begin the technical interview. Please start with an appropriate question.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> conversation scenario&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Title</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(scenario)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages:    messages,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleConversationPrompt(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    scenario := req.Params.Arguments[&quot;scenario&quot;].(string)\n    userRole := getStringArg(req.Params.Arguments, &quot;user_role&quot;, &quot;customer&quot;)\n    \n    var messages []mcp.PromptMessage\n    \n    switch scenario {\n    case &quot;customer_support&quot;:\n        messages = []mcp.PromptMessage{\n            {\n                Role: &quot;system&quot;,\n                Content: mcp.NewTextContent(&quot;You are a helpful customer support representative. Be polite, professional, and solution-oriented.&quot;),\n            },\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(fmt.Sprintf(&quot;I&#x27;m a %s with a question about your service.&quot;, userRole)),\n            },\n            {\n                Role: &quot;assistant&quot;, \n                Content: mcp.NewTextContent(&quot;Hello! I&#x27;m here to help. What can I assist you with today?&quot;),\n            },\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(&quot;Please continue the conversation based on the customer&#x27;s needs.&quot;),\n            },\n        }\n        \n    case &quot;technical_interview&quot;:\n        messages = []mcp.PromptMessage{\n            {\n                Role: &quot;system&quot;,\n                Content: mcp.NewTextContent(&quot;You are conducting a technical interview. Ask thoughtful questions and provide constructive feedback.&quot;),\n            },\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(&quot;Let&#x27;s begin the technical interview. Please start with an appropriate question.&quot;),\n            },\n        }\n    }\n    \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;%s conversation scenario&quot;, strings.Title(scenario)),\n        Messages:    messages,\n    }, nil\n}\n","title":"Multi-Message Conversations","titles":["Implementing Prompts","Message Types"]},"171":{"href":"/servers/prompts#system-and-user-roles","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleRoleBasedPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    expertise </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expertise&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    task </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;task&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    context </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;context&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Define system message based on expertise</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> systemMessage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> expertise {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;software_engineer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        systemMessage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;You are an experienced software engineer with expertise in system design, code quality, and best practices.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;data_scientist&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        systemMessage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;You are a data scientist with expertise in statistical analysis, machine learning, and data visualization.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;product_manager&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        systemMessage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;You are a product manager with expertise in user experience, market analysis, and feature prioritization.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        systemMessage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;You are an expert in </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, expertise)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(systemMessage),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add context if provided</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(messages, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Context: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, context)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add the main task</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    messages </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(messages, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(task),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> task&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Title</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(expertise)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages:    messages,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleRoleBasedPrompt(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    expertise := req.Params.Arguments[&quot;expertise&quot;].(string)\n    task := req.Params.Arguments[&quot;task&quot;].(string)\n    context := getStringArg(req.Params.Arguments, &quot;context&quot;, &quot;&quot;)\n \n    // Define system message based on expertise\n    var systemMessage string\n    switch expertise {\n    case &quot;software_engineer&quot;:\n        systemMessage = &quot;You are an experienced software engineer with expertise in system design, code quality, and best practices.&quot;\n    case &quot;data_scientist&quot;:\n        systemMessage = &quot;You are a data scientist with expertise in statistical analysis, machine learning, and data visualization.&quot;\n    case &quot;product_manager&quot;:\n        systemMessage = &quot;You are a product manager with expertise in user experience, market analysis, and feature prioritization.&quot;\n    default:\n        systemMessage = fmt.Sprintf(&quot;You are an expert in %s.&quot;, expertise)\n    }\n \n    messages := []mcp.PromptMessage{\n        {\n            Role: &quot;system&quot;,\n            Content: mcp.NewTextContent(systemMessage),\n        },\n    }\n \n    // Add context if provided\n    if context != &quot;&quot; {\n        messages = append(messages, mcp.PromptMessage{\n            Role: &quot;user&quot;,\n            Content: mcp.NewTextContent(fmt.Sprintf(&quot;Context: %s&quot;, context)),\n        })\n    }\n \n    // Add the main task\n    messages = append(messages, mcp.PromptMessage{\n        Role: &quot;user&quot;,\n        Content: mcp.NewTextContent(task),\n    })\n \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;%s task&quot;, strings.Title(expertise)),\n        Messages:    messages,\n    }, nil\n}\n","title":"System and User Roles","titles":["Implementing Prompts","Message Types"]},"172":{"href":"/servers/prompts#embedded-resources","html":"\n","isPage":false,"text":"\n","title":"Embedded Resources","titles":["Implementing Prompts"]},"173":{"href":"/servers/prompts#including-resource-data","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleResourceEmbeddedPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    documentURI </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;document_uri&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    analysisType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;analysis_type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;summary&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Fetch the document content</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    document, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> fetchResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, documentURI)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to fetch document: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Build analysis prompt with embedded content</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> analysisType {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;summary&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Please provide a concise summary of the key points in this document.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;critique&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Please provide a critical analysis of the arguments and evidence presented.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;questions&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Please generate thoughtful questions that this document raises or could be used to explore.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;action_items&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        instructions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Please extract actionable items and recommendations from this document.&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Document </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, analysisType),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Document: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Content:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">---</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">---</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Please provide your analysis following the instructions above.`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    instructions,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    documentURI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    document.Content,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                )),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleResourceEmbeddedPrompt(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    documentURI := req.Params.Arguments[&quot;document_uri&quot;].(string)\n    analysisType := getStringArg(req.Params.Arguments, &quot;analysis_type&quot;, &quot;summary&quot;)\n \n    // Fetch the document content\n    document, err := fetchResource(ctx, documentURI)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to fetch document: %w&quot;, err)\n    }\n \n    // Build analysis prompt with embedded content\n    var instructions string\n    switch analysisType {\n    case &quot;summary&quot;:\n        instructions = &quot;Please provide a concise summary of the key points in this document.&quot;\n    case &quot;critique&quot;:\n        instructions = &quot;Please provide a critical analysis of the arguments and evidence presented.&quot;\n    case &quot;questions&quot;:\n        instructions = &quot;Please generate thoughtful questions that this document raises or could be used to explore.&quot;\n    case &quot;action_items&quot;:\n        instructions = &quot;Please extract actionable items and recommendations from this document.&quot;\n    }\n \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;Document %s&quot;, analysisType),\n        Messages: []mcp.PromptMessage{\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(fmt.Sprintf(`%s\n \nDocument: %s\nContent:\n---\n%s\n---\n \nPlease provide your analysis following the instructions above.`,\n                    instructions,\n                    documentURI,\n                    document.Content,\n                )),\n            },\n        },\n    }, nil\n}\n","title":"Including Resource Data","titles":["Implementing Prompts","Embedded Resources"]},"174":{"href":"/servers/prompts#dynamic-resource-integration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleDynamicResourcePrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resourceURIs </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resource_uris&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{})</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    promptType </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;prompt_type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;compare&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Fetch all resources</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceData</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, uri </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resourceURIs {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> uriStr, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> uri.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            resource, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> fetchResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, uriStr)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to fetch resource </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, uriStr, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            resources </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resources, resource)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Build prompt based on type and resources</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> content </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Builder</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> promptType {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;compare&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        content.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please compare and contrast the following documents:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            content.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Document </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> (</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">):</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n%s\\n\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resource.URI, resource.Content))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        content.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please provide:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">1. Key similarities</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">2. Important differences</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">3. Overall assessment&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;synthesize&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        content.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please synthesize information from the following sources:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i, resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            content.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Source </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> (</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">):</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n%s\\n\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, resource.URI, resource.Content))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        content.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please create a unified analysis that incorporates insights from all sources.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> multiple resources&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Title</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(promptType)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleDynamicResourcePrompt(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    resourceURIs := req.Params.Arguments[&quot;resource_uris&quot;].([]interface{})\n    promptType := getStringArg(req.Params.Arguments, &quot;prompt_type&quot;, &quot;compare&quot;)\n \n    // Fetch all resources\n    var resources []ResourceData\n    for _, uri := range resourceURIs {\n        if uriStr, ok := uri.(string); ok {\n            resource, err := fetchResource(ctx, uriStr)\n            if err != nil {\n                return nil, fmt.Errorf(&quot;failed to fetch resource %s: %w&quot;, uriStr, err)\n            }\n            resources = append(resources, resource)\n        }\n    }\n \n    // Build prompt based on type and resources\n    var content strings.Builder\n    \n    switch promptType {\n    case &quot;compare&quot;:\n        content.WriteString(&quot;Please compare and contrast the following documents:\\n\\n&quot;)\n        for i, resource := range resources {\n            content.WriteString(fmt.Sprintf(&quot;Document %d (%s):\\n%s\\n\\n&quot;, i+1, resource.URI, resource.Content))\n        }\n        content.WriteString(&quot;Please provide:\\n1. Key similarities\\n2. Important differences\\n3. Overall assessment&quot;)\n        \n    case &quot;synthesize&quot;:\n        content.WriteString(&quot;Please synthesize information from the following sources:\\n\\n&quot;)\n        for i, resource := range resources {\n            content.WriteString(fmt.Sprintf(&quot;Source %d (%s):\\n%s\\n\\n&quot;, i+1, resource.URI, resource.Content))\n        }\n        content.WriteString(&quot;Please create a unified analysis that incorporates insights from all sources.&quot;)\n    }\n \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;%s multiple resources&quot;, strings.Title(promptType)),\n        Messages: []mcp.PromptMessage{\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(content.String()),\n            },\n        },\n    }, nil\n}\n","title":"Dynamic Resource Integration","titles":["Implementing Prompts","Embedded Resources"]},"175":{"href":"/servers/prompts#advanced-prompt-patterns","html":"\n","isPage":false,"text":"\n","title":"Advanced Prompt Patterns","titles":["Implementing Prompts"]},"176":{"href":"/servers/prompts#conditional-prompts","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleConditionalPrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userLevel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getStringArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_level&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;beginner&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    topic </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;topic&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    includeExamples </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getBoolArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.Arguments, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;include_examples&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> prompt </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Builder</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Adjust complexity based on user level</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> userLevel {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;beginner&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please explain </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> in simple terms suitable for someone new to the topic. &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, topic))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Use clear language and avoid jargon. &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;intermediate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please provide a detailed explanation of </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">. &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, topic))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Include technical details but ensure clarity. &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;advanced&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please provide an in-depth analysis of </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">. &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, topic))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Include advanced concepts, edge cases, and technical nuances. &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> includeExamples {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Please include relevant examples and practical applications.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> explanation for </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> level&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, topic, userLevel),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(prompt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getBoolArg</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">args</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">key</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">defaultValue</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> val, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args[key]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> b, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> val.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> b</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> defaultValue</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleConditionalPrompt(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    userLevel := getStringArg(req.Params.Arguments, &quot;user_level&quot;, &quot;beginner&quot;)\n    topic := req.Params.Arguments[&quot;topic&quot;].(string)\n    includeExamples := getBoolArg(req.Params.Arguments, &quot;include_examples&quot;, true)\n \n    var prompt strings.Builder\n    \n    // Adjust complexity based on user level\n    switch userLevel {\n    case &quot;beginner&quot;:\n        prompt.WriteString(fmt.Sprintf(&quot;Please explain %s in simple terms suitable for someone new to the topic. &quot;, topic))\n        prompt.WriteString(&quot;Use clear language and avoid jargon. &quot;)\n    case &quot;intermediate&quot;:\n        prompt.WriteString(fmt.Sprintf(&quot;Please provide a detailed explanation of %s. &quot;, topic))\n        prompt.WriteString(&quot;Include technical details but ensure clarity. &quot;)\n    case &quot;advanced&quot;:\n        prompt.WriteString(fmt.Sprintf(&quot;Please provide an in-depth analysis of %s. &quot;, topic))\n        prompt.WriteString(&quot;Include advanced concepts, edge cases, and technical nuances. &quot;)\n    }\n \n    if includeExamples {\n        prompt.WriteString(&quot;Please include relevant examples and practical applications.&quot;)\n    }\n \n    return &amp;mcp.GetPromptResult{\n        Description: fmt.Sprintf(&quot;%s explanation for %s level&quot;, topic, userLevel),\n        Messages: []mcp.PromptMessage{\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(prompt.String()),\n            },\n        },\n    }, nil\n}\n \nfunc getBoolArg(args map[string]interface{}, key string, defaultValue bool) bool {\n    if val, exists := args[key]; exists {\n        if b, ok := val.(bool); ok {\n            return b\n        }\n    }\n    return defaultValue\n}\n","title":"Conditional Prompts","titles":["Implementing Prompts","Advanced Prompt Patterns"]},"177":{"href":"/servers/prompts#template-based-prompts","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> PromptTemplate</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Description </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Template    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Variables   []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> promptTemplates </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptTemplate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;bug_report&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Bug Report Analysis&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Analyze a bug report and suggest solutions&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Template: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`Please analyze this bug report:</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Bug Description:** {{.description}}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Steps to Reproduce:** {{.steps}}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Expected Behavior:** {{.expected}}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Actual Behavior:** {{.actual}}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Environment:** {{.environment}}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Please provide:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">1. Root cause analysis</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">2. Potential solutions</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">3. Prevention strategies</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">4. Priority assessment`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Variables: []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;description&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;steps&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;expected&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;actual&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;environment&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;feature_request&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:        </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Feature Request Evaluation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Evaluate a feature request&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Template: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`Please evaluate this feature request:</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Feature:** {{.feature}}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Use Case:** {{.use_case}}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**User Story:** {{.user_story}}</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">**Acceptance Criteria:** {{.criteria}}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Please assess:</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">1. Business value and impact</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">2. Technical feasibility</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">3. Implementation complexity</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">4. Potential risks and considerations`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Variables: []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;feature&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;use_case&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_story&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;criteria&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleTemplatePrompt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    templateName </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;template&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    variables </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;variables&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    template, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> promptTemplates[templateName]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown template: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, templateName)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Replace template variables</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> template.Template</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, variable </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> template.Variables {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> variables[variable]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            placeholder </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;{{.</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, variable)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReplaceAll</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content, placeholder, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">GetPromptResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Description: template.Description,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Messages: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">PromptMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Role: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Content: mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype PromptTemplate struct {\n    Name        string\n    Description string\n    Template    string\n    Variables   []string\n}\n \nvar promptTemplates = map[string]PromptTemplate{\n    &quot;bug_report&quot;: {\n        Name:        &quot;Bug Report Analysis&quot;,\n        Description: &quot;Analyze a bug report and suggest solutions&quot;,\n        Template: `Please analyze this bug report:\n \n**Bug Description:** {{.description}}\n**Steps to Reproduce:** {{.steps}}\n**Expected Behavior:** {{.expected}}\n**Actual Behavior:** {{.actual}}\n**Environment:** {{.environment}}\n \nPlease provide:\n1. Root cause analysis\n2. Potential solutions\n3. Prevention strategies\n4. Priority assessment`,\n        Variables: []string{&quot;description&quot;, &quot;steps&quot;, &quot;expected&quot;, &quot;actual&quot;, &quot;environment&quot;},\n    },\n    &quot;feature_request&quot;: {\n        Name:        &quot;Feature Request Evaluation&quot;,\n        Description: &quot;Evaluate a feature request&quot;,\n        Template: `Please evaluate this feature request:\n \n**Feature:** {{.feature}}\n**Use Case:** {{.use_case}}\n**User Story:** {{.user_story}}\n**Acceptance Criteria:** {{.criteria}}\n \nPlease assess:\n1. Business value and impact\n2. Technical feasibility\n3. Implementation complexity\n4. Potential risks and considerations`,\n        Variables: []string{&quot;feature&quot;, &quot;use_case&quot;, &quot;user_story&quot;, &quot;criteria&quot;},\n    },\n}\n \nfunc handleTemplatePrompt(ctx context.Context, req mcp.GetPromptRequest) (*mcp.GetPromptResult, error) {\n    templateName := req.Params.Arguments[&quot;template&quot;].(string)\n    variables := req.Params.Arguments[&quot;variables&quot;].(map[string]interface{})\n \n    template, exists := promptTemplates[templateName]\n    if !exists {\n        return nil, fmt.Errorf(&quot;unknown template: %s&quot;, templateName)\n    }\n \n    // Replace template variables\n    content := template.Template\n    for _, variable := range template.Variables {\n        if value, exists := variables[variable]; exists {\n            placeholder := fmt.Sprintf(&quot;{{.%s}}&quot;, variable)\n            content = strings.ReplaceAll(content, placeholder, fmt.Sprintf(&quot;%v&quot;, value))\n        }\n    }\n \n    return &amp;mcp.GetPromptResult{\n        Description: template.Description,\n        Messages: []mcp.PromptMessage{\n            {\n                Role: &quot;user&quot;,\n                Content: mcp.NewTextContent(content),\n            },\n        },\n    }, nil\n}\n","title":"Template-Based Prompts","titles":["Implementing Prompts","Advanced Prompt Patterns"]},"178":{"href":"/servers/prompts#next-steps","html":"\n<ul>\n<li><strong><a href=\"/servers/advanced\">Advanced Features</a></strong> - Explore typed tools, middleware, and hooks</li>\n<li><strong><a href=\"/clients\">Client Integration</a></strong> - Learn how to build MCP clients</li>\n<li><strong><a href=\"/servers/tools\">Tools</a></strong> - Learn about implementing server tools</li>\n</ul>","isPage":false,"text":"\n\nAdvanced Features - Explore typed tools, middleware, and hooks\nClient Integration - Learn how to build MCP clients\nTools - Learn about implementing server tools\n","title":"Next Steps","titles":["Implementing Prompts"]},"179":{"href":"/servers/resources#implementing-resources","html":"</header>\n<p>Resources expose data to LLMs in a read-only manner. Think of them as GET endpoints that provide access to files, databases, APIs, or any other data source.</p>\n","isPage":true,"text":"\nResources expose data to LLMs in a read-only manner. Think of them as GET endpoints that provide access to files, databases, APIs, or any other data source.\n","title":"Implementing Resources","titles":[]},"180":{"href":"/servers/resources#resource-fundamentals","html":"\n<p>Resources in MCP are identified by URIs and can be either static (fixed content) or dynamic (generated on-demand). They&#x27;re perfect for giving LLMs access to documentation, configuration files, database records, or API responses.</p>\n","isPage":false,"text":"\nResources in MCP are identified by URIs and can be either static (fixed content) or dynamic (generated on-demand). They&#x27;re perfect for giving LLMs access to documentation, configuration files, database records, or API responses.\n","title":"Resource Fundamentals","titles":["Implementing Resources"]},"181":{"href":"/servers/resources#basic-resource-structure","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create a simple resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">resource </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;docs://readme&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,           </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// URI - unique identifier</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;Project README&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,          </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Name - human-readable</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Main project documentation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/markdown&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n// Create a simple resource\nresource := mcp.NewResource(\n    &quot;docs://readme&quot;,           // URI - unique identifier\n    &quot;Project README&quot;,          // Name - human-readable\n    mcp.WithResourceDescription(&quot;Main project documentation&quot;),\n    mcp.WithMIMEType(&quot;text/markdown&quot;),\n)\n","title":"Basic Resource Structure","titles":["Implementing Resources","Resource Fundamentals"]},"182":{"href":"/servers/resources#static-resources","html":"\n<p>Static resources have fixed URIs and typically serve predetermined content.</p>\n","isPage":false,"text":"\nStatic resources have fixed URIs and typically serve predetermined content.\n","title":"Static Resources","titles":["Implementing Resources"]},"183":{"href":"/servers/resources#file-based-resources","html":"\n<p>Expose files from your filesystem:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add a static file resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;file://README.md&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;Project README&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Main project documentation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/markdown&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleReadmeFile,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleReadmeFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;README.md&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to read README: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/markdown&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nExpose files from your filesystem:\nfunc main() {\n    s := server.NewMCPServer(&quot;File Server&quot;, &quot;1.0.0&quot;,\n        server.WithResourceCapabilities(true),\n    )\n \n    // Add a static file resource\n    s.AddResource(\n        mcp.NewResource(\n            &quot;file://README.md&quot;,\n            &quot;Project README&quot;,\n            mcp.WithResourceDescription(&quot;Main project documentation&quot;),\n            mcp.WithMIMEType(&quot;text/markdown&quot;),\n        ),\n        handleReadmeFile,\n    )\n \n    server.ServeStdio(s)\n}\n \nfunc handleReadmeFile(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    content, err := os.ReadFile(&quot;README.md&quot;)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to read README: %w&quot;, err)\n    }\n \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            {\n                URI:      req.Params.URI,\n                MIMEType: &quot;text/markdown&quot;,\n                Text:     string(content),\n            },\n        },\n    }, nil\n}\n","title":"File-Based Resources","titles":["Implementing Resources","Static Resources"]},"184":{"href":"/servers/resources#configuration-resources","html":"\n<p>Expose application configuration:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Configuration resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;config://app&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Application Configuration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Current application settings&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handleAppConfig,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleAppConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    config </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;database_url&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;DATABASE_URL&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;debug_mode&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;DEBUG&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;true&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;version&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:      </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;features&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;authentication&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;caching&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;logging&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    configJSON, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(configJSON),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nExpose application configuration:\n// Configuration resource\ns.AddResource(\n    mcp.NewResource(\n        &quot;config://app&quot;,\n        &quot;Application Configuration&quot;, \n        mcp.WithResourceDescription(&quot;Current application settings&quot;),\n        mcp.WithMIMEType(&quot;application/json&quot;),\n    ),\n    handleAppConfig,\n)\n \nfunc handleAppConfig(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    config := map[string]interface{}{\n        &quot;database_url&quot;: os.Getenv(&quot;DATABASE_URL&quot;),\n        &quot;debug_mode&quot;:   os.Getenv(&quot;DEBUG&quot;) == &quot;true&quot;,\n        &quot;version&quot;:      &quot;1.0.0&quot;,\n        &quot;features&quot;: []string{\n            &quot;authentication&quot;,\n            &quot;caching&quot;, \n            &quot;logging&quot;,\n        },\n    }\n \n    configJSON, err := json.Marshal(config)\n    if err != nil {\n        return nil, err\n    }\n    \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            mcp.TextResourceContent{\n                URI:      req.Params.URI,\n                MIMEType: &quot;application/json&quot;,\n                Text:     string(configJSON),\n            },\n        },\n    }, nil\n}\n","title":"Configuration Resources","titles":["Implementing Resources","Static Resources"]},"185":{"href":"/servers/resources#dynamic-resources","html":"\n<p>Dynamic resources use URI templates with parameters, allowing for flexible, parameterized access to data.</p>\n","isPage":false,"text":"\nDynamic resources use URI templates with parameters, allowing for flexible, parameterized access to data.\n","title":"Dynamic Resources","titles":["Implementing Resources"]},"186":{"href":"/servers/resources#uri-templates","html":"\n<p>Use <code>{parameter}</code> syntax for dynamic parts:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// User profile resource with dynamic user ID</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;users://{user_id}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;User Profile&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User profile information&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handleUserProfile,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleUserProfile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract user_id from URI</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractUserID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI) </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// &quot;users://123&quot; -&gt; &quot;123&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Fetch user data (from database, API, etc.)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    user, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getUserFromDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(userID)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(user)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractUserID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract ID from &quot;users://123&quot; format</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    parts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Split</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;://&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(parts) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> parts[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nUse {parameter} syntax for dynamic parts:\n// User profile resource with dynamic user ID\ns.AddResource(\n    mcp.NewResource(\n        &quot;users://{user_id}&quot;,\n        &quot;User Profile&quot;,\n        mcp.WithResourceDescription(&quot;User profile information&quot;),\n        mcp.WithMIMEType(&quot;application/json&quot;),\n    ),\n    handleUserProfile,\n)\n \nfunc handleUserProfile(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    // Extract user_id from URI\n    userID := extractUserID(req.Params.URI) // &quot;users://123&quot; -&gt; &quot;123&quot;\n    \n    // Fetch user data (from database, API, etc.)\n    user, err := getUserFromDB(userID)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;user not found: %w&quot;, err)\n    }\n \n    jsonData, err := json.Marshal(user)\n    if err != nil {\n        return nil, err\n    }\n    \n    return []mcp.ResourceContents{\n        mcp.TextResourceContents{\n            URI:      req.Params.URI,\n            MIMEType: &quot;application/json&quot;,\n            Text:     string(jsonData),\n        },\n    }, nil\n}\n \nfunc extractUserID(uri string) string {\n    // Extract ID from &quot;users://123&quot; format\n    parts := strings.Split(uri, &quot;://&quot;)\n    if len(parts) == 2 {\n        return parts[1]\n    }\n    return &quot;&quot;\n}\n","title":"URI Templates","titles":["Implementing Resources","Dynamic Resources"]},"187":{"href":"/servers/resources#database-resources","html":"\n<p>Expose database records dynamically:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">database/sql</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">encoding/json</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Database table resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;db://{table}/{id}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Database Record&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Access database records by table and ID&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handleDatabaseRecord,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleDatabaseRecord</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    table, id </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> parseDBURI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI) </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// &quot;db://users/123&quot; -&gt; &quot;users&quot;, &quot;123&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate table name for security</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    allowedTables </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;users&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;products&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;orders&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">allowedTables[table] {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;table not accessible: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, table)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Query database</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    query </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SELECT * FROM </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> WHERE id = ?&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, table)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    row </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> db.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">QueryRowContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, query, id)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> scanRowToMap</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(row, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">data); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;record not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nExpose database records dynamically:\nimport (\n    &quot;context&quot;\n    &quot;database/sql&quot;\n    &quot;encoding/json&quot;\n    &quot;fmt&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \n// Database table resource\ns.AddResource(\n    mcp.NewResource(\n        &quot;db://{table}/{id}&quot;,\n        &quot;Database Record&quot;,\n        mcp.WithResourceDescription(&quot;Access database records by table and ID&quot;),\n        mcp.WithMIMEType(&quot;application/json&quot;),\n    ),\n    handleDatabaseRecord,\n)\n \nfunc handleDatabaseRecord(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    table, id := parseDBURI(req.Params.URI) // &quot;db://users/123&quot; -&gt; &quot;users&quot;, &quot;123&quot;\n    \n    // Validate table name for security\n    allowedTables := map[string]bool{\n        &quot;users&quot;:    true,\n        &quot;products&quot;: true,\n        &quot;orders&quot;:   true,\n    }\n    \n    if !allowedTables[table] {\n        return nil, fmt.Errorf(&quot;table not accessible: %s&quot;, table)\n    }\n \n    // Query database\n    query := fmt.Sprintf(&quot;SELECT * FROM %s WHERE id = ?&quot;, table)\n    row := db.QueryRowContext(ctx, query, id)\n    \n    var data map[string]interface{}\n    if err := scanRowToMap(row, &amp;data); err != nil {\n        return nil, fmt.Errorf(&quot;record not found: %w&quot;, err)\n    }\n \n    jsonData, err := json.Marshal(data)\n    if err != nil {\n        return nil, err\n    }\n    \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            mcp.TextResourceContent{\n                URI:      req.Params.URI,\n                MIMEType: &quot;application/json&quot;,\n                Text:     string(jsonData),\n            },\n        },\n    }, nil\n}\n}\n","title":"Database Resources","titles":["Implementing Resources","Dynamic Resources"]},"188":{"href":"/servers/resources#api-resources","html":"\n<p>Proxy external APIs through resources:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Weather API resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;weather://{location}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;Weather Data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Current weather for a location&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handleWeatherData,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleWeatherData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    location </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractLocation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call external weather API</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    apiURL </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://api.weather.com/v1/current?location=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&amp;key=</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        url.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">QueryEscape</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(location), os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;WEATHER_API_KEY&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resp, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(apiURL)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;weather API error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resp.Body.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    body, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> io.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadAll</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resp.Body)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to read response: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(body),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nProxy external APIs through resources:\n// Weather API resource\ns.AddResource(\n    mcp.NewResource(\n        &quot;weather://{location}&quot;,\n        &quot;Weather Data&quot;,\n        mcp.WithResourceDescription(&quot;Current weather for a location&quot;),\n        mcp.WithMIMEType(&quot;application/json&quot;),\n    ),\n    handleWeatherData,\n)\n \nfunc handleWeatherData(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    location := extractLocation(req.Params.URI)\n    \n    // Call external weather API\n    apiURL := fmt.Sprintf(&quot;https://api.weather.com/v1/current?location=%s&amp;key=%s&quot;, \n        url.QueryEscape(location), os.Getenv(&quot;WEATHER_API_KEY&quot;))\n    \n    resp, err := http.Get(apiURL)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;weather API error: %w&quot;, err)\n    }\n    defer resp.Body.Close()\n \n    body, err := io.ReadAll(resp.Body)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to read response: %w&quot;, err)\n    }\n \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            {\n                URI:      req.Params.URI,\n                MIMEType: &quot;application/json&quot;,\n                Text:     string(body),\n            },\n        },\n    }, nil\n}\n","title":"API Resources","titles":["Implementing Resources","Dynamic Resources"]},"189":{"href":"/servers/resources#content-types","html":"\n<p>Resources can serve different types of content with appropriate MIME types.</p>\n","isPage":false,"text":"\nResources can serve different types of content with appropriate MIME types.\n","title":"Content Types","titles":["Implementing Resources"]},"190":{"href":"/servers/resources#text-content","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleTextResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;This is plain text content&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/plain&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     content,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleTextResource(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    content := &quot;This is plain text content&quot;\n    \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            {\n                URI:      req.Params.URI,\n                MIMEType: &quot;text/plain&quot;,\n                Text:     content,\n            },\n        },\n    }, nil\n}\n","title":"Text Content","titles":["Implementing Resources","Content Types"]},"191":{"href":"/servers/resources#json-content","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleJSONResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Hello, World!&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;timestamp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;success&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleJSONResource(ctx context.Context, req mcp.ReadResourceRequest) ([]mcp.ResourceContents, error) {\n    data := map[string]interface{}{\n        &quot;message&quot;: &quot;Hello, World!&quot;,\n        &quot;timestamp&quot;: time.Now().Unix(),\n        &quot;status&quot;: &quot;success&quot;,\n    }\n    \n    jsonData, err := json.Marshal(data)\n    if err != nil {\n        return nil, err\n    }\n    \n    return []mcp.ResourceContents{\n        mcp.TextResourceContents{\n            URI:      req.Params.URI,\n            MIMEType: &quot;application/json&quot;,\n            Text:     string(jsonData),\n        },\n    }, nil\n}\n","title":"JSON Content","titles":["Implementing Resources","Content Types"]},"192":{"href":"/servers/resources#binary-content","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleImageResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    imageData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;logo.png&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Encode binary data as base64</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    encoded </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> base64.StdEncoding.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">EncodeToString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(imageData)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;image/png&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Blob:     encoded,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleImageResource(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    imageData, err := os.ReadFile(&quot;logo.png&quot;)\n    if err != nil {\n        return nil, err\n    }\n    \n    // Encode binary data as base64\n    encoded := base64.StdEncoding.EncodeToString(imageData)\n    \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            {\n                URI:      req.Params.URI,\n                MIMEType: &quot;image/png&quot;,\n                Blob:     encoded,\n            },\n        },\n    }, nil\n}\n","title":"Binary Content","titles":["Implementing Resources","Content Types"]},"193":{"href":"/servers/resources#multiple-content-types","html":"\n<p>A single resource can return multiple content representations:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleMultiFormatResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;John Doe&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;city&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;New York&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // JSON representation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, _ </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Text representation  </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    textData </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Name: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Age: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">City: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">], data[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">], data[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;city&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">])</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/plain&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     textData,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nA single resource can return multiple content representations:\nfunc handleMultiFormatResource(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    data := map[string]interface{}{\n        &quot;name&quot;: &quot;John Doe&quot;,\n        &quot;age&quot;:  30,\n        &quot;city&quot;: &quot;New York&quot;,\n    }\n    \n    // JSON representation\n    jsonData, _ := json.Marshal(data)\n    \n    // Text representation  \n    textData := fmt.Sprintf(&quot;Name: %s\\nAge: %d\\nCity: %s&quot;, \n        data[&quot;name&quot;], data[&quot;age&quot;], data[&quot;city&quot;])\n    \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            {\n                URI:      req.Params.URI,\n                MIMEType: &quot;application/json&quot;,\n                Text:     string(jsonData),\n            },\n            {\n                URI:      req.Params.URI,\n                MIMEType: &quot;text/plain&quot;, \n                Text:     textData,\n            },\n        },\n    }, nil\n}\n","title":"Multiple Content Types","titles":["Implementing Resources","Content Types"]},"194":{"href":"/servers/resources#error-handling","html":"\n<p>Proper error handling ensures robust resource access:</p>\n","isPage":false,"text":"\nProper error handling ensures robust resource access:\n","title":"Error Handling","titles":["Implementing Resources"]},"195":{"href":"/servers/resources#common-error-patterns","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleResourceWithErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate URI format</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isValidURI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid URI format: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Check permissions</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">hasPermission</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req.Params.URI) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;access denied to resource: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle resource not found</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> fetchResourceData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, ErrResourceNotFound) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resource not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to fetch resource: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleResourceWithErrors(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    // Validate URI format\n    if !isValidURI(req.Params.URI) {\n        return nil, fmt.Errorf(&quot;invalid URI format: %s&quot;, req.Params.URI)\n    }\n    \n    // Check permissions\n    if !hasPermission(ctx, req.Params.URI) {\n        return nil, fmt.Errorf(&quot;access denied to resource: %s&quot;, req.Params.URI)\n    }\n    \n    // Handle resource not found\n    data, err := fetchResourceData(req.Params.URI)\n    if err != nil {\n        if errors.Is(err, ErrResourceNotFound) {\n            return nil, fmt.Errorf(&quot;resource not found: %s&quot;, req.Params.URI)\n        }\n        return nil, fmt.Errorf(&quot;failed to fetch resource: %w&quot;, err)\n    }\n    \n    jsonData, err := json.Marshal(data)\n    if err != nil {\n        return nil, err\n    }\n    \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContents{\n            mcp.TextResourceContents{\n                URI:      req.Params.URI,\n                MIMEType: &quot;application/json&quot;,\n                Text:     string(jsonData),\n            },\n        },\n    }, nil\n}\n","title":"Common Error Patterns","titles":["Implementing Resources","Error Handling"]},"196":{"href":"/servers/resources#timeout-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleResourceWithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create timeout context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use context in operations</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> fetchDataWithContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, context.DeadlineExceeded) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;resource fetch timeout: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(data)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Contents: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">            mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleResourceWithTimeout(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    // Create timeout context\n    ctx, cancel := context.WithTimeout(ctx, 30*time.Second)\n    defer cancel()\n    \n    // Use context in operations\n    data, err := fetchDataWithContext(ctx, req.Params.URI)\n    if err != nil {\n        if errors.Is(err, context.DeadlineExceeded) {\n            return nil, fmt.Errorf(&quot;resource fetch timeout: %s&quot;, req.Params.URI)\n        }\n        return nil, err\n    }\n    \n    jsonData, err := json.Marshal(data)\n    if err != nil {\n        return nil, err\n    }\n    \n    return &amp;mcp.ReadResourceResult{\n        Contents: []mcp.ResourceContent{\n            mcp.TextResourceContent{\n                URI:      req.Params.URI,\n                MIMEType: &quot;application/json&quot;,\n                Text:     string(jsonData),\n            },\n        },\n    }, nil\n}\n}\n","title":"Timeout Handling","titles":["Implementing Resources","Error Handling"]},"197":{"href":"/servers/resources#resource-listing","html":"\n<p>Implement resource discovery for clients:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resource Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add multiple resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resources </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        uri         </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        name        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        description </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mimeType    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handler     </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceHandler</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;docs://readme&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;README&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Project documentation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/markdown&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handleReadme},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;config://app&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;App Config&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Application settings&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handleConfig},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;users://{id}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User Profile&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User information&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handleUser},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, r </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resources {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(r.uri, r.name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(r.description),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(r.mimeType),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            r.handler,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nImplement resource discovery for clients:\nfunc main() {\n    s := server.NewMCPServer(&quot;Resource Server&quot;, &quot;1.0.0&quot;,\n        server.WithResourceCapabilities(true),\n    )\n \n    // Add multiple resources\n    resources := []struct {\n        uri         string\n        name        string\n        description string\n        mimeType    string\n        handler     server.ResourceHandler\n    }{\n        {&quot;docs://readme&quot;, &quot;README&quot;, &quot;Project documentation&quot;, &quot;text/markdown&quot;, handleReadme},\n        {&quot;config://app&quot;, &quot;App Config&quot;, &quot;Application settings&quot;, &quot;application/json&quot;, handleConfig},\n        {&quot;users://{id}&quot;, &quot;User Profile&quot;, &quot;User information&quot;, &quot;application/json&quot;, handleUser},\n    }\n \n    for _, r := range resources {\n        s.AddResource(\n            mcp.NewResource(r.uri, r.name,\n                mcp.WithResourceDescription(r.description),\n                mcp.WithMIMEType(r.mimeType),\n            ),\n            r.handler,\n        )\n    }\n \n    server.ServeStdio(s)\n}\n","title":"Resource Listing","titles":["Implementing Resources"]},"198":{"href":"/servers/resources#caching-resources","html":"\n<p>Implement caching for expensive resources:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> CachedResourceHandler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cache </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cacheEntry</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ttl   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cacheEntry</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    timestamp </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">h </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CachedResourceHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HandleResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> entry, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h.cache[req.Params.URI]; exists {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Since</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(entry.timestamp) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h.ttl {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            h.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> entry.data, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Fetch fresh data</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">fetchFreshData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Cache the result</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.cache[req.Params.URI] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cacheEntry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data:      data,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        timestamp: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    h.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nImplement caching for expensive resources:\ntype CachedResourceHandler struct {\n    cache map[string]cacheEntry\n    mutex sync.RWMutex\n    ttl   time.Duration\n}\n \ntype cacheEntry struct {\n    data      *mcp.ReadResourceResult\n    timestamp time.Time\n}\n \nfunc (h *CachedResourceHandler) HandleResource(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n    h.mutex.RLock()\n    if entry, exists := h.cache[req.Params.URI]; exists {\n        if time.Since(entry.timestamp) &lt; h.ttl {\n            h.mutex.RUnlock()\n            return entry.data, nil\n        }\n    }\n    h.mutex.RUnlock()\n \n    // Fetch fresh data\n    data, err := h.fetchFreshData(ctx, req)\n    if err != nil {\n        return nil, err\n    }\n \n    // Cache the result\n    h.mutex.Lock()\n    h.cache[req.Params.URI] = cacheEntry{\n        data:      data,\n        timestamp: time.Now(),\n    }\n    h.mutex.Unlock()\n \n    return data, nil\n}\n","title":"Caching Resources","titles":["Implementing Resources"]},"199":{"href":"/servers/resources#next-steps","html":"\n<ul>\n<li><strong><a href=\"/servers/tools\">Tools</a></strong> - Learn to implement interactive functionality</li>\n<li><strong><a href=\"/servers/prompts\">Prompts</a></strong> - Create reusable interaction templates</li>\n<li><strong><a href=\"/servers/advanced\">Advanced Features</a></strong> - Explore hooks, middleware, and more</li>\n</ul>","isPage":false,"text":"\n\nTools - Learn to implement interactive functionality\nPrompts - Create reusable interaction templates\nAdvanced Features - Explore hooks, middleware, and more\n","title":"Next Steps","titles":["Implementing Resources"]},"200":{"href":"/servers/tools#implementing-tools","html":"</header>\n<p>Tools provide functionality that LLMs can invoke to take actions or perform computations. Think of them as function calls that extend the LLM&#x27;s capabilities.</p>\n","isPage":true,"text":"\nTools provide functionality that LLMs can invoke to take actions or perform computations. Think of them as function calls that extend the LLM&#x27;s capabilities.\n","title":"Implementing Tools","titles":[]},"201":{"href":"/servers/tools#tool-fundamentals","html":"\n<p>Tools are the primary way LLMs interact with your server to perform actions. They have structured schemas that define parameters, types, and constraints, ensuring type-safe interactions.</p>\n","isPage":false,"text":"\nTools are the primary way LLMs interact with your server to perform actions. They have structured schemas that define parameters, types, and constraints, ensuring type-safe interactions.\n","title":"Tool Fundamentals","titles":["Implementing Tools"]},"202":{"href":"/servers/tools#basic-tool-structure","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Create a simple tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Perform arithmetic operations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The arithmetic operation to perform&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;First number&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Second number&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n// Create a simple tool\ntool := mcp.NewTool(&quot;calculate&quot;,\n    mcp.WithDescription(&quot;Perform arithmetic operations&quot;),\n    mcp.WithString(&quot;operation&quot;, \n        mcp.Required(),\n        mcp.Enum(&quot;add&quot;, &quot;subtract&quot;, &quot;multiply&quot;, &quot;divide&quot;),\n        mcp.Description(&quot;The arithmetic operation to perform&quot;),\n    ),\n    mcp.WithNumber(&quot;x&quot;, mcp.Required(), mcp.Description(&quot;First number&quot;)),\n    mcp.WithNumber(&quot;y&quot;, mcp.Required(), mcp.Description(&quot;Second number&quot;)),\n)\n","title":"Basic Tool Structure","titles":["Implementing Tools","Tool Fundamentals"]},"203":{"href":"/servers/tools#tool-definition","html":"\n","isPage":false,"text":"\n","title":"Tool Definition","titles":["Implementing Tools"]},"204":{"href":"/servers/tools#parameter-types","html":"\n<p>MCP-Go supports various parameter types with validation:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// String parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User&#x27;s name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">MinLength</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">MaxLength</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Number parameters  </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User&#x27;s age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Minimum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Maximum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">150</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Integer parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithInteger</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;count&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Number of items&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Minimum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Maximum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Boolean parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithBoolean</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enabled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Whether feature is enabled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Array parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithArray</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tags&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;List of tags&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Items</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Object parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithObject</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;config&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Configuration object&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Properties</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;timeout&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;number&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;retries&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;integer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nMCP-Go supports various parameter types with validation:\n// String parameters\nmcp.WithString(&quot;name&quot;, \n    mcp.Required(),\n    mcp.Description(&quot;User&#x27;s name&quot;),\n    mcp.MinLength(1),\n    mcp.MaxLength(100),\n)\n \n// Number parameters  \nmcp.WithNumber(&quot;age&quot;,\n    mcp.Required(),\n    mcp.Description(&quot;User&#x27;s age&quot;),\n    mcp.Minimum(0),\n    mcp.Maximum(150),\n)\n \n// Integer parameters\nmcp.WithInteger(&quot;count&quot;,\n    mcp.Default(10),\n    mcp.Description(&quot;Number of items&quot;),\n    mcp.Minimum(1),\n    mcp.Maximum(1000),\n)\n \n// Boolean parameters\nmcp.WithBoolean(&quot;enabled&quot;,\n    mcp.Default(true),\n    mcp.Description(&quot;Whether feature is enabled&quot;),\n)\n \n// Array parameters\nmcp.WithArray(&quot;tags&quot;,\n    mcp.Description(&quot;List of tags&quot;),\n    mcp.Items(map[string]any{&quot;type&quot;: &quot;string&quot;}),\n)\n \n// Object parameters\nmcp.WithObject(&quot;config&quot;,\n    mcp.Description(&quot;Configuration object&quot;),\n    mcp.Properties(map[string]any{\n        &quot;timeout&quot;: map[string]any{&quot;type&quot;: &quot;number&quot;},\n        &quot;retries&quot;: map[string]any{&quot;type&quot;: &quot;integer&quot;},\n    }),\n)\n","title":"Parameter Types","titles":["Implementing Tools","Tool Definition"]},"205":{"href":"/servers/tools#enums-and-constraints","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Enum values</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;priority&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;low&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;medium&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;high&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;critical&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Task priority level&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// String constraints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;email&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Pattern</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Valid email address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Number constraints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;price&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Minimum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ExclusiveMaximum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10000</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Product price in USD&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n// Enum values\nmcp.WithString(&quot;priority&quot;,\n    mcp.Required(),\n    mcp.Enum(&quot;low&quot;, &quot;medium&quot;, &quot;high&quot;, &quot;critical&quot;),\n    mcp.Description(&quot;Task priority level&quot;),\n)\n \n// String constraints\nmcp.WithString(&quot;email&quot;,\n    mcp.Required(),\n    mcp.Pattern(`^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$`),\n    mcp.Description(&quot;Valid email address&quot;),\n)\n \n// Number constraints\nmcp.WithNumber(&quot;price&quot;,\n    mcp.Required(),\n    mcp.Minimum(0),\n    mcp.ExclusiveMaximum(10000),\n    mcp.Description(&quot;Product price in USD&quot;),\n)\n","title":"Enums and Constraints","titles":["Implementing Tools","Tool Definition"]},"206":{"href":"/servers/tools#tool-handlers","html":"\n<p>Tool handlers process the actual function calls from LLMs. MCP-Go provides convenient helper methods for safe parameter extraction.</p>\n","isPage":false,"text":"\nTool handlers process the actual function calls from LLMs. MCP-Go provides convenient helper methods for safe parameter extraction.\n","title":"Tool Handlers","titles":["Implementing Tools"]},"207":{"href":"/servers/tools#parameter-extraction-methods","html":"\n<p>MCP-Go offers several helper methods on <code>CallToolRequest</code> for type-safe parameter access:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Required parameters - return error if missing or wrong type</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">age, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">price, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;price&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">enabled, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireBool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enabled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Optional parameters with defaults</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;default&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">count </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;count&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">price </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;price&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">enabled </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetBool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enabled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Structured data binding</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Timeout </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;timeout&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Retries </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;retries&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Debug   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">   `json:&quot;debug&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> config </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Config</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">BindArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Raw access (for backward compatibility)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// returns map[string]any</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">rawArgs </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetRawArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// returns any</span></span></code></pre>\n","isPage":false,"text":"\nMCP-Go offers several helper methods on CallToolRequest for type-safe parameter access:\n// Required parameters - return error if missing or wrong type\nname, err := req.RequireString(&quot;name&quot;)\nage, err := req.RequireInt(&quot;age&quot;) \nprice, err := req.RequireFloat(&quot;price&quot;)\nenabled, err := req.RequireBool(&quot;enabled&quot;)\n \n// Optional parameters with defaults\nname := req.GetString(&quot;name&quot;, &quot;default&quot;)\ncount := req.GetInt(&quot;count&quot;, 10)\nprice := req.GetFloat(&quot;price&quot;, 0.0)\nenabled := req.GetBool(&quot;enabled&quot;, false)\n \n// Structured data binding\ntype Config struct {\n    Timeout int    `json:&quot;timeout&quot;`\n    Retries int    `json:&quot;retries&quot;`\n    Debug   bool   `json:&quot;debug&quot;`\n}\nvar config Config\nif err := req.BindArguments(&amp;config); err != nil {\n    return mcp.NewToolResultError(err.Error()), nil\n}\n \n// Raw access (for backward compatibility)\nargs := req.GetArguments() // returns map[string]any\nrawArgs := req.GetRawArguments() // returns any\n","title":"Parameter Extraction Methods","titles":["Implementing Tools","Tool Handlers"]},"208":{"href":"/servers/tools#basic-handler-pattern","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCalculate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract parameters using helper methods</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    operation, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    x, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    y, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Perform calculation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> operation {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;division by zero&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown operation: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, operation)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Return result</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%.2f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleCalculate(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Extract parameters using helper methods\n    operation, err := req.RequireString(&quot;operation&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    x, err := req.RequireFloat(&quot;x&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    y, err := req.RequireFloat(&quot;y&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    // Perform calculation\n    var result float64\n    switch operation {\n    case &quot;add&quot;:\n        result = x + y\n    case &quot;subtract&quot;:\n        result = x - y\n    case &quot;multiply&quot;:\n        result = x * y\n    case &quot;divide&quot;:\n        if y == 0 {\n            return mcp.NewToolResultError(&quot;division by zero&quot;), nil\n        }\n        result = x / y\n    default:\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;unknown operation: %s&quot;, operation)), nil\n    }\n    \n    // Return result\n    return mcp.NewToolResultText(fmt.Sprintf(&quot;%.2f&quot;, result)), nil\n}\n","title":"Basic Handler Pattern","titles":["Implementing Tools","Tool Handlers"]},"209":{"href":"/servers/tools#file-operations-tool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File Tools&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // File creation tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    createFileTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;create_file&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Create a new file with content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File path to create&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;encoding&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;utf-8&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;utf-8&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ascii&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;base64&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File encoding&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(createFileTool, handleCreateFile)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCreateFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    path, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    encoding </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;encoding&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;utf-8&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate path for security</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Contains</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;..&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid path: directory traversal not allowed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle different encodings</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> data []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> encoding {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;utf-8&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;ascii&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;base64&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> base64.StdEncoding.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DecodeString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid base64 content: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create file</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path, data, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0644</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to create file: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File created successfully: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, path)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc main() {\n    s := server.NewMCPServer(&quot;File Tools&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n    )\n \n    // File creation tool\n    createFileTool := mcp.NewTool(&quot;create_file&quot;,\n        mcp.WithDescription(&quot;Create a new file with content&quot;),\n        mcp.WithString(&quot;path&quot;, \n            mcp.Required(),\n            mcp.Description(&quot;File path to create&quot;),\n        ),\n        mcp.WithString(&quot;content&quot;,\n            mcp.Required(), \n            mcp.Description(&quot;File content&quot;),\n        ),\n        mcp.WithString(&quot;encoding&quot;,\n            mcp.Default(&quot;utf-8&quot;),\n            mcp.Enum(&quot;utf-8&quot;, &quot;ascii&quot;, &quot;base64&quot;),\n            mcp.Description(&quot;File encoding&quot;),\n        ),\n    )\n \n    s.AddTool(createFileTool, handleCreateFile)\n    server.ServeStdio(s)\n}\n \nfunc handleCreateFile(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    path, err := req.RequireString(&quot;path&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    content, err := req.RequireString(&quot;content&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    encoding := req.GetString(&quot;encoding&quot;, &quot;utf-8&quot;)\n    \n    // Validate path for security\n    if strings.Contains(path, &quot;..&quot;) {\n        return mcp.NewToolResultError(&quot;invalid path: directory traversal not allowed&quot;), nil\n    }\n    \n    // Handle different encodings\n    var data []byte\n    switch encoding {\n    case &quot;utf-8&quot;:\n        data = []byte(content)\n    case &quot;ascii&quot;:\n        data = []byte(content)\n    case &quot;base64&quot;:\n        var err error\n        data, err = base64.StdEncoding.DecodeString(content)\n        if err != nil {\n            return mcp.NewToolResultError(fmt.Sprintf(&quot;invalid base64 content: %v&quot;, err)), nil\n        }\n    }\n    \n    // Create file\n    if err := os.WriteFile(path, data, 0644); err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to create file: %v&quot;, err)), nil\n    }\n    \n    return mcp.NewToolResultText(fmt.Sprintf(&quot;File created successfully: %s&quot;, path)), nil\n}\n","title":"File Operations Tool","titles":["Implementing Tools","Tool Handlers"]},"210":{"href":"/servers/tools#database-query-tool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleDatabaseQuery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Define struct to bind both Query and Params</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Query  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        `json:&quot;query&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{} </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`json:&quot;params&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Bind arguments to the struct</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">BindArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">args); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract values from the bound struct</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    query </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args.Query</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    params </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args.Params</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate query for security (basic example)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isSelectQuery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(query) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;only SELECT queries are allowed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Execute query with timeout</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    rows, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> db.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">QueryContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, query, params</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;query failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> rows.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Convert results to JSON</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    results, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> rowsToJSON</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rows)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to process results: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resultData </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;query&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   query,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;results&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: results,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;count&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(results),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resultData)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to marshal results: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isSelectQuery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">query</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    trimmed </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">TrimSpace</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ToUpper</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(query))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HasPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(trimmed, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SELECT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleDatabaseQuery(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Define struct to bind both Query and Params\n    var args struct {\n        Query  string        `json:&quot;query&quot;`\n        Params []interface{} `json:&quot;params&quot;`\n    }\n    \n    // Bind arguments to the struct\n    if err := req.BindArguments(&amp;args); err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    // Extract values from the bound struct\n    query := args.Query\n    params := args.Params\n    \n    // Validate query for security (basic example)\n    if !isSelectQuery(query) {\n        return mcp.NewToolResultError(&quot;only SELECT queries are allowed&quot;), nil\n    }\n    \n    // Execute query with timeout\n    ctx, cancel := context.WithTimeout(ctx, 30*time.Second)\n    defer cancel()\n    \n    rows, err := db.QueryContext(ctx, query, params...)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;query failed: %v&quot;, err)), nil\n    }\n    defer rows.Close()\n    \n    // Convert results to JSON\n    results, err := rowsToJSON(rows)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to process results: %v&quot;, err)), nil\n    }\n    \n    resultData := map[string]interface{}{\n        &quot;query&quot;:   query,\n        &quot;results&quot;: results,\n        &quot;count&quot;:   len(results),\n    }\n    \n    jsonData, err := json.Marshal(resultData)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to marshal results: %v&quot;, err)), nil\n    }\n    \n    return mcp.NewToolResultText(string(jsonData)), nil\n}\n \nfunc isSelectQuery(query string) bool {\n    trimmed := strings.TrimSpace(strings.ToUpper(query))\n    return strings.HasPrefix(trimmed, &quot;SELECT&quot;)\n}\n","title":"Database Query Tool","titles":["Implementing Tools","Tool Handlers"]},"211":{"href":"/servers/tools#http-request-tool","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleHTTPRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    url, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;url&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    method, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;method&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    body </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;body&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle headers (optional object parameter)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); args </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> args[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;headers&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            headers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> h</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create HTTP request</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpReq, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewRequestWithContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, method, url, strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewReader</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(body))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to create request: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add headers</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> key, value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> headers {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        httpReq.Header.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Set</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(key, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Execute request with timeout</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{Timeout: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resp, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Do</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(httpReq)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;request failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> resp.Body.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Read response</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    respBody, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> io.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadAll</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resp.Body)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to read response: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resultData </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;status_code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: resp.StatusCode,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;headers&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:     resp.Header,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;body&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(respBody),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resultData)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to marshal result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleHTTPRequest(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    url, err := req.RequireString(&quot;url&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    method, err := req.RequireString(&quot;method&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    body := req.GetString(&quot;body&quot;, &quot;&quot;)\n    \n    // Handle headers (optional object parameter)\n    var headers map[string]interface{}\n    if args := req.GetArguments(); args != nil {\n        if h, ok := args[&quot;headers&quot;].(map[string]interface{}); ok {\n            headers = h\n        }\n    }\n    \n    // Create HTTP request\n    httpReq, err := http.NewRequestWithContext(ctx, method, url, strings.NewReader(body))\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to create request: %v&quot;, err)), nil\n    }\n    \n    // Add headers\n    for key, value := range headers {\n        httpReq.Header.Set(key, fmt.Sprintf(&quot;%v&quot;, value))\n    }\n    \n    // Execute request with timeout\n    client := &amp;http.Client{Timeout: 30 * time.Second}\n    resp, err := client.Do(httpReq)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;request failed: %v&quot;, err)), nil\n    }\n    defer resp.Body.Close()\n    \n    // Read response\n    respBody, err := io.ReadAll(resp.Body)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to read response: %v&quot;, err)), nil\n    }\n    \n    resultData := map[string]interface{}{\n        &quot;status_code&quot;: resp.StatusCode,\n        &quot;headers&quot;:     resp.Header,\n        &quot;body&quot;:        string(respBody),\n    }\n    \n    jsonData, err := json.Marshal(resultData)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to marshal result: %v&quot;, err)), nil\n    }\n    \n    return mcp.NewToolResultText(string(jsonData)), nil\n}\n","title":"HTTP Request Tool","titles":["Implementing Tools","Tool Handlers"]},"212":{"href":"/servers/tools#argument-validation","html":"\n","isPage":false,"text":"\n","title":"Argument Validation","titles":["Implementing Tools"]},"213":{"href":"/servers/tools#type-safe-parameter-extraction","html":"\n<p>MCP-Go provides helper methods for safe parameter extraction:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleValidatedTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Required parameters with validation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    name, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    age, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Optional parameter with default</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    enabled </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetBool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enabled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate constraints</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(name) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name cannot be empty&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> age </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ||</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> age </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 150</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age must be between 0 and 150&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Process with validated parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> processUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(name, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(age), enabled)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to marshal result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nMCP-Go provides helper methods for safe parameter extraction:\nfunc handleValidatedTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Required parameters with validation\n    name, err := req.RequireString(&quot;name&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    age, err := req.RequireFloat(&quot;age&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    // Optional parameter with default\n    enabled := req.GetBool(&quot;enabled&quot;, true)\n    \n    // Validate constraints\n    if len(name) == 0 {\n        return mcp.NewToolResultError(&quot;name cannot be empty&quot;), nil\n    }\n    \n    if age &lt; 0 || age &gt; 150 {\n        return mcp.NewToolResultError(&quot;age must be between 0 and 150&quot;), nil\n    }\n    \n    // Process with validated parameters\n    result := processUser(name, int(age), enabled)\n    \n    jsonData, err := json.Marshal(result)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to marshal result: %v&quot;, err)), nil\n    }\n    \n    return mcp.NewToolResultText(string(jsonData)), nil\n}\n","title":"Type-Safe Parameter Extraction","titles":["Implementing Tools","Argument Validation"]},"214":{"href":"/servers/tools#available-helper-methods","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Required parameters (return error if missing or wrong type)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">age, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">price, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;price&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">enabled, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireBool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enabled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Optional parameters with defaults</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;default&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">count </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;count&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">price </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;price&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">enabled </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetBool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;enabled&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Structured data binding</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UserData</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;name&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Age  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;age&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> user </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">UserData</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">BindArguments</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">user); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#005CC5;font-weight:bold;--shiki-dark:#6CB6FF;--shiki-dark-font-weight:bold\">### Custom Validation Functions</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">```go</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateEmail</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">email</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    emailRegex </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> regexp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">MustCompile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">emailRegex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">MatchString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(email) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid email format&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateURL</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">url</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    parsed, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> url.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Parse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(url)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid URL format: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> parsed.Scheme </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;http&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> parsed.Scheme </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;https&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;URL must use http or https scheme&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// Required parameters (return error if missing or wrong type)\nname, err := req.RequireString(&quot;name&quot;)\nage, err := req.RequireInt(&quot;age&quot;)\nprice, err := req.RequireFloat(&quot;price&quot;)\nenabled, err := req.RequireBool(&quot;enabled&quot;)\n \n// Optional parameters with defaults\nname := req.GetString(&quot;name&quot;, &quot;default&quot;)\ncount := req.GetInt(&quot;count&quot;, 10)\nprice := req.GetFloat(&quot;price&quot;, 0.0)\nenabled := req.GetBool(&quot;enabled&quot;, false)\n \n// Structured data binding\ntype UserData struct {\n    Name string `json:&quot;name&quot;`\n    Age  int    `json:&quot;age&quot;`\n}\nvar user UserData\nif err := req.BindArguments(&amp;user); err != nil {\n    return mcp.NewToolResultError(err.Error()), nil\n}\n \n### Custom Validation Functions\n \n```go\nfunc validateEmail(email string) error {\n    emailRegex := regexp.MustCompile(`^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$`)\n    if !emailRegex.MatchString(email) {\n        return fmt.Errorf(&quot;invalid email format&quot;)\n    }\n    return nil\n}\n \nfunc validateURL(url string) error {\n    parsed, err := url.Parse(url)\n    if err != nil {\n        return fmt.Errorf(&quot;invalid URL format: %w&quot;, err)\n    }\n    \n    if parsed.Scheme != &quot;http&quot; &amp;&amp; parsed.Scheme != &quot;https&quot; {\n        return fmt.Errorf(&quot;URL must use http or https scheme&quot;)\n    }\n    \n    return nil\n}\n","title":"Available Helper Methods","titles":["Implementing Tools","Argument Validation"]},"215":{"href":"/servers/tools#result-types","html":"\n","isPage":false,"text":"\n","title":"Result Types","titles":["Implementing Tools"]},"216":{"href":"/servers/tools#text-results","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleTextTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    message </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Operation completed successfully&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleTextTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    message := &quot;Operation completed successfully&quot;\n    return mcp.NewToolResultText(message), nil\n}\n","title":"Text Results","titles":["Implementing Tools","Result Types"]},"217":{"href":"/servers/tools#json-results","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleJSONTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;success&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;timestamp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;processed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">42</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;errors&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to marshal result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleJSONTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    result := map[string]interface{}{\n        &quot;status&quot;:    &quot;success&quot;,\n        &quot;timestamp&quot;: time.Now().Unix(),\n        &quot;data&quot;: map[string]interface{}{\n            &quot;processed&quot;: 42,\n            &quot;errors&quot;:    0,\n        },\n    }\n    \n    jsonData, err := json.Marshal(result)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to marshal result: %v&quot;, err)), nil\n    }\n    \n    return mcp.NewToolResultText(string(jsonData)), nil\n}\n","title":"JSON Results","titles":["Implementing Tools","Result Types"]},"218":{"href":"/servers/tools#multiple-content-types","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleMultiContentTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;John Doe&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User information retrieved successfully&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text: fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Name: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">, Age: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, data[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">], data[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleMultiContentTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    data := map[string]interface{}{\n        &quot;name&quot;: &quot;John Doe&quot;,\n        &quot;age&quot;:  30,\n    }\n    \n    return &amp;mcp.CallToolResult{\n        Content: []mcp.Content{\n            {\n                Type: &quot;text&quot;,\n                Text: &quot;User information retrieved successfully&quot;,\n            },\n            {\n                Type: &quot;text&quot;,\n                Text: fmt.Sprintf(&quot;Name: %s, Age: %d&quot;, data[&quot;name&quot;], data[&quot;age&quot;]),\n            },\n        },\n    }, nil\n}\n","title":"Multiple Content Types","titles":["Implementing Tools","Result Types"]},"219":{"href":"/servers/tools#error-results","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleToolWithErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // For validation errors, return error result (not Go error)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    name, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // For business logic errors, also return error result</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> someCondition {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid input: &quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> +</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> reason), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // For system errors, you can return Go errors</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> systemError {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system failure: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Or return structured error information</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Content: []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Content</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Text: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Operation failed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        IsError: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleToolWithErrors(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // For validation errors, return error result (not Go error)\n    name, err := req.RequireString(&quot;name&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    // For business logic errors, also return error result\n    if someCondition {\n        return mcp.NewToolResultError(&quot;invalid input: &quot; + reason), nil\n    }\n    \n    // For system errors, you can return Go errors\n    if systemError {\n        return nil, fmt.Errorf(&quot;system failure: %v&quot;, err)\n    }\n    \n    // Or return structured error information\n    return &amp;mcp.CallToolResult{\n        Content: []mcp.Content{\n            {\n                Type: &quot;text&quot;, \n                Text: &quot;Operation failed&quot;,\n            },\n        },\n        IsError: true,\n    }, nil\n}\n","title":"Error Results","titles":["Implementing Tools","Result Types"]},"220":{"href":"/servers/tools#tool-annotations","html":"\n<p>Provide hints to help LLMs use your tools effectively:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;search_database&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Search the product database&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;query&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Search query (supports wildcards with *)&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;limit&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Minimum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Maximum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Maximum number of results to return&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithArray</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;categories&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Filter by product categories&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Items</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tool, handleSearchDatabase)</span></span></code></pre>\n","isPage":false,"text":"\nProvide hints to help LLMs use your tools effectively:\ntool := mcp.NewTool(&quot;search_database&quot;,\n    mcp.WithDescription(&quot;Search the product database&quot;),\n    mcp.WithString(&quot;query&quot;,\n        mcp.Required(),\n        mcp.Description(&quot;Search query (supports wildcards with *)&quot;),\n    ),\n    mcp.WithNumber(&quot;limit&quot;,\n        mcp.DefaultNumber(10),\n        mcp.Minimum(1),\n        mcp.Maximum(100),\n        mcp.Description(&quot;Maximum number of results to return&quot;),\n    ),\n    mcp.WithArray(&quot;categories&quot;,\n        mcp.Description(&quot;Filter by product categories&quot;),\n        mcp.Items(map[string]any{&quot;type&quot;: &quot;string&quot;}),\n    ),\n)\n \ns.AddTool(tool, handleSearchDatabase)\n","title":"Tool Annotations","titles":["Implementing Tools"]},"221":{"href":"/servers/tools#advanced-tool-patterns","html":"\n","isPage":false,"text":"\n","title":"Advanced Tool Patterns","titles":["Implementing Tools"]},"222":{"href":"/servers/tools#streaming-results","html":"\n<p>For long-running operations, consider streaming results:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleStreamingTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // For operations that take time, provide progress updates</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    results </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Simulate work</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Millisecond)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Check for cancellation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        results </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(results, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Processed item </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    resultData </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;completed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;results&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: results,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jsonData, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Marshal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(resultData)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to marshal result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(jsonData)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nFor long-running operations, consider streaming results:\nfunc handleStreamingTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // For operations that take time, provide progress updates\n    results := []string{}\n    \n    for i := 0; i &lt; 10; i++ {\n        // Simulate work\n        time.Sleep(100 * time.Millisecond)\n        \n        // Check for cancellation\n        select {\n        case &lt;-ctx.Done():\n            return nil, ctx.Err()\n        default:\n        }\n        \n        results = append(results, fmt.Sprintf(&quot;Processed item %d&quot;, i+1))\n    }\n    \n    resultData := map[string]interface{}{\n        &quot;status&quot;:  &quot;completed&quot;,\n        &quot;results&quot;: results,\n    }\n    \n    jsonData, err := json.Marshal(resultData)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to marshal result: %v&quot;, err)), nil\n    }\n    \n    return mcp.NewToolResultText(string(jsonData)), nil\n}\n","title":"Streaming Results","titles":["Implementing Tools","Advanced Tool Patterns"]},"223":{"href":"/servers/tools#conditional-tools","html":"\n<p>Tools that are only available under certain conditions:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addConditionalTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">userRole</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Admin-only tools</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> userRole </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;admin&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        adminTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;delete_user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Delete a user account (admin only)&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(adminTool, handleDeleteUser)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // User tools available to all</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userTool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;get_profile&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Get user profile information&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(userTool, handleGetProfile)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nTools that are only available under certain conditions:\nfunc addConditionalTools(s *server.MCPServer, userRole string) {\n    // Admin-only tools\n    if userRole == &quot;admin&quot; {\n        adminTool := mcp.NewTool(&quot;delete_user&quot;,\n            mcp.WithDescription(&quot;Delete a user account (admin only)&quot;),\n            mcp.WithString(&quot;user_id&quot;, mcp.Required()),\n        )\n        s.AddTool(adminTool, handleDeleteUser)\n    }\n    \n    // User tools available to all\n    userTool := mcp.NewTool(&quot;get_profile&quot;,\n        mcp.WithDescription(&quot;Get user profile information&quot;),\n    )\n    s.AddTool(userTool, handleGetProfile)\n}\n","title":"Conditional Tools","titles":["Implementing Tools","Advanced Tool Patterns"]},"224":{"href":"/servers/tools#next-steps","html":"\n<ul>\n<li><strong><a href=\"/servers/prompts\">Prompts</a></strong> - Learn to create reusable interaction templates</li>\n<li><strong><a href=\"/servers/advanced\">Advanced Features</a></strong> - Explore typed tools, middleware, and hooks</li>\n<li><strong><a href=\"/servers/resources\">Resources</a></strong> - Learn about exposing data sources</li>\n</ul>","isPage":false,"text":"\n\nPrompts - Learn to create reusable interaction templates\nAdvanced Features - Explore typed tools, middleware, and hooks\nResources - Learn about exposing data sources\n","title":"Next Steps","titles":["Implementing Tools"]},"225":{"href":"/transports/http#streamablehttp-transport","html":"</header>\n<p>StreamableHTTP transport provides traditional request/response communication for MCP servers, perfect for REST-like interactions, stateless clients, and integration with existing web infrastructure.</p>\n","isPage":true,"text":"\nStreamableHTTP transport provides traditional request/response communication for MCP servers, perfect for REST-like interactions, stateless clients, and integration with existing web infrastructure.\n","title":"StreamableHTTP Transport","titles":[]},"226":{"href":"/transports/http#use-cases","html":"\n<p>StreamableHTTP transport excels in scenarios requiring:</p>\n<ul>\n<li><strong>Web services</strong>: Traditional REST API patterns</li>\n<li><strong>Stateless interactions</strong>: Each request is independent</li>\n<li><strong>Load balancing</strong>: Distribute requests across multiple servers</li>\n<li><strong>Caching</strong>: Leverage HTTP caching mechanisms</li>\n<li><strong>Integration</strong>: Work with existing HTTP infrastructure</li>\n<li><strong>Public APIs</strong>: Expose MCP functionality as web APIs</li>\n</ul>\n<strong>Example applications:</strong>\n<ul>\n<li>Microservice architectures</li>\n<li>Public API endpoints</li>\n<li>Integration with API gateways</li>\n<li>Cached data services</li>\n<li>Rate-limited services</li>\n<li>Multi-tenant applications</li>\n</ul>\n","isPage":false,"text":"\nStreamableHTTP transport excels in scenarios requiring:\n\nWeb services: Traditional REST API patterns\nStateless interactions: Each request is independent\nLoad balancing: Distribute requests across multiple servers\nCaching: Leverage HTTP caching mechanisms\nIntegration: Work with existing HTTP infrastructure\nPublic APIs: Expose MCP functionality as web APIs\n\nExample applications:\n\nMicroservice architectures\nPublic API endpoints\nIntegration with API gateways\nCached data services\nRate-limited services\nMulti-tenant applications\n\n","title":"Use Cases","titles":["StreamableHTTP Transport"]},"227":{"href":"/transports/http#implementation","html":"\n","isPage":false,"text":"\n","title":"Implementation","titles":["StreamableHTTP Transport"]},"228":{"href":"/transports/http#basic-streamablehttp-server","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">net/http</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;StreamableHTTP API Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add RESTful tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;get_user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Get user information&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleGetUser,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;create_user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Create a new user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;email&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Min</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleCreateUser,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;search_users&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Search users with filters&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;query&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Search query&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;limit&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Max</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;offset&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Min</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleSearchUsers,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;users://{user_id}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;User Profile&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User profile data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleUserResource,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start StreamableHTTP server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting StreamableHTTP server on :8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleGetUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> userID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_id is required&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Simulate database lookup</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    user, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getUserFromDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(userID)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, userID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;id&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;name&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;email&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;age&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        user.ID, user.Name, user.Email, user.Age)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCreateUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    email </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;email&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    age </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;age&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> name </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> ||</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> email </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;name and email are required&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate input</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isValidEmail</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(email) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid email format: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, email)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create user</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    user </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">User</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ID:        </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">generateID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:      name,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Email:     email,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Age:       age,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        CreatedAt: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> saveUserToDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(user); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to create user: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;id&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;message&quot;:&quot;User created successfully&quot;,&quot;user&quot;:{&quot;id&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;name&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;email&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;age&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        user.ID, user.ID, user.Name, user.Email, user.Age)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper functions and types for the examples</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> User</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ID        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;id&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Name      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;name&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Email     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    `json:&quot;email&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Age       </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">       `json:&quot;age&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    CreatedAt </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;created_at&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getUserFromDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">userID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">User</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">User</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ID:    userID,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Name:  </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;John Doe&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Email: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;john@example.com&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Age:   </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isValidEmail</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">email</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Contains</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(email, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;@&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Contains</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(email, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> generateID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">UnixNano</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> saveUserToDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">user</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">User</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleSearchUsers</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    query </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;query&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    limit </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;limit&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    offset </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;offset&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Search users with pagination</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    users, total, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> searchUsersInDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(query, limit, offset)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;search failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;users&quot;:[{&quot;id&quot;:&quot;1&quot;,&quot;name&quot;:&quot;John Doe&quot;,&quot;email&quot;:&quot;john@example.com&quot;,&quot;age&quot;:30},{&quot;id&quot;:&quot;2&quot;,&quot;name&quot;:&quot;Jane Smith&quot;,&quot;email&quot;:&quot;jane@example.com&quot;,&quot;age&quot;:25}],&quot;total&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;limit&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;offset&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;query&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        total, limit, offset, query)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleUserResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractUserIDFromURI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    user, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getUserFromDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(userID)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user not found: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, userID)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text:     fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;id&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;name&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;email&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;age&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, user.ID, user.Name, user.Email, user.Age),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Additional helper functions</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> searchUsersInDB</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">query</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">limit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">offset</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">User</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    users </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">User</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {ID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;John Doe&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Email: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;john@example.com&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Age: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {ID: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Jane Smith&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Email: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;jane@example.com&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, Age: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">25</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> users, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(users), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractUserIDFromURI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract user ID from URI like &quot;users://123&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 8</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> uri[:</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">8</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;users://&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> uri[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">8</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> uri</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;net/http&quot;\n    &quot;strings&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    s := server.NewMCPServer(&quot;StreamableHTTP API Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n        server.WithResourceCapabilities(true, true),\n    )\n \n    // Add RESTful tools\n    s.AddTool(\n        mcp.NewTool(&quot;get_user&quot;,\n            mcp.WithDescription(&quot;Get user information&quot;),\n            mcp.WithString(&quot;user_id&quot;, mcp.Required()),\n        ),\n        handleGetUser,\n    )\n \n    s.AddTool(\n        mcp.NewTool(&quot;create_user&quot;,\n            mcp.WithDescription(&quot;Create a new user&quot;),\n            mcp.WithString(&quot;name&quot;, mcp.Required()),\n            mcp.WithString(&quot;email&quot;, mcp.Required()),\n            mcp.WithNumber(&quot;age&quot;, mcp.Min(0)),\n        ),\n        handleCreateUser,\n    )\n \n    s.AddTool(\n        mcp.NewTool(&quot;search_users&quot;,\n            mcp.WithDescription(&quot;Search users with filters&quot;),\n            mcp.WithString(&quot;query&quot;, mcp.Description(&quot;Search query&quot;)),\n            mcp.WithNumber(&quot;limit&quot;, mcp.DefaultNumber(10), mcp.Max(100)),\n            mcp.WithNumber(&quot;offset&quot;, mcp.DefaultNumber(0), mcp.Min(0)),\n        ),\n        handleSearchUsers,\n    )\n \n    // Add resources\n    s.AddResource(\n        mcp.NewResource(\n            &quot;users://{user_id}&quot;,\n            &quot;User Profile&quot;,\n            mcp.WithResourceDescription(&quot;User profile data&quot;),\n            mcp.WithMIMEType(&quot;application/json&quot;),\n        ),\n        handleUserResource,\n    )\n \n    // Start StreamableHTTP server\n    log.Println(&quot;Starting StreamableHTTP server on :8080&quot;)\n    httpServer := server.NewStreamableHTTPServer(s)\n    if err := httpServer.Start(&quot;:8080&quot;); err != nil {\n        log.Fatal(err)\n    }\n}\n \nfunc handleGetUser(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    userID := req.GetString(&quot;user_id&quot;, &quot;&quot;)\n    if userID == &quot;&quot; {\n        return nil, fmt.Errorf(&quot;user_id is required&quot;)\n    }\n    \n    // Simulate database lookup\n    user, err := getUserFromDB(userID)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;user not found: %s&quot;, userID)\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(`{&quot;id&quot;:&quot;%s&quot;,&quot;name&quot;:&quot;%s&quot;,&quot;email&quot;:&quot;%s&quot;,&quot;age&quot;:%d}`, \n        user.ID, user.Name, user.Email, user.Age)), nil\n}\n \nfunc handleCreateUser(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    name := req.GetString(&quot;name&quot;, &quot;&quot;)\n    email := req.GetString(&quot;email&quot;, &quot;&quot;)\n    age := req.GetInt(&quot;age&quot;, 0)\n \n    if name == &quot;&quot; || email == &quot;&quot; {\n        return nil, fmt.Errorf(&quot;name and email are required&quot;)\n    }\n \n    // Validate input\n    if !isValidEmail(email) {\n        return nil, fmt.Errorf(&quot;invalid email format: %s&quot;, email)\n    }\n \n    // Create user\n    user := &amp;User{\n        ID:        generateID(),\n        Name:      name,\n        Email:     email,\n        Age:       age,\n        CreatedAt: time.Now(),\n    }\n \n    if err := saveUserToDB(user); err != nil {\n        return nil, fmt.Errorf(&quot;failed to create user: %w&quot;, err)\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(`{&quot;id&quot;:&quot;%s&quot;,&quot;message&quot;:&quot;User created successfully&quot;,&quot;user&quot;:{&quot;id&quot;:&quot;%s&quot;,&quot;name&quot;:&quot;%s&quot;,&quot;email&quot;:&quot;%s&quot;,&quot;age&quot;:%d}}`,\n        user.ID, user.ID, user.Name, user.Email, user.Age)), nil\n}\n \n// Helper functions and types for the examples\ntype User struct {\n    ID        string    `json:&quot;id&quot;`\n    Name      string    `json:&quot;name&quot;`\n    Email     string    `json:&quot;email&quot;`\n    Age       int       `json:&quot;age&quot;`\n    CreatedAt time.Time `json:&quot;created_at&quot;`\n}\n \nfunc getUserFromDB(userID string) (*User, error) {\n    // Placeholder implementation\n    return &amp;User{\n        ID:    userID,\n        Name:  &quot;John Doe&quot;,\n        Email: &quot;john@example.com&quot;,\n        Age:   30,\n    }, nil\n}\n \nfunc isValidEmail(email string) bool {\n    return strings.Contains(email, &quot;@&quot;) &amp;&amp; strings.Contains(email, &quot;.&quot;)\n}\n \nfunc generateID() string {\n    // Placeholder implementation\n    return fmt.Sprintf(&quot;user_%d&quot;, time.Now().UnixNano())\n}\n \nfunc saveUserToDB(user *User) error {\n    // Placeholder implementation\n    return nil\n}\n \nfunc handleSearchUsers(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    query := req.GetString(&quot;query&quot;, &quot;&quot;)\n    limit := req.GetInt(&quot;limit&quot;, 10)\n    offset := req.GetInt(&quot;offset&quot;, 0)\n \n    // Search users with pagination\n    users, total, err := searchUsersInDB(query, limit, offset)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;search failed: %w&quot;, err)\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(`{&quot;users&quot;:[{&quot;id&quot;:&quot;1&quot;,&quot;name&quot;:&quot;John Doe&quot;,&quot;email&quot;:&quot;john@example.com&quot;,&quot;age&quot;:30},{&quot;id&quot;:&quot;2&quot;,&quot;name&quot;:&quot;Jane Smith&quot;,&quot;email&quot;:&quot;jane@example.com&quot;,&quot;age&quot;:25}],&quot;total&quot;:%d,&quot;limit&quot;:%d,&quot;offset&quot;:%d,&quot;query&quot;:&quot;%s&quot;}`,\n        total, limit, offset, query)), nil\n}\n \nfunc handleUserResource(ctx context.Context, req mcp.ReadResourceRequest) ([]mcp.ResourceContents, error) {\n    userID := extractUserIDFromURI(req.Params.URI)\n    \n    user, err := getUserFromDB(userID)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;user not found: %s&quot;, userID)\n    }\n \n    return []mcp.ResourceContents{\n        mcp.TextResourceContents{\n            URI:      req.Params.URI,\n            MIMEType: &quot;application/json&quot;,\n            Text:     fmt.Sprintf(`{&quot;id&quot;:&quot;%s&quot;,&quot;name&quot;:&quot;%s&quot;,&quot;email&quot;:&quot;%s&quot;,&quot;age&quot;:%d}`, user.ID, user.Name, user.Email, user.Age),\n        },\n    }, nil\n}\n \n// Additional helper functions\n \nfunc searchUsersInDB(query string, limit, offset int) ([]*User, int, error) {\n    // Placeholder implementation\n    users := []*User{\n        {ID: &quot;1&quot;, Name: &quot;John Doe&quot;, Email: &quot;john@example.com&quot;, Age: 30},\n        {ID: &quot;2&quot;, Name: &quot;Jane Smith&quot;, Email: &quot;jane@example.com&quot;, Age: 25},\n    }\n    return users, len(users), nil\n}\n \nfunc extractUserIDFromURI(uri string) string {\n    // Extract user ID from URI like &quot;users://123&quot;\n    if len(uri) &gt; 8 &amp;&amp; uri[:8] == &quot;users://&quot; {\n        return uri[8:]\n    }\n    return uri\n}\n","title":"Basic StreamableHTTP Server","titles":["StreamableHTTP Transport","Implementation"]},"229":{"href":"/transports/http#advanced-streamablehttp-configuration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Advanced StreamableHTTP Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithLogging</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add comprehensive tools and resources</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addCRUDTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addBatchTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addAnalyticsTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting advanced StreamableHTTP server on :8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithEndpointPath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/api/v1/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithHeartbeatInterval</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithStateLess</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper functions for the advanced example</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addCRUDTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation - would add CRUD tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addBatchTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation - would add batch processing tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addAnalyticsTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation - would add analytics tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> logToolCall</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">toolName</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">duration</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, toolName, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> completed in </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, toolName, duration)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> logResourceRead</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">duration</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">err</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resource read </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, uri, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Resource read </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> completed in </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, uri, duration)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addStreamableHTTPMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Authentication middleware</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddToolMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Extract and validate auth token</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            token </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractAuthToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;authentication required&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            user, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> validateToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(token)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid token: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Add user to context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithValue</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, user)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Rate limiting middleware</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddToolMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            clientIP </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getClientIP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">rateLimiter.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Allow</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(clientIP) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;rate limit exceeded&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Caching middleware</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResourceMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceHandler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Check cache first</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cached </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getFromCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI); cached </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cached, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> next</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, req)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">                // Cache successful results</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                setCache</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI, result, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Minute)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc main() {\n    s := server.NewMCPServer(&quot;Advanced StreamableHTTP Server&quot;, &quot;1.0.0&quot;,\n        server.WithResourceCapabilities(true, true),\n        server.WithPromptCapabilities(true),\n        server.WithToolCapabilities(true),\n        server.WithLogging(),\n    )\n \n    // Add comprehensive tools and resources\n    addCRUDTools(s)\n    addBatchTools(s)\n    addAnalyticsTools(s)\n \n    log.Println(&quot;Starting advanced StreamableHTTP server on :8080&quot;)\n    httpServer := server.NewStreamableHTTPServer(s,\n        server.WithEndpointPath(&quot;/api/v1/mcp&quot;),\n        server.WithHeartbeatInterval(30*time.Second),\n        server.WithStateLess(false),\n    )\n    \n    if err := httpServer.Start(&quot;:8080&quot;); err != nil {\n        log.Fatal(err)\n    }\n}\n \n// Helper functions for the advanced example\nfunc addCRUDTools(s *server.MCPServer) {\n    // Placeholder implementation - would add CRUD tools\n}\n \nfunc addBatchTools(s *server.MCPServer) {\n    // Placeholder implementation - would add batch processing tools\n}\n \nfunc addAnalyticsTools(s *server.MCPServer) {\n    // Placeholder implementation - would add analytics tools\n}\n \nfunc logToolCall(sessionID, toolName string, duration time.Duration, err error) {\n    // Placeholder implementation\n    if err != nil {\n        log.Printf(&quot;Tool %s failed: %v&quot;, toolName, err)\n    } else {\n        log.Printf(&quot;Tool %s completed in %v&quot;, toolName, duration)\n    }\n}\n \nfunc logResourceRead(sessionID, uri string, duration time.Duration, err error) {\n    // Placeholder implementation\n    if err != nil {\n        log.Printf(&quot;Resource read %s failed: %v&quot;, uri, err)\n    } else {\n        log.Printf(&quot;Resource read %s completed in %v&quot;, uri, duration)\n    }\n}\n \nfunc addStreamableHTTPMiddleware(s *server.MCPServer) {\n    // Authentication middleware\n    s.AddToolMiddleware(func(next server.ToolHandler) server.ToolHandler {\n        return func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n            // Extract and validate auth token\n            token := extractAuthToken(ctx)\n            if token == &quot;&quot; {\n                return nil, fmt.Errorf(&quot;authentication required&quot;)\n            }\n            \n            user, err := validateToken(token)\n            if err != nil {\n                return nil, fmt.Errorf(&quot;invalid token: %w&quot;, err)\n            }\n            \n            // Add user to context\n            ctx = context.WithValue(ctx, &quot;user&quot;, user)\n            return next(ctx, req)\n        }\n    })\n \n    // Rate limiting middleware\n    s.AddToolMiddleware(func(next server.ToolHandler) server.ToolHandler {\n        return func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n            clientIP := getClientIP(ctx)\n            if !rateLimiter.Allow(clientIP) {\n                return nil, fmt.Errorf(&quot;rate limit exceeded&quot;)\n            }\n            return next(ctx, req)\n        }\n    })\n \n    // Caching middleware\n    s.AddResourceMiddleware(func(next server.ResourceHandler) server.ResourceHandler {\n        return func(ctx context.Context, req mcp.ReadResourceRequest) (*mcp.ReadResourceResult, error) {\n            // Check cache first\n            if cached := getFromCache(req.Params.URI); cached != nil {\n                return cached, nil\n            }\n            \n            result, err := next(ctx, req)\n            if err == nil {\n                // Cache successful results\n                setCache(req.Params.URI, result, 5*time.Minute)\n            }\n            \n            return result, err\n        }\n    })\n}\n","title":"Advanced StreamableHTTP Configuration","titles":["StreamableHTTP Transport","Implementation"]},"230":{"href":"/transports/http#endpoints","html":"\n","isPage":false,"text":"\n","title":"Endpoints","titles":["StreamableHTTP Transport"]},"231":{"href":"/transports/http#standard-mcp-endpoints","html":"\n<p>When you start a StreamableHTTP MCP server, it automatically creates these endpoints:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/initialize     - Initialize MCP session</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/tools/list     - List available tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/tools/call     - Call a tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/resources/list - List available resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/resources/read - Read a resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/prompts/list   - List available prompts</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/prompts/get    - Get a prompt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">GET  /mcp/health         - Health check</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">GET  /mcp/capabilities   - Server capabilities</span></span></code></pre>\n","isPage":false,"text":"\nWhen you start a StreamableHTTP MCP server, it automatically creates these endpoints:\nPOST /mcp/initialize     - Initialize MCP session\nPOST /mcp/tools/list     - List available tools\nPOST /mcp/tools/call     - Call a tool\nPOST /mcp/resources/list - List available resources\nPOST /mcp/resources/read - Read a resource\nPOST /mcp/prompts/list   - List available prompts\nPOST /mcp/prompts/get    - Get a prompt\nGET  /mcp/health         - Health check\nGET  /mcp/capabilities   - Server capabilities\n","title":"Standard MCP Endpoints","titles":["StreamableHTTP Transport","Endpoints"]},"232":{"href":"/transports/http#custom-endpoints","html":"\n<p>Add custom HTTP endpoints alongside MCP:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Custom StreamableHTTP Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create HTTP server with custom routes</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mux </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewServeMux</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add MCP endpoints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddMCPRoutes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(mux, s, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add custom endpoints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mux.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HandleFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/api/status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handleStatus)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mux.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HandleFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/api/metrics&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handleMetrics)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mux.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HandleFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/api/users&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handleUsersAPI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mux.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HandleFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/api/upload&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handleFileUpload)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add middleware</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    handler </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(mux)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting custom StreamableHTTP server on :8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListenAndServe</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, handler); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleStatus</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">w</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResponseWriter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">r</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    status </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;healthy&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;timestamp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;version&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;uptime&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Since</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(startTime).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    w.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Header</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Set</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Content-Type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewEncoder</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Encode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(status)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleMetrics</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">w</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResponseWriter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">r</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    metrics </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> collectMetrics</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    w.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Header</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Set</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Content-Type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    json.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewEncoder</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Encode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(metrics)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleUsersAPI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">w</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResponseWriter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">r</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> r.Method {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;GET&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleListUsers</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, r)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;POST&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleCreateUserAPI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, r)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;PUT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleUpdateUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, r)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;DELETE&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handleDeleteUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, r)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Method not allowed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, http.StatusMethodNotAllowed)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nAdd custom HTTP endpoints alongside MCP:\nfunc main() {\n    s := server.NewMCPServer(&quot;Custom StreamableHTTP Server&quot;, &quot;1.0.0&quot;)\n    \n    // Create HTTP server with custom routes\n    mux := http.NewServeMux()\n    \n    // Add MCP endpoints\n    server.AddMCPRoutes(mux, s, &quot;/mcp&quot;)\n    \n    // Add custom endpoints\n    mux.HandleFunc(&quot;/api/status&quot;, handleStatus)\n    mux.HandleFunc(&quot;/api/metrics&quot;, handleMetrics)\n    mux.HandleFunc(&quot;/api/users&quot;, handleUsersAPI)\n    mux.HandleFunc(&quot;/api/upload&quot;, handleFileUpload)\n    \n    // Add middleware\n    handler := addMiddleware(mux)\n    \n    log.Println(&quot;Starting custom StreamableHTTP server on :8080&quot;)\n    if err := http.ListenAndServe(&quot;:8080&quot;, handler); err != nil {\n        log.Fatal(err)\n    }\n}\n \nfunc handleStatus(w http.ResponseWriter, r *http.Request) {\n    status := map[string]interface{}{\n        &quot;status&quot;:    &quot;healthy&quot;,\n        &quot;timestamp&quot;: time.Now().Unix(),\n        &quot;version&quot;:   &quot;1.0.0&quot;,\n        &quot;uptime&quot;:    time.Since(startTime).String(),\n    }\n    \n    w.Header().Set(&quot;Content-Type&quot;, &quot;application/json&quot;)\n    json.NewEncoder(w).Encode(status)\n}\n \nfunc handleMetrics(w http.ResponseWriter, r *http.Request) {\n    metrics := collectMetrics()\n    \n    w.Header().Set(&quot;Content-Type&quot;, &quot;application/json&quot;)\n    json.NewEncoder(w).Encode(metrics)\n}\n \nfunc handleUsersAPI(w http.ResponseWriter, r *http.Request) {\n    switch r.Method {\n    case &quot;GET&quot;:\n        handleListUsers(w, r)\n    case &quot;POST&quot;:\n        handleCreateUserAPI(w, r)\n    case &quot;PUT&quot;:\n        handleUpdateUser(w, r)\n    case &quot;DELETE&quot;:\n        handleDeleteUser(w, r)\n    default:\n        http.Error(w, &quot;Method not allowed&quot;, http.StatusMethodNotAllowed)\n    }\n}\n","title":"Custom Endpoints","titles":["StreamableHTTP Transport","Endpoints"]},"233":{"href":"/transports/http#requestresponse-patterns","html":"\n","isPage":false,"text":"\n","title":"Request/Response Patterns","titles":["StreamableHTTP Transport","Endpoints"]},"234":{"href":"/transports/http#standard-mcp-request","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">POST /mcp/tools/call</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">Content-Type: application/json</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;method&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;tools/call&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;params&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;search_users&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;arguments&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;query&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;john&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;limit&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;offset&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nPOST /mcp/tools/call\nContent-Type: application/json\n \n{\n  &quot;jsonrpc&quot;: &quot;2.0&quot;,\n  &quot;id&quot;: 1,\n  &quot;method&quot;: &quot;tools/call&quot;,\n  &quot;params&quot;: {\n    &quot;name&quot;: &quot;search_users&quot;,\n    &quot;arguments&quot;: {\n      &quot;query&quot;: &quot;john&quot;,\n      &quot;limit&quot;: 10,\n      &quot;offset&quot;: 0\n    }\n  }\n}\n","title":"Standard MCP Request","titles":["StreamableHTTP Transport","Endpoints","Request/Response Patterns"]},"235":{"href":"/transports/http#standard-mcp-response","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">        &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">        &quot;text&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;{</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">users</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">:[...],</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">total</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">:25,</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">limit</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">:10,</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">offset</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\&quot;</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">:0}&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n{\n  &quot;jsonrpc&quot;: &quot;2.0&quot;,\n  &quot;id&quot;: 1,\n  &quot;result&quot;: {\n    &quot;content&quot;: [\n      {\n        &quot;type&quot;: &quot;text&quot;,\n        &quot;text&quot;: &quot;{\\&quot;users\\&quot;:[...],\\&quot;total\\&quot;:25,\\&quot;limit\\&quot;:10,\\&quot;offset\\&quot;:0}&quot;\n      }\n    ]\n  }\n}\n","title":"Standard MCP Response","titles":["StreamableHTTP Transport","Endpoints","Request/Response Patterns"]},"236":{"href":"/transports/http#error-response","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;jsonrpc&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;error&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">-32602</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Invalid params&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;details&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user_id is required&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n{\n  &quot;jsonrpc&quot;: &quot;2.0&quot;,\n  &quot;id&quot;: 1,\n  &quot;error&quot;: {\n    &quot;code&quot;: -32602,\n    &quot;message&quot;: &quot;Invalid params&quot;,\n    &quot;data&quot;: {\n      &quot;details&quot;: &quot;user_id is required&quot;\n    }\n  }\n}\n","title":"Error Response","titles":["StreamableHTTP Transport","Endpoints","Request/Response Patterns"]},"237":{"href":"/transports/http#session-management","html":"\n","isPage":false,"text":"\n","title":"Session Management","titles":["StreamableHTTP Transport"]},"238":{"href":"/transports/http#stateful-vs-stateless","html":"\n","isPage":false,"text":"\n","title":"Stateful vs Stateless","titles":["StreamableHTTP Transport","Session Management"]},"239":{"href":"/transports/http#stateless-design-recommended","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Each request is independent</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleStatelessTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract all needed information from request</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractUserFromToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    params </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.Params.Arguments</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Process without relying on server state</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> processRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(userID, params)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultJSON</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Use external storage for persistence</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getUserPreferences</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">userID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Load from database, cache, etc.</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> loadFromRedis</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">:prefs&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, userID))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// Each request is independent\nfunc handleStatelessTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Extract all needed information from request\n    userID := extractUserFromToken(ctx)\n    params := req.Params.Arguments\n    \n    // Process without relying on server state\n    result, err := processRequest(userID, params)\n    if err != nil {\n        return nil, err\n    }\n    \n    return mcp.NewToolResultJSON(result), nil\n}\n \n// Use external storage for persistence\nfunc getUserPreferences(userID string) (map[string]interface{}, error) {\n    // Load from database, cache, etc.\n    return loadFromRedis(fmt.Sprintf(&quot;user:%s:prefs&quot;, userID))\n}\n","title":"Stateless Design (Recommended)","titles":["StreamableHTTP Transport","Session Management","Stateful vs Stateless"]},"240":{"href":"/transports/http#stateful-design-when-needed","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> HTTPSessionManager</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sessions </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSession</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mutex    </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cleanup  </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Ticker</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> HTTPSession</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ID          </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    UserID      </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    CreatedAt   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    LastAccess  </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Data        </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ExpiresAt   </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewHTTPSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessions: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        cleanup:  time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTicker</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Minute),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cleanupExpiredSessions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CreateSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">userID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    session </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ID:         </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">generateSessionID</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        UserID:     userID,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        CreatedAt:  time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        LastAccess: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Data:       </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ExpiresAt:  time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Minute),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.sessions[session.ID] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> session</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> session</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionID</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    session, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.sessions[sessionID]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(session.ExpiresAt) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Update last access</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    session.LastAccess </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    session.ExpiresAt </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Add</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Minute)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> session, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sm </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">HTTPSessionManager</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">cleanupExpiredSessions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.cleanup.C {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Lock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        now </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> id, session </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sm.sessions {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> now.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(session.ExpiresAt) {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                delete</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sm.sessions, id)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sm.mutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype HTTPSessionManager struct {\n    sessions map[string]*HTTPSession\n    mutex    sync.RWMutex\n    cleanup  *time.Ticker\n}\n \ntype HTTPSession struct {\n    ID          string\n    UserID      string\n    CreatedAt   time.Time\n    LastAccess  time.Time\n    Data        map[string]interface{}\n    ExpiresAt   time.Time\n}\n \nfunc NewHTTPSessionManager() *HTTPSessionManager {\n    sm := &amp;HTTPSessionManager{\n        sessions: make(map[string]*HTTPSession),\n        cleanup:  time.NewTicker(1 * time.Minute),\n    }\n    \n    go sm.cleanupExpiredSessions()\n    return sm\n}\n \nfunc (sm *HTTPSessionManager) CreateSession(userID string) *HTTPSession {\n    sm.mutex.Lock()\n    defer sm.mutex.Unlock()\n    \n    session := &amp;HTTPSession{\n        ID:         generateSessionID(),\n        UserID:     userID,\n        CreatedAt:  time.Now(),\n        LastAccess: time.Now(),\n        Data:       make(map[string]interface{}),\n        ExpiresAt:  time.Now().Add(30 * time.Minute),\n    }\n    \n    sm.sessions[session.ID] = session\n    return session\n}\n \nfunc (sm *HTTPSessionManager) GetSession(sessionID string) (*HTTPSession, bool) {\n    sm.mutex.RLock()\n    defer sm.mutex.RUnlock()\n    \n    session, exists := sm.sessions[sessionID]\n    if !exists || time.Now().After(session.ExpiresAt) {\n        return nil, false\n    }\n    \n    // Update last access\n    session.LastAccess = time.Now()\n    session.ExpiresAt = time.Now().Add(30 * time.Minute)\n    \n    return session, true\n}\n \nfunc (sm *HTTPSessionManager) cleanupExpiredSessions() {\n    for range sm.cleanup.C {\n        sm.mutex.Lock()\n        now := time.Now()\n        \n        for id, session := range sm.sessions {\n            if now.After(session.ExpiresAt) {\n                delete(sm.sessions, id)\n            }\n        }\n        \n        sm.mutex.Unlock()\n    }\n}\n","title":"Stateful Design (When Needed)","titles":["StreamableHTTP Transport","Session Management","Stateful vs Stateless"]},"241":{"href":"/transports/http#authentication-and-authorization","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> AuthMiddleware</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    jwtSecret []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    userStore </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">UserStore</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewAuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">secret</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">store</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> UserStore</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        jwtSecret: secret,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        userStore: store,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Middleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">next</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Handler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Handler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HandlerFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">w</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResponseWriter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">r</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Extract token from Authorization header</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        authHeader </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> r.Header.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Get</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Authorization&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HasPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(authHeader, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Bearer &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Missing or invalid authorization header&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, http.StatusUnauthorized)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        token </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">TrimPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(authHeader, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Bearer &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Validate JWT token</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        claims, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> m.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">validateJWT</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(token)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Invalid token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, http.StatusUnauthorized)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Load user information</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        user, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> m.userStore.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetUser</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(claims.UserID)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            http.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;User not found&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, http.StatusUnauthorized)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Add user to request context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithValue</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(r.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, user)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        next.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeHTTP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(w, r.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">m </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">AuthMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">validateJWT</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tokenString</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Claims</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Note: This example uses a hypothetical JWT library</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // In practice, you would use a real JWT library like github.com/golang-jwt/jwt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    token, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> jwt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ParseWithClaims</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tokenString, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Claims</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">token</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">jwt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Token</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> m.jwtSecret, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> claims, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token.Claims.(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Claims</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> token.Valid {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> claims, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid token&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Claims</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    UserID </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;user_id&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Role   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `json:&quot;role&quot;`</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    jwt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">StandardClaims</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\ntype AuthMiddleware struct {\n    jwtSecret []byte\n    userStore UserStore\n}\n \nfunc NewAuthMiddleware(secret []byte, store UserStore) *AuthMiddleware {\n    return &amp;AuthMiddleware{\n        jwtSecret: secret,\n        userStore: store,\n    }\n}\n \nfunc (m *AuthMiddleware) Middleware(next http.Handler) http.Handler {\n    return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n        // Extract token from Authorization header\n        authHeader := r.Header.Get(&quot;Authorization&quot;)\n        if !strings.HasPrefix(authHeader, &quot;Bearer &quot;) {\n            http.Error(w, &quot;Missing or invalid authorization header&quot;, http.StatusUnauthorized)\n            return\n        }\n        \n        token := strings.TrimPrefix(authHeader, &quot;Bearer &quot;)\n        \n        // Validate JWT token\n        claims, err := m.validateJWT(token)\n        if err != nil {\n            http.Error(w, &quot;Invalid token&quot;, http.StatusUnauthorized)\n            return\n        }\n        \n        // Load user information\n        user, err := m.userStore.GetUser(claims.UserID)\n        if err != nil {\n            http.Error(w, &quot;User not found&quot;, http.StatusUnauthorized)\n            return\n        }\n        \n        // Add user to request context\n        ctx := context.WithValue(r.Context(), &quot;user&quot;, user)\n        next.ServeHTTP(w, r.WithContext(ctx))\n    })\n}\n \nfunc (m *AuthMiddleware) validateJWT(tokenString string) (*Claims, error) {\n    // Note: This example uses a hypothetical JWT library\n    // In practice, you would use a real JWT library like github.com/golang-jwt/jwt\n    token, err := jwt.ParseWithClaims(tokenString, &amp;Claims{}, func(token *jwt.Token) (interface{}, error) {\n        return m.jwtSecret, nil\n    })\n    \n    if err != nil {\n        return nil, err\n    }\n    \n    if claims, ok := token.Claims.(*Claims); ok &amp;&amp; token.Valid {\n        return claims, nil\n    }\n    \n    return nil, fmt.Errorf(&quot;invalid token&quot;)\n}\n \ntype Claims struct {\n    UserID string `json:&quot;user_id&quot;`\n    Role   string `json:&quot;role&quot;`\n    jwt.StandardClaims\n}\n","title":"Authentication and Authorization","titles":["StreamableHTTP Transport","Session Management"]},"242":{"href":"/transports/http#next-steps","html":"\n<ul>\n<li><strong><a href=\"/transports/inprocess\">In-Process Transport</a></strong> - Learn about embedded scenarios</li>\n<li><strong><a href=\"/clients\">Client Development</a></strong> - Build MCP clients for HTTP transport</li>\n<li><strong><a href=\"/servers/basics\">Server Basics</a></strong> - Review fundamental server concepts</li>\n</ul>","isPage":false,"text":"\n\nIn-Process Transport - Learn about embedded scenarios\nClient Development - Build MCP clients for HTTP transport\nServer Basics - Review fundamental server concepts\n","title":"Next Steps","titles":["StreamableHTTP Transport"]},"243":{"href":"/transports#transport-options","html":"</header>\n<p>MCP-Go supports multiple transport methods to fit different deployment scenarios and integration patterns. Choose the right transport based on your use case, performance requirements, and client capabilities.</p>\n","isPage":true,"text":"\nMCP-Go supports multiple transport methods to fit different deployment scenarios and integration patterns. Choose the right transport based on your use case, performance requirements, and client capabilities.\n","title":"Transport Options","titles":[]},"244":{"href":"/transports#overview","html":"\n<p>Transport layers handle the communication between MCP clients and servers. Each transport has different characteristics and is optimized for specific scenarios:</p>\n<ul>\n<li><strong><a href=\"/transports/stdio\">STDIO</a></strong> - Standard input/output for command-line tools</li>\n<li><strong><a href=\"/transports/sse\">SSE</a></strong> - Server-Sent Events for web applications</li>\n<li><strong><a href=\"/transports/http\">StreamableHTTP</a></strong> - Traditional HTTP for REST-like interactions</li>\n<li><strong><a href=\"/transports/inprocess\">In-Process</a></strong> - Direct integration for embedded scenarios</li>\n</ul>\n","isPage":false,"text":"\nTransport layers handle the communication between MCP clients and servers. Each transport has different characteristics and is optimized for specific scenarios:\n\nSTDIO - Standard input/output for command-line tools\nSSE - Server-Sent Events for web applications\nStreamableHTTP - Traditional HTTP for REST-like interactions\nIn-Process - Direct integration for embedded scenarios\n\n","title":"Overview","titles":["Transport Options"]},"245":{"href":"/transports#transport-comparison","html":"\n<table><thead><tr><th>Transport</th><th>Use Case</th><th>Pros</th><th>Cons</th></tr></thead><tbody><tr><td><strong>STDIO</strong></td><td>CLI tools, desktop apps</td><td>Simple, secure, no network</td><td>Single client, local only</td></tr><tr><td><strong>SSE</strong></td><td>Web apps, real-time</td><td>Multi-client, real-time, web-friendly</td><td>HTTP overhead, one-way streaming</td></tr><tr><td><strong>StreamableHTTP</strong></td><td>Web services, APIs</td><td>Standard protocol, caching, load balancing</td><td>No real-time, more complex</td></tr><tr><td><strong>In-Process</strong></td><td>Embedded, testing</td><td>No serialization, fastest</td><td>Same process only</td></tr></tbody></table>\n","isPage":false,"text":"\nTransportUse CaseProsConsSTDIOCLI tools, desktop appsSimple, secure, no networkSingle client, local onlySSEWeb apps, real-timeMulti-client, real-time, web-friendlyHTTP overhead, one-way streamingStreamableHTTPWeb services, APIsStandard protocol, caching, load balancingNo real-time, more complexIn-ProcessEmbedded, testingNo serialization, fastestSame process only\n","title":"Transport Comparison","titles":["Transport Options"]},"246":{"href":"/transports#quick-example","html":"\n<p>The same server code works with any transport:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">os</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create server (transport-agnostic)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Multi-Transport Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add a simple tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;echo&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Echo back the input&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleEcho,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Choose transport based on environment</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    transport </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MCP_TRANSPORT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;PORT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;8080&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> transport {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting SSE server on port </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, port)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> +</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> port)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;streamablehttp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting StreamableHTTP server on port </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, port)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> +</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> port)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting STDIO server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleEcho</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    message, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Echo: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, message)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe same server code works with any transport:\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;os&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n    &quot;github.com/mark3labs/mcp-go/client&quot;\n)\n \nfunc main() {\n    // Create server (transport-agnostic)\n    s := server.NewMCPServer(&quot;Multi-Transport Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n    )\n \n    // Add a simple tool\n    s.AddTool(\n        mcp.NewTool(&quot;echo&quot;,\n            mcp.WithDescription(&quot;Echo back the input&quot;),\n            mcp.WithString(&quot;message&quot;, mcp.Required()),\n        ),\n        handleEcho,\n    )\n \n    // Choose transport based on environment\n    transport := os.Getenv(&quot;MCP_TRANSPORT&quot;)\n    port := os.Getenv(&quot;PORT&quot;)\n    if port == &quot;&quot; {\n        port = &quot;8080&quot;\n    }\n \n    switch transport {\n    case &quot;sse&quot;:\n        fmt.Printf(&quot;Starting SSE server on port %s\\n&quot;, port)\n        sseServer := server.NewSSEServer(s)\n        sseServer.Start(&quot;:&quot; + port)\n    case &quot;streamablehttp&quot;:\n        fmt.Printf(&quot;Starting StreamableHTTP server on port %s\\n&quot;, port)\n        httpServer := server.NewStreamableHTTPServer(s)\n        httpServer.Start(&quot;:&quot; + port)\n    default:\n        fmt.Println(&quot;Starting STDIO server&quot;)\n        server.ServeStdio(s)\n    }\n}\n \nfunc handleEcho(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    message, err := req.RequireString(&quot;message&quot;)\n    if err != nil {\n        return nil, err\n    }\n    return mcp.NewToolResultText(fmt.Sprintf(&quot;Echo: %s&quot;, message)), nil\n}\n","title":"Quick Example","titles":["Transport Options"]},"247":{"href":"/transports#choosing-the-right-transport","html":"\n","isPage":false,"text":"\n","title":"Choosing the Right Transport","titles":["Transport Options"]},"248":{"href":"/transports#stdio-transport","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Command-line tools and utilities</li>\n<li>Desktop application integrations</li>\n<li>Local development and testing</li>\n<li>Single-user scenarios</li>\n</ul>\n<strong>Example use cases:</strong>\n<ul>\n<li>File system tools for IDEs</li>\n<li>Local database utilities</li>\n<li>Development workflow automation</li>\n<li>System administration tools</li>\n</ul>\n","isPage":false,"text":"\nBest for:\n\nCommand-line tools and utilities\nDesktop application integrations\nLocal development and testing\nSingle-user scenarios\n\nExample use cases:\n\nFile system tools for IDEs\nLocal database utilities\nDevelopment workflow automation\nSystem administration tools\n\n","title":"STDIO Transport","titles":["Transport Options","Choosing the Right Transport"]},"249":{"href":"/transports#sse-transport","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Web applications requiring real-time updates</li>\n<li>Browser-based LLM interfaces</li>\n<li>Multi-user collaborative tools</li>\n<li>Dashboard and monitoring applications</li>\n</ul>\n<strong>Example use cases:</strong>\n<ul>\n<li>Web-based chat interfaces</li>\n<li>Real-time data visualization</li>\n<li>Collaborative document editing</li>\n<li>Live system monitoring</li>\n</ul>\n","isPage":false,"text":"\nBest for:\n\nWeb applications requiring real-time updates\nBrowser-based LLM interfaces\nMulti-user collaborative tools\nDashboard and monitoring applications\n\nExample use cases:\n\nWeb-based chat interfaces\nReal-time data visualization\nCollaborative document editing\nLive system monitoring\n\n","title":"SSE Transport","titles":["Transport Options","Choosing the Right Transport"]},"250":{"href":"/transports#streamablehttp-transport","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Traditional web services</li>\n<li>REST API integrations</li>\n<li>Load-balanced deployments</li>\n<li>Stateless interactions</li>\n</ul>\n<strong>Example use cases:</strong>\n<ul>\n<li>Microservice architectures</li>\n<li>Public API endpoints</li>\n<li>Integration with existing HTTP infrastructure</li>\n<li>Cached or rate-limited services</li>\n</ul>\n","isPage":false,"text":"\nBest for:\n\nTraditional web services\nREST API integrations\nLoad-balanced deployments\nStateless interactions\n\nExample use cases:\n\nMicroservice architectures\nPublic API endpoints\nIntegration with existing HTTP infrastructure\nCached or rate-limited services\n\n","title":"StreamableHTTP Transport","titles":["Transport Options","Choosing the Right Transport"]},"251":{"href":"/transports#in-process-transport","html":"\n<strong>Best for:</strong>\n<ul>\n<li>Embedded MCP servers</li>\n<li>Testing and development</li>\n<li>High-performance scenarios</li>\n<li>Library integrations</li>\n</ul>\n<strong>Example use cases:</strong>\n<ul>\n<li>Testing MCP implementations</li>\n<li>Embedded analytics engines</li>\n<li>High-frequency trading systems</li>\n<li>Real-time game servers</li>\n</ul>\n","isPage":false,"text":"\nBest for:\n\nEmbedded MCP servers\nTesting and development\nHigh-performance scenarios\nLibrary integrations\n\nExample use cases:\n\nTesting MCP implementations\nEmbedded analytics engines\nHigh-frequency trading systems\nReal-time game servers\n\n","title":"In-Process Transport","titles":["Transport Options","Choosing the Right Transport"]},"252":{"href":"/transports#transport-configuration","html":"\n","isPage":false,"text":"\n","title":"Transport Configuration","titles":["Transport Options"]},"253":{"href":"/transports#environment-based-selection","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> startServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MCP_TRANSPORT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getPort</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;streamablehttp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getPort</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;inprocess&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Note: In-process transport doesn&#x27;t use network ports</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // This would typically be used differently in practice</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        client </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Keep the process running</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getPort</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Getenv</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;PORT&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); port </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;:&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> +</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> port</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;:8080&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc startServer(s *server.MCPServer) error {\n    switch os.Getenv(&quot;MCP_TRANSPORT&quot;) {\n    case &quot;sse&quot;:\n        sseServer := server.NewSSEServer(s)\n        return sseServer.Start(getPort())\n    case &quot;streamablehttp&quot;:\n        httpServer := server.NewStreamableHTTPServer(s)\n        return httpServer.Start(getPort())\n    case &quot;inprocess&quot;:\n        // Note: In-process transport doesn&#x27;t use network ports\n        // This would typically be used differently in practice\n        client := client.NewInProcessClient(s)\n        defer client.Close()\n        // Keep the process running\n        select {}\n    default:\n        return server.ServeStdio(s)\n    }\n}\n \nfunc getPort() string {\n    if port := os.Getenv(&quot;PORT&quot;); port != &quot;&quot; {\n        return &quot;:&quot; + port\n    }\n    return &quot;:8080&quot;\n}\n","title":"Environment-Based Selection","titles":["Transport Options","Transport Configuration"]},"254":{"href":"/transports#multi-transport-server","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Multi-Transport&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add your tools, resources, prompts...</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    setupServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start multiple transports concurrently with proper error handling</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    errChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting STDIO server...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;STDIO server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            errChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;STDIO server failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting SSE server on :8080...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SSE server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            errChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SSE server failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting StreamableHTTP server on :8081...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    httpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStreamableHTTPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> httpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8081&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;StreamableHTTP server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        errChan </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;StreamableHTTP server failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Wait for any server to fail</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">errChan:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper function for the multi-transport example</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setupServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation - would add tools, resources, etc.</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc main() {\n    s := server.NewMCPServer(&quot;Multi-Transport&quot;, &quot;1.0.0&quot;)\n    \n    // Add your tools, resources, prompts...\n    setupServer(s)\n    \n    // Start multiple transports concurrently with proper error handling\n    errChan := make(chan error, 3)\n    \n    go func() {\n        log.Println(&quot;Starting STDIO server...&quot;)\n        if err := server.ServeStdio(s); err != nil {\n            log.Printf(&quot;STDIO server error: %v&quot;, err)\n            errChan &lt;- fmt.Errorf(&quot;STDIO server failed: %w&quot;, err)\n        }\n    }()\n    \n    go func() {\n        log.Println(&quot;Starting SSE server on :8080...&quot;)\n        sseServer := server.NewSSEServer(s)\n        if err := sseServer.Start(&quot;:8080&quot;); err != nil {\n            log.Printf(&quot;SSE server error: %v&quot;, err)\n            errChan &lt;- fmt.Errorf(&quot;SSE server failed: %w&quot;, err)\n        }\n    }()\n    \n    log.Println(&quot;Starting StreamableHTTP server on :8081...&quot;)\n    httpServer := server.NewStreamableHTTPServer(s)\n    if err := httpServer.Start(&quot;:8081&quot;); err != nil {\n        log.Printf(&quot;StreamableHTTP server error: %v&quot;, err)\n        errChan &lt;- fmt.Errorf(&quot;StreamableHTTP server failed: %w&quot;, err)\n    }\n    \n    // Wait for any server to fail\n    select {\n    case err := &lt;-errChan:\n        log.Printf(&quot;Server failed: %v&quot;, err)\n        return\n    }\n}\n \n// Helper function for the multi-transport example\nfunc setupServer(s *server.MCPServer) {\n    // Placeholder implementation - would add tools, resources, etc.\n}\n","title":"Multi-Transport Server","titles":["Transport Options","Transport Configuration"]},"255":{"href":"/transports#performance-considerations","html":"\n","isPage":false,"text":"\n","title":"Performance Considerations","titles":["Transport Options"]},"256":{"href":"/transports#latency-comparison","html":"\n<ul>\n<li><strong>In-Process</strong>: ~1μs (no serialization)</li>\n<li><strong>STDIO</strong>: ~100μs (local pipes)</li>\n<li><strong>HTTP/SSE</strong>: ~1-10ms (network + HTTP overhead)</li>\n</ul>\n","isPage":false,"text":"\n\nIn-Process: ~1μs (no serialization)\nSTDIO: ~100μs (local pipes)\nHTTP/SSE: ~1-10ms (network + HTTP overhead)\n\n","title":"Latency Comparison","titles":["Transport Options","Performance Considerations"]},"257":{"href":"/transports#throughput-comparison","html":"\n<ul>\n<li><strong>In-Process</strong>: Limited by CPU/memory</li>\n<li><strong>STDIO</strong>: Limited by pipe buffers (~64KB)</li>\n<li><strong>HTTP/SSE</strong>: Limited by network bandwidth</li>\n</ul>\n","isPage":false,"text":"\n\nIn-Process: Limited by CPU/memory\nSTDIO: Limited by pipe buffers (~64KB)\nHTTP/SSE: Limited by network bandwidth\n\n","title":"Throughput Comparison","titles":["Transport Options","Performance Considerations"]},"258":{"href":"/transports#memory-usage","html":"\n<ul>\n<li><strong>In-Process</strong>: Shared memory space</li>\n<li><strong>STDIO</strong>: Minimal overhead</li>\n<li><strong>HTTP/SSE</strong>: Connection pooling, request buffering</li>\n</ul>\n","isPage":false,"text":"\n\nIn-Process: Shared memory space\nSTDIO: Minimal overhead\nHTTP/SSE: Connection pooling, request buffering\n\n","title":"Memory Usage","titles":["Transport Options","Performance Considerations"]},"259":{"href":"/transports#security-considerations","html":"\n","isPage":false,"text":"\n","title":"Security Considerations","titles":["Transport Options"]},"260":{"href":"/transports#stdio-transport-1","html":"\n<ul>\n<li><strong>Pros</strong>: No network exposure, process isolation</li>\n<li><strong>Cons</strong>: Inherits parent process permissions</li>\n<li><strong>Best practices</strong>: Validate all inputs, use least privilege</li>\n</ul>\n","isPage":false,"text":"\n\nPros: No network exposure, process isolation\nCons: Inherits parent process permissions\nBest practices: Validate all inputs, use least privilege\n\n","title":"STDIO Transport","titles":["Transport Options","Security Considerations"]},"261":{"href":"/transports#network-transports-ssehttp","html":"\n<ul>\n<li><strong>Authentication</strong>: Implement proper auth middleware</li>\n<li><strong>Authorization</strong>: Validate permissions per request</li>\n<li><strong>Rate limiting</strong>: Prevent abuse and DoS</li>\n<li><strong>HTTPS</strong>: Always use TLS in production</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Example with security middleware</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Secure Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(authMiddleware),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolMiddleware</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rateLimitMiddleware),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\n\nAuthentication: Implement proper auth middleware\nAuthorization: Validate permissions per request\nRate limiting: Prevent abuse and DoS\nHTTPS: Always use TLS in production\n\n// Example with security middleware\ns := server.NewMCPServer(&quot;Secure Server&quot;, &quot;1.0.0&quot;,\n    server.WithToolMiddleware(authMiddleware),\n    server.WithToolMiddleware(rateLimitMiddleware),\n    server.WithRecovery(),\n)\n","title":"Network Transports (SSE/HTTP)","titles":["Transport Options","Security Considerations"]},"262":{"href":"/transports#next-steps","html":"\n<p>Explore each transport in detail:</p>\n<ul>\n<li><strong><a href=\"/transports/stdio\">STDIO Transport</a></strong> - Command-line integration</li>\n<li><strong><a href=\"/transports/sse\">SSE Transport</a></strong> - Real-time web applications</li>\n<li><strong><a href=\"/transports/http\">StreamableHTTP Transport</a></strong> - Traditional web services</li>\n<li><strong><a href=\"/transports/inprocess\">In-Process Transport</a></strong> - Embedded scenarios</li>\n</ul>","isPage":false,"text":"\nExplore each transport in detail:\n\nSTDIO Transport - Command-line integration\nSSE Transport - Real-time web applications\nStreamableHTTP Transport - Traditional web services\nIn-Process Transport - Embedded scenarios\n","title":"Next Steps","titles":["Transport Options"]},"263":{"href":"/transports/inprocess#in-process-transport","html":"</header>\n<p>In-process transport enables direct integration of MCP servers within the same process, eliminating network overhead and providing seamless integration for embedded scenarios.</p>\n","isPage":true,"text":"\nIn-process transport enables direct integration of MCP servers within the same process, eliminating network overhead and providing seamless integration for embedded scenarios.\n","title":"In-Process Transport","titles":[]},"264":{"href":"/transports/inprocess#use-cases","html":"\n<p>In-process transport is perfect for:</p>\n<ul>\n<li><strong>Embedded servers</strong>: MCP functionality within existing applications</li>\n<li><strong>Testing and development</strong>: Fast, reliable testing without network overhead</li>\n<li><strong>Library integrations</strong>: MCP as a library component</li>\n<li><strong>Single-process architectures</strong>: Monolithic applications with MCP capabilities</li>\n</ul>\n<strong>Example applications:</strong>\n<ul>\n<li>Desktop applications with plugin architectures</li>\n<li>Testing frameworks</li>\n<li>Embedded analytics engines</li>\n<li>Game engines with AI tool integration</li>\n</ul>\n","isPage":false,"text":"\nIn-process transport is perfect for:\n\nEmbedded servers: MCP functionality within existing applications\nTesting and development: Fast, reliable testing without network overhead\nLibrary integrations: MCP as a library component\nSingle-process architectures: Monolithic applications with MCP capabilities\n\nExample applications:\n\nDesktop applications with plugin architectures\nTesting frameworks\nEmbedded analytics engines\nGame engines with AI tool integration\n\n","title":"Use Cases","titles":["In-Process Transport"]},"265":{"href":"/transports/inprocess#implementation","html":"\n","isPage":false,"text":"\n","title":"Implementation","titles":["In-Process Transport"]},"266":{"href":"/transports/inprocess#basic-in-process-server","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Calculator Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add calculator tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Perform basic mathematical calculations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Enum</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;The operation to perform&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;First number&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Second number&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleCalculate,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create in-process client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpClient, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ProtocolVersion: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2024-11-05&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Capabilities: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Tools: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolsCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ClientInfo: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Implementation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;test-client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Version: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use the calculator</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:         </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:         </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract text from the first content item</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Content) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AsTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Content[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]); ok {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, textContent.Text)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCalculate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    operation </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    y </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetFloat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">float64</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> operation {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;subtract&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;multiply&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;divide&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;division by zero&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> x </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> y</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown operation: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, operation)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%.2f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n    &quot;github.com/mark3labs/mcp-go/client&quot;\n)\n \nfunc main() {\n    // Create server\n    s := server.NewMCPServer(&quot;Calculator Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n    )\n \n    // Add calculator tool\n    s.AddTool(\n        mcp.NewTool(&quot;calculate&quot;,\n            mcp.WithDescription(&quot;Perform basic mathematical calculations&quot;),\n            mcp.WithString(&quot;operation&quot;, \n                mcp.Required(),\n                mcp.Enum(&quot;add&quot;, &quot;subtract&quot;, &quot;multiply&quot;, &quot;divide&quot;),\n                mcp.Description(&quot;The operation to perform&quot;),\n            ),\n            mcp.WithNumber(&quot;x&quot;, mcp.Required(), mcp.Description(&quot;First number&quot;)),\n            mcp.WithNumber(&quot;y&quot;, mcp.Required(), mcp.Description(&quot;Second number&quot;)),\n        ),\n        handleCalculate,\n    )\n \n    // Create in-process client\n    mcpClient, err := client.NewInProcessClient(s)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer mcpClient.Close()\n \n    ctx := context.Background()\n \n    // Initialize\n    _, err = mcpClient.Initialize(ctx, mcp.InitializeRequest{\n        Params: mcp.InitializeRequestParams{\n            ProtocolVersion: &quot;2024-11-05&quot;,\n            Capabilities: mcp.ClientCapabilities{\n                Tools: &amp;mcp.ToolsCapability{},\n            },\n            ClientInfo: mcp.Implementation{\n                Name:    &quot;test-client&quot;,\n                Version: &quot;1.0.0&quot;,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // Use the calculator\n    result, err := mcpClient.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolParams{\n            Name: &quot;calculate&quot;,\n            Arguments: map[string]interface{}{\n                &quot;operation&quot;: &quot;add&quot;,\n                &quot;x&quot;:         10.0,\n                &quot;y&quot;:         5.0,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // Extract text from the first content item\n    if len(result.Content) &gt; 0 {\n        if textContent, ok := mcp.AsTextContent(result.Content[0]); ok {\n            fmt.Printf(&quot;Result: %s\\n&quot;, textContent.Text)\n        }\n    }\n}\n \nfunc handleCalculate(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    operation := req.GetString(&quot;operation&quot;, &quot;&quot;)\n    x := req.GetFloat(&quot;x&quot;, 0)\n    y := req.GetFloat(&quot;y&quot;, 0)\n \n    var result float64\n    switch operation {\n    case &quot;add&quot;:\n        result = x + y\n    case &quot;subtract&quot;:\n        result = x - y\n    case &quot;multiply&quot;:\n        result = x * y\n    case &quot;divide&quot;:\n        if y == 0 {\n            return mcp.NewToolResultError(&quot;division by zero&quot;), nil\n        }\n        result = x / y\n    default:\n        return nil, fmt.Errorf(&quot;unknown operation: %s&quot;, operation)\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(&quot;%.2f&quot;, result)), nil\n}\n","title":"Basic In-Process Server","titles":["In-Process Transport","Implementation"]},"267":{"href":"/transports/inprocess#embedded-application-integration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Embedded MCP server in a larger application</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Application</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpClient </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">client</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InProcessClient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    config    </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Config</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewApplication</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Config</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Application</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    app </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Application</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        config: config,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create embedded MCP server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    app.mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Embedded Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add application-specific tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    app.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">addApplicationTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create in-process client for internal use</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    app.mcpClient, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewInProcessClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(app.mcpServer)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        panic</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    AppName </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    Debug   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">app </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Application</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">addApplicationTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Application status tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    app.mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;get_app_status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Get current application status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;app_name&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;debug&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%t</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;status&quot;:&quot;running&quot;}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                app.config.AppName, app.config.Debug)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Configuration tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    app.mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;update_config&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Update application configuration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;key&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            key </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;key&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Update configuration based on key</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> key {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;debug&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                app.config.Debug </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;true&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;app_name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                app.config.AppName </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> value</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;unknown config key: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, key)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Updated </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> to </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, key, value)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">app </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Application</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ProcessWithMCP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">operation</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use MCP tools internally for processing</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app.mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;calculate&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: operation,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:         </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;y&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:         </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5.0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract text from the first content item</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Content) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent, ok </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AsTextContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.Content[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]); ok {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> textContent.Text, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;no result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Usage example</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    config </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Config</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        AppName: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;My App&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Debug:   </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    app </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> NewApplication</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(config)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize the embedded MCP client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app.mcpClient.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ProtocolVersion: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2024-11-05&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Capabilities: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Tools: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolsCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ClientInfo: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Implementation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;embedded-client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Version: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Use MCP functionality within the application</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> app.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ProcessWithMCP</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;add&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Application result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// Embedded MCP server in a larger application\ntype Application struct {\n    mcpServer *server.MCPServer\n    mcpClient *client.InProcessClient\n    config    *Config\n}\n \nfunc NewApplication(config *Config) *Application {\n    app := &amp;Application{\n        config: config,\n    }\n \n    // Create embedded MCP server\n    app.mcpServer = server.NewMCPServer(&quot;Embedded Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n    )\n \n    // Add application-specific tools\n    app.addApplicationTools()\n \n    // Create in-process client for internal use\n    var err error\n    app.mcpClient, err = client.NewInProcessClient(app.mcpServer)\n    if err != nil {\n        panic(err)\n    }\n \n    return app\n}\n \ntype Config struct {\n    AppName string\n    Debug   bool\n}\n \nfunc (app *Application) addApplicationTools() {\n    // Application status tool\n    app.mcpServer.AddTool(\n        mcp.NewTool(&quot;get_app_status&quot;,\n            mcp.WithDescription(&quot;Get current application status&quot;),\n        ),\n        func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n            return mcp.NewToolResultText(fmt.Sprintf(`{&quot;app_name&quot;:&quot;%s&quot;,&quot;debug&quot;:%t,&quot;status&quot;:&quot;running&quot;}`, \n                app.config.AppName, app.config.Debug)), nil\n        },\n    )\n \n    // Configuration tool\n    app.mcpServer.AddTool(\n        mcp.NewTool(&quot;update_config&quot;,\n            mcp.WithDescription(&quot;Update application configuration&quot;),\n            mcp.WithString(&quot;key&quot;, mcp.Required()),\n            mcp.WithString(&quot;value&quot;, mcp.Required()),\n        ),\n        func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n            key := req.GetString(&quot;key&quot;, &quot;&quot;)\n            value := req.GetString(&quot;value&quot;, &quot;&quot;)\n \n            // Update configuration based on key\n            switch key {\n            case &quot;debug&quot;:\n                app.config.Debug = value == &quot;true&quot;\n            case &quot;app_name&quot;:\n                app.config.AppName = value\n            default:\n                return mcp.NewToolResultError(fmt.Sprintf(&quot;unknown config key: %s&quot;, key)), nil\n            }\n \n            return mcp.NewToolResultText(fmt.Sprintf(&quot;Updated %s to %s&quot;, key, value)), nil\n        },\n    )\n}\n \nfunc (app *Application) ProcessWithMCP(ctx context.Context, operation string) (interface{}, error) {\n    // Use MCP tools internally for processing\n    result, err := app.mcpClient.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolParams{\n            Name: &quot;calculate&quot;,\n            Arguments: map[string]interface{}{\n                &quot;operation&quot;: operation,\n                &quot;x&quot;:         10.0,\n                &quot;y&quot;:         5.0,\n            },\n        },\n    })\n    if err != nil {\n        return nil, err\n    }\n \n    // Extract text from the first content item\n    if len(result.Content) &gt; 0 {\n        if textContent, ok := mcp.AsTextContent(result.Content[0]); ok {\n            return textContent.Text, nil\n        }\n    }\n    \n    return &quot;no result&quot;, nil\n}\n \n// Usage example\nfunc main() {\n    config := &amp;Config{\n        AppName: &quot;My App&quot;,\n        Debug:   true,\n    }\n \n    app := NewApplication(config)\n    ctx := context.Background()\n \n    // Initialize the embedded MCP client\n    _, err := app.mcpClient.Initialize(ctx, mcp.InitializeRequest{\n        Params: mcp.InitializeRequestParams{\n            ProtocolVersion: &quot;2024-11-05&quot;,\n            Capabilities: mcp.ClientCapabilities{\n                Tools: &amp;mcp.ToolsCapability{},\n            },\n            ClientInfo: mcp.Implementation{\n                Name:    &quot;embedded-client&quot;,\n                Version: &quot;1.0.0&quot;,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // Use MCP functionality within the application\n    result, err := app.ProcessWithMCP(ctx, &quot;add&quot;)\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    fmt.Printf(&quot;Application result: %v\\n&quot;, result)\n}\n","title":"Embedded Application Integration","titles":["In-Process Transport","Implementation"]},"268":{"href":"/transports/inprocess#next-steps","html":"\n<ul>\n<li><strong><a href=\"/clients\">Client Development</a></strong> - Build MCP clients for all transports</li>\n<li><strong><a href=\"/transports/http\">HTTP Transport</a></strong> - Learn about web-based scenarios</li>\n<li><strong><a href=\"/servers/advanced\">Server Advanced Features</a></strong> - Explore production-ready features</li>\n</ul>","isPage":false,"text":"\n\nClient Development - Build MCP clients for all transports\nHTTP Transport - Learn about web-based scenarios\nServer Advanced Features - Explore production-ready features\n","title":"Next Steps","titles":["In-Process Transport"]},"269":{"href":"/transports/sse#sse-transport","html":"</header>\n<p>Server-Sent Events (SSE) transport enables real-time, web-friendly communication between MCP clients and servers. Perfect for web applications that need live updates and multi-client support.</p>\n","isPage":true,"text":"\nServer-Sent Events (SSE) transport enables real-time, web-friendly communication between MCP clients and servers. Perfect for web applications that need live updates and multi-client support.\n","title":"SSE Transport","titles":[]},"270":{"href":"/transports/sse#use-cases","html":"\n<p>SSE transport is ideal for:</p>\n<ul>\n<li><strong>Web applications</strong>: Browser-based LLM interfaces</li>\n<li><strong>Real-time dashboards</strong>: Live data monitoring and visualization</li>\n<li><strong>Collaborative tools</strong>: Multi-user environments with shared state</li>\n<li><strong>Streaming responses</strong>: Long-running operations with progress updates</li>\n<li><strong>Event-driven systems</strong>: Applications that need server-initiated communication</li>\n</ul>\n<strong>Example applications:</strong>\n<ul>\n<li>Web-based chat interfaces with LLMs</li>\n<li>Real-time analytics dashboards</li>\n<li>Collaborative document editing</li>\n<li>Live system monitoring tools</li>\n<li>Streaming data processing interfaces</li>\n</ul>\n","isPage":false,"text":"\nSSE transport is ideal for:\n\nWeb applications: Browser-based LLM interfaces\nReal-time dashboards: Live data monitoring and visualization\nCollaborative tools: Multi-user environments with shared state\nStreaming responses: Long-running operations with progress updates\nEvent-driven systems: Applications that need server-initiated communication\n\nExample applications:\n\nWeb-based chat interfaces with LLMs\nReal-time analytics dashboards\nCollaborative document editing\nLive system monitoring tools\nStreaming data processing interfaces\n\n","title":"Use Cases","titles":["SSE Transport"]},"271":{"href":"/transports/sse#implementation","html":"\n","isPage":false,"text":"\n","title":"Implementation","titles":["SSE Transport"]},"272":{"href":"/transports/sse#basic-sse-server","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SSE Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add real-time tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;stream_data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Stream data with real-time updates&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;source&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;count&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleStreamData,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;monitor_system&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Monitor system metrics in real-time&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;duration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultNumber</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">60</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleSystemMonitor,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add dynamic resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;metrics://current&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;Current System Metrics&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Real-time system metrics&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleCurrentMetrics,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start SSE server</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting SSE server on :8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleStreamData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    source </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;source&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    count </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;count&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get server from context for notifications</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServerFromContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Stream data with progress updates</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> results []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> count; i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Check for cancellation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Simulate data processing</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        data </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> generateData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(source, i)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        results </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(results, data)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Send progress notification</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendNotificationToClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;notifications/progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;progress&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: i </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;total&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    count,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Processed </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">/</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> items from </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, i</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, count, source),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to send notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">100</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Millisecond)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;source&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;results&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;count&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        source, results, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(results))), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper functions for the examples</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> generateData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">source</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">index</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> int</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{} {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;source&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: source,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;index&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  index,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:  fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;data_</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, index),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleSystemMonitor</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    duration </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetInt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;duration&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">60</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServerFromContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Monitor system for specified duration</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ticker </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTicker</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ticker.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stop</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    timeout </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">After</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(duration) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> metrics []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">timeout:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;duration&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;metrics&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;samples&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                duration, metrics, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(metrics))), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ticker.C:</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Collect current metrics</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            currentMetrics </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> collectSystemMetrics</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            metrics </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> append</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(metrics, currentMetrics)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">            // Send real-time update</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendNotificationToClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;system_metrics&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, currentMetrics)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to send system metrics notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> collectSystemMetrics</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{} {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;cpu&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:    </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">50.5</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;memory&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">75.2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;disk&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:   </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30.1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleCurrentMetrics</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    metrics </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> collectSystemMetrics</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            MIMEType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;application/json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text:     fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;cpu&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%.1f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;memory&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%.1f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;disk&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%.1f</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, metrics[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;cpu&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">], metrics[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;memory&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">], metrics[</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;disk&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    s := server.NewMCPServer(&quot;SSE Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n        server.WithResourceCapabilities(true, true),\n    )\n \n    // Add real-time tools\n    s.AddTool(\n        mcp.NewTool(&quot;stream_data&quot;,\n            mcp.WithDescription(&quot;Stream data with real-time updates&quot;),\n            mcp.WithString(&quot;source&quot;, mcp.Required()),\n            mcp.WithNumber(&quot;count&quot;, mcp.DefaultNumber(10)),\n        ),\n        handleStreamData,\n    )\n \n    s.AddTool(\n        mcp.NewTool(&quot;monitor_system&quot;,\n            mcp.WithDescription(&quot;Monitor system metrics in real-time&quot;),\n            mcp.WithNumber(&quot;duration&quot;, mcp.DefaultNumber(60)),\n        ),\n        handleSystemMonitor,\n    )\n \n    // Add dynamic resources\n    s.AddResource(\n        mcp.NewResource(\n            &quot;metrics://current&quot;,\n            &quot;Current System Metrics&quot;,\n            mcp.WithResourceDescription(&quot;Real-time system metrics&quot;),\n            mcp.WithMIMEType(&quot;application/json&quot;),\n        ),\n        handleCurrentMetrics,\n    )\n \n    // Start SSE server\n    log.Println(&quot;Starting SSE server on :8080&quot;)\n    sseServer := server.NewSSEServer(s)\n    if err := sseServer.Start(&quot;:8080&quot;); err != nil {\n        log.Fatal(err)\n    }\n}\n \nfunc handleStreamData(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    source := req.GetString(&quot;source&quot;, &quot;&quot;)\n    count := req.GetInt(&quot;count&quot;, 10)\n \n    // Get server from context for notifications\n    mcpServer := server.ServerFromContext(ctx)\n \n    // Stream data with progress updates\n    var results []map[string]interface{}\n    for i := 0; i &lt; count; i++ {\n        // Check for cancellation\n        select {\n        case &lt;-ctx.Done():\n            return nil, ctx.Err()\n        default:\n        }\n \n        // Simulate data processing\n        data := generateData(source, i)\n        results = append(results, data)\n \n        // Send progress notification\n        if mcpServer != nil {\n            err := mcpServer.SendNotificationToClient(ctx, &quot;notifications/progress&quot;, map[string]interface{}{\n                &quot;progress&quot;: i + 1,\n                &quot;total&quot;:    count,\n                &quot;message&quot;:  fmt.Sprintf(&quot;Processed %d/%d items from %s&quot;, i+1, count, source),\n            })\n            if err != nil {\n                log.Printf(&quot;Failed to send notification: %v&quot;, err)\n            }\n        }\n \n        time.Sleep(100 * time.Millisecond)\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(`{&quot;source&quot;:&quot;%s&quot;,&quot;results&quot;:%v,&quot;count&quot;:%d}`, \n        source, results, len(results))), nil\n}\n \n// Helper functions for the examples\nfunc generateData(source string, index int) map[string]interface{} {\n    return map[string]interface{}{\n        &quot;source&quot;: source,\n        &quot;index&quot;:  index,\n        &quot;value&quot;:  fmt.Sprintf(&quot;data_%d&quot;, index),\n    }\n}\n \nfunc handleSystemMonitor(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    duration := req.GetInt(&quot;duration&quot;, 60)\n    \n    mcpServer := server.ServerFromContext(ctx)\n \n    // Monitor system for specified duration\n    ticker := time.NewTicker(5 * time.Second)\n    defer ticker.Stop()\n \n    timeout := time.After(time.Duration(duration) * time.Second)\n    var metrics []map[string]interface{}\n \n    for {\n        select {\n        case &lt;-ctx.Done():\n            return nil, ctx.Err()\n        case &lt;-timeout:\n            return mcp.NewToolResultText(fmt.Sprintf(`{&quot;duration&quot;:%d,&quot;metrics&quot;:%v,&quot;samples&quot;:%d}`,\n                duration, metrics, len(metrics))), nil\n        case &lt;-ticker.C:\n            // Collect current metrics\n            currentMetrics := collectSystemMetrics()\n            metrics = append(metrics, currentMetrics)\n \n            // Send real-time update\n            if mcpServer != nil {\n                err := mcpServer.SendNotificationToClient(ctx, &quot;system_metrics&quot;, currentMetrics)\n                if err != nil {\n                    log.Printf(&quot;Failed to send system metrics notification: %v&quot;, err)\n                }\n            }\n        }\n    }\n}\n \nfunc collectSystemMetrics() map[string]interface{} {\n    // Placeholder implementation\n    return map[string]interface{}{\n        &quot;cpu&quot;:    50.5,\n        &quot;memory&quot;: 75.2,\n        &quot;disk&quot;:   30.1,\n    }\n}\n \nfunc handleCurrentMetrics(ctx context.Context, req mcp.ReadResourceRequest) ([]mcp.ResourceContents, error) {\n    metrics := collectSystemMetrics()\n    return []mcp.ResourceContents{\n        mcp.TextResourceContents{\n            URI:      req.Params.URI,\n            MIMEType: &quot;application/json&quot;,\n            Text:     fmt.Sprintf(`{&quot;cpu&quot;:%.1f,&quot;memory&quot;:%.1f,&quot;disk&quot;:%.1f}`, metrics[&quot;cpu&quot;], metrics[&quot;memory&quot;], metrics[&quot;disk&quot;]),\n        },\n    }, nil\n}\n","title":"Basic SSE Server","titles":["SSE Transport","Implementation"]},"273":{"href":"/transports/sse#advanced-sse-configuration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Advanced SSE Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithLogging</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add collaborative tools</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addCollaborativeTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addRealTimeResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting advanced SSE server on :8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithStaticBasePath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithKeepAliveInterval</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithBaseURL</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sseServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Start</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper functions for the advanced example</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addRealTimeResources</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation - would add real-time resources</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addCollaborativeTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Shared document editing</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;edit_document&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Edit a shared document&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;doc_id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithObject</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleDocumentEdit,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Real-time chat</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;send_message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Send a message to all connected clients&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;channel&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;general&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleSendMessage,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Live data updates</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;subscribe_updates&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Subscribe to real-time data updates&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;topic&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithArray</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;filters&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Optional filters&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleSubscribeUpdates,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc main() {\n    s := server.NewMCPServer(&quot;Advanced SSE Server&quot;, &quot;1.0.0&quot;,\n        server.WithResourceCapabilities(true, true),\n        server.WithPromptCapabilities(true),\n        server.WithToolCapabilities(true),\n        server.WithLogging(),\n    )\n \n    // Add collaborative tools\n    addCollaborativeTools(s)\n    addRealTimeResources(s)\n \n    log.Println(&quot;Starting advanced SSE server on :8080&quot;)\n    sseServer := server.NewSSEServer(s,\n        server.WithStaticBasePath(&quot;/mcp&quot;),\n        server.WithKeepAliveInterval(30*time.Second),\n        server.WithBaseURL(&quot;http://localhost:8080&quot;),\n    )\n    \n    if err := sseServer.Start(&quot;:8080&quot;); err != nil {\n        log.Fatal(err)\n    }\n}\n \n// Helper functions for the advanced example\nfunc addRealTimeResources(s *server.MCPServer) {\n    // Placeholder implementation - would add real-time resources\n}\n \nfunc addCollaborativeTools(s *server.MCPServer) {\n    // Shared document editing\n    s.AddTool(\n        mcp.NewTool(&quot;edit_document&quot;,\n            mcp.WithDescription(&quot;Edit a shared document&quot;),\n            mcp.WithString(&quot;doc_id&quot;, mcp.Required()),\n            mcp.WithString(&quot;operation&quot;, mcp.Required()),\n            mcp.WithObject(&quot;data&quot;, mcp.Required()),\n        ),\n        handleDocumentEdit,\n    )\n \n    // Real-time chat\n    s.AddTool(\n        mcp.NewTool(&quot;send_message&quot;,\n            mcp.WithDescription(&quot;Send a message to all connected clients&quot;),\n            mcp.WithString(&quot;message&quot;, mcp.Required()),\n            mcp.WithString(&quot;channel&quot;, mcp.DefaultString(&quot;general&quot;)),\n        ),\n        handleSendMessage,\n    )\n \n    // Live data updates\n    s.AddTool(\n        mcp.NewTool(&quot;subscribe_updates&quot;,\n            mcp.WithDescription(&quot;Subscribe to real-time data updates&quot;),\n            mcp.WithString(&quot;topic&quot;, mcp.Required()),\n            mcp.WithArray(&quot;filters&quot;, mcp.Description(&quot;Optional filters&quot;)),\n        ),\n        handleSubscribeUpdates,\n    )\n}\n","title":"Advanced SSE Configuration","titles":["SSE Transport","Implementation"]},"274":{"href":"/transports/sse#configuration","html":"\n","isPage":false,"text":"\n","title":"Configuration","titles":["SSE Transport"]},"275":{"href":"/transports/sse#sse-server-options","html":"\n<p>The SSE server can be configured with various options:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sseServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewSSEServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Set the base path for SSE endpoints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithStaticBasePath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/api/mcp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Configure keep-alive interval</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithKeepAliveInterval</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Set base URL for client connections</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithBaseURL</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8080&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Configure SSE and message endpoints</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithSSEEndpoint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/sse&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMessageEndpoint</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add context function for request processing</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithSSEContextFunc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">r</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Add custom context values from headers</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ctx</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<strong>Resulting endpoints:</strong>\n<ul>\n<li>SSE stream: <code>http://localhost:8080/api/mcp/sse</code></li>\n<li>Message endpoint: <code>http://localhost:8080/api/mcp/message</code></li>\n</ul>\n","isPage":false,"text":"\nThe SSE server can be configured with various options:\nsseServer := server.NewSSEServer(s,\n    // Set the base path for SSE endpoints\n    server.WithStaticBasePath(&quot;/api/mcp&quot;),\n    \n    // Configure keep-alive interval\n    server.WithKeepAliveInterval(30*time.Second),\n    \n    // Set base URL for client connections\n    server.WithBaseURL(&quot;http://localhost:8080&quot;),\n    \n    // Configure SSE and message endpoints\n    server.WithSSEEndpoint(&quot;/sse&quot;),\n    server.WithMessageEndpoint(&quot;/message&quot;),\n    \n    // Add context function for request processing\n    server.WithSSEContextFunc(func(ctx context.Context, r *http.Request) context.Context {\n        // Add custom context values from headers\n        return ctx\n    }),\n)\nResulting endpoints:\n\nSSE stream: http://localhost:8080/api/mcp/sse\nMessage endpoint: http://localhost:8080/api/mcp/message\n\n","title":"SSE Server Options","titles":["SSE Transport","Configuration"]},"276":{"href":"/transports/sse#real-time-notifications","html":"\n<p>SSE transport enables real-time server-to-client communication through notifications. Use the server context to send notifications:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleRealtimeTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Get the MCP server from context</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServerFromContext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Send a notification to the client</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendNotificationToClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;custom_event&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Real-time update&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;timestamp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Now</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">().</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Unix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Failed to send notification: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;status&quot;:&quot;notification_sent&quot;}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nSSE transport enables real-time server-to-client communication through notifications. Use the server context to send notifications:\nfunc handleRealtimeTool(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Get the MCP server from context\n    mcpServer := server.ServerFromContext(ctx)\n    \n    // Send a notification to the client\n    if mcpServer != nil {\n        err := mcpServer.SendNotificationToClient(ctx, &quot;custom_event&quot;, map[string]interface{}{\n            &quot;message&quot;: &quot;Real-time update&quot;,\n            &quot;timestamp&quot;: time.Now().Unix(),\n        })\n        if err != nil {\n            log.Printf(&quot;Failed to send notification: %v&quot;, err)\n        }\n    }\n    \n    return mcp.NewToolResultText(`{&quot;status&quot;:&quot;notification_sent&quot;}`), nil\n}\n","title":"Real-Time Notifications","titles":["SSE Transport"]},"277":{"href":"/transports/sse#session-management","html":"\n<p>The SSE server automatically handles session management. You can send events to specific sessions using the server&#x27;s notification methods:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Send notification to current client session</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">mcpServer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SendNotificationToClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;progress_update&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, progressData)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Send notification to all connected clients (if supported)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Note: Check the server implementation for broadcast capabilities</span></span></code></pre>\n","isPage":false,"text":"\nThe SSE server automatically handles session management. You can send events to specific sessions using the server&#x27;s notification methods:\n// Send notification to current client session\nmcpServer.SendNotificationToClient(ctx, &quot;progress_update&quot;, progressData)\n \n// Send notification to all connected clients (if supported)\n// Note: Check the server implementation for broadcast capabilities\n","title":"Session Management","titles":["SSE Transport","Real-Time Notifications"]},"278":{"href":"/transports/sse#next-steps","html":"\n<ul>\n<li><strong><a href=\"/transports/http\">HTTP Transport</a></strong> - Learn about traditional web service patterns</li>\n<li><strong><a href=\"/transports/inprocess\">In-Process Transport</a></strong> - Explore embedded scenarios</li>\n<li><strong><a href=\"/clients\">Client Development</a></strong> - Build MCP clients for different transports</li>\n</ul>","isPage":false,"text":"\n\nHTTP Transport - Learn about traditional web service patterns\nIn-Process Transport - Explore embedded scenarios\nClient Development - Build MCP clients for different transports\n","title":"Next Steps","titles":["SSE Transport"]},"279":{"href":"/transports/stdio#stdio-transport","html":"</header>\n<p>STDIO (Standard Input/Output) transport is the most common MCP transport method, perfect for command-line tools, desktop applications, and local integrations.</p>\n","isPage":true,"text":"\nSTDIO (Standard Input/Output) transport is the most common MCP transport method, perfect for command-line tools, desktop applications, and local integrations.\n","title":"STDIO Transport","titles":[]},"280":{"href":"/transports/stdio#use-cases","html":"\n<p>STDIO transport excels in scenarios where:</p>\n<ul>\n<li><strong>Command-line tools</strong>: CLI utilities that LLMs can invoke</li>\n<li><strong>Desktop applications</strong>: IDE plugins, text editors, local tools</li>\n<li><strong>Subprocess communication</strong>: Parent processes managing MCP servers</li>\n<li><strong>Local development</strong>: Testing and debugging MCP implementations</li>\n<li><strong>Single-user scenarios</strong>: Personal productivity tools</li>\n</ul>\n<strong>Example applications:</strong>\n<ul>\n<li>File system browsers for IDEs</li>\n<li>Local database query tools</li>\n<li>Git repository analyzers</li>\n<li>System monitoring utilities</li>\n<li>Development workflow automation</li>\n</ul>\n","isPage":false,"text":"\nSTDIO transport excels in scenarios where:\n\nCommand-line tools: CLI utilities that LLMs can invoke\nDesktop applications: IDE plugins, text editors, local tools\nSubprocess communication: Parent processes managing MCP servers\nLocal development: Testing and debugging MCP implementations\nSingle-user scenarios: Personal productivity tools\n\nExample applications:\n\nFile system browsers for IDEs\nLocal database query tools\nGit repository analyzers\nSystem monitoring utilities\nDevelopment workflow automation\n\n","title":"Use Cases","titles":["STDIO Transport"]},"281":{"href":"/transports/stdio#implementation","html":"\n","isPage":false,"text":"\n","title":"Implementation","titles":["STDIO Transport"]},"282":{"href":"/transports/stdio#basic-stdio-server","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">os</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">path/filepath</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;File Tools&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add file listing tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;list_files&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;List files in a directory&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Directory path to list&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithBoolean</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;recursive&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">DefaultBool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Description</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;List files recursively&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleListFiles,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add file content resource</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewResource</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;file://{path}&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;File Content&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Read file contents&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;text/plain&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        handleFileContent,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start STDIO server</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(os.Stderr, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleListFiles</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    path, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    recursive, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireBool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;recursive&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Security: validate path</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isValidPath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid path: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, path)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    files, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listFiles</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path, recursive)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to list files: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`{&quot;path&quot;:&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;,&quot;files&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;count&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">,&quot;recursive&quot;:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%t</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        path, files, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(files), recursive)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleFileContent</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ReadResourceRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract path from URI: &quot;file:///path/to/file&quot; -&gt; &quot;/path/to/file&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    path </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractPathFromURI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(req.Params.URI)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isValidPath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid path: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, path)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ReadFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;failed to read file: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">        mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">TextResourceContents</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            URI:      req.Params.URI,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            MIMEType: </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">detectMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Text:     </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(content),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> isValidPath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">path</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Clean the path to resolve any . or .. components</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    clean </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filepath.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Clean</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Check for directory traversal patterns</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Contains</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(clean, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;..&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // For absolute paths, ensure they&#x27;re within a safe base directory</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filepath.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsAbs</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(clean) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Define safe base directories (adjust as needed for your use case)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        safeBaseDirs </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;/tmp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;/var/tmp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;/home&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;/Users&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// macOS</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Check if the path starts with any safe base directory</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, baseDir </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> safeBaseDirs {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HasPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(clean, baseDir) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">                return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // For relative paths, ensure they don&#x27;t escape the current directory</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HasPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(clean, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;..&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper functions for the examples</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> listFiles</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">path</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">recursive</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) ([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> []</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;file1.txt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;file2.txt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> extractPathFromURI</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">uri</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Extract path from URI: &quot;file:///path/to/file&quot; -&gt; &quot;/path/to/file&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">HasPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;file://&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> strings.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">TrimPrefix</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(uri, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;file://&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> uri</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> detectMIMEType</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">path</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Simple MIME type detection based on extension</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ext </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> filepath.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Ext</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    switch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ext {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;.txt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;text/plain&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;.json&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;application/json&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;.html&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;text/html&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;application/octet-stream&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;os&quot;\n    &quot;path/filepath&quot;\n    &quot;strings&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    s := server.NewMCPServer(&quot;File Tools&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n        server.WithResourceCapabilities(true, true),\n    )\n \n    // Add file listing tool\n    s.AddTool(\n        mcp.NewTool(&quot;list_files&quot;,\n            mcp.WithDescription(&quot;List files in a directory&quot;),\n            mcp.WithString(&quot;path&quot;, \n                mcp.Required(),\n                mcp.Description(&quot;Directory path to list&quot;),\n            ),\n            mcp.WithBoolean(&quot;recursive&quot;,\n                mcp.DefaultBool(false),\n                mcp.Description(&quot;List files recursively&quot;),\n            ),\n        ),\n        handleListFiles,\n    )\n \n    // Add file content resource\n    s.AddResource(\n        mcp.NewResource(\n            &quot;file://{path}&quot;,\n            &quot;File Content&quot;,\n            mcp.WithResourceDescription(&quot;Read file contents&quot;),\n            mcp.WithMIMEType(&quot;text/plain&quot;),\n        ),\n        handleFileContent,\n    )\n \n    // Start STDIO server\n    if err := server.ServeStdio(s); err != nil {\n        fmt.Fprintf(os.Stderr, &quot;Server error: %v\\n&quot;, err)\n        os.Exit(1)\n    }\n}\n \nfunc handleListFiles(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    path, err := req.RequireString(&quot;path&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n    \n    recursive, err := req.RequireBool(&quot;recursive&quot;)\n    if err != nil {\n        return mcp.NewToolResultError(err.Error()), nil\n    }\n \n    // Security: validate path\n    if !isValidPath(path) {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;invalid path: %s&quot;, path)), nil\n    }\n \n    files, err := listFiles(path, recursive)\n    if err != nil {\n        return mcp.NewToolResultError(fmt.Sprintf(&quot;failed to list files: %v&quot;, err)), nil\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(`{&quot;path&quot;:&quot;%s&quot;,&quot;files&quot;:%v,&quot;count&quot;:%d,&quot;recursive&quot;:%t}`, \n        path, files, len(files), recursive)), nil\n}\n \nfunc handleFileContent(ctx context.Context, req mcp.ReadResourceRequest) ([]mcp.ResourceContents, error) {\n    // Extract path from URI: &quot;file:///path/to/file&quot; -&gt; &quot;/path/to/file&quot;\n    path := extractPathFromURI(req.Params.URI)\n    \n    if !isValidPath(path) {\n        return nil, fmt.Errorf(&quot;invalid path: %s&quot;, path)\n    }\n \n    content, err := os.ReadFile(path)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;failed to read file: %w&quot;, err)\n    }\n \n    return []mcp.ResourceContents{\n        mcp.TextResourceContents{\n            URI:      req.Params.URI,\n            MIMEType: detectMIMEType(path),\n            Text:     string(content),\n        },\n    }, nil\n}\n \nfunc isValidPath(path string) bool {\n    // Clean the path to resolve any . or .. components\n    clean := filepath.Clean(path)\n    \n    // Check for directory traversal patterns\n    if strings.Contains(clean, &quot;..&quot;) {\n        return false\n    }\n    \n    // For absolute paths, ensure they&#x27;re within a safe base directory\n    if filepath.IsAbs(clean) {\n        // Define safe base directories (adjust as needed for your use case)\n        safeBaseDirs := []string{\n            &quot;/tmp&quot;,\n            &quot;/var/tmp&quot;, \n            &quot;/home&quot;,\n            &quot;/Users&quot;, // macOS\n        }\n        \n        // Check if the path starts with any safe base directory\n        for _, baseDir := range safeBaseDirs {\n            if strings.HasPrefix(clean, baseDir) {\n                return true\n            }\n        }\n        return false\n    }\n    \n    // For relative paths, ensure they don&#x27;t escape the current directory\n    return !strings.HasPrefix(clean, &quot;..&quot;)\n}\n \n// Helper functions for the examples\nfunc listFiles(path string, recursive bool) ([]string, error) {\n    // Placeholder implementation\n    return []string{&quot;file1.txt&quot;, &quot;file2.txt&quot;}, nil\n}\n \nfunc extractPathFromURI(uri string) string {\n    // Extract path from URI: &quot;file:///path/to/file&quot; -&gt; &quot;/path/to/file&quot;\n    if strings.HasPrefix(uri, &quot;file://&quot;) {\n        return strings.TrimPrefix(uri, &quot;file://&quot;)\n    }\n    return uri\n}\n \nfunc detectMIMEType(path string) string {\n    // Simple MIME type detection based on extension\n    ext := filepath.Ext(path)\n    switch ext {\n    case &quot;.txt&quot;:\n        return &quot;text/plain&quot;\n    case &quot;.json&quot;:\n        return &quot;application/json&quot;\n    case &quot;.html&quot;:\n        return &quot;text/html&quot;\n    default:\n        return &quot;application/octet-stream&quot;\n    }\n}\n","title":"Basic STDIO Server","titles":["STDIO Transport","Implementation"]},"283":{"href":"/transports/stdio#advanced-stdio-server","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">fmt</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">os</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">os/signal</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">syscall</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/mcp</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/server</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Advanced CLI Tool&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithResourceCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithPromptCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithLogging</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add comprehensive tools</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addSystemTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addFileTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addGitTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    addDatabaseTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle graceful shutdown</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    setupGracefulShutdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start with error handling</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        logError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Helper functions for the advanced example</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> logToFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">message</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> logError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">message</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ERROR: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, message)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addSystemTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addFileTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addGitTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> addDatabaseTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Placeholder implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setupGracefulShutdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">s</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">server</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">MCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> os</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Signal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    signal.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Notify</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c, os.Interrupt, syscall.SIGTERM)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">c</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        logToFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Received shutdown signal&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Shutdown</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">            logError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Shutdown error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\nimport (\n    &quot;context&quot;\n    &quot;fmt&quot;\n    &quot;log&quot;\n    &quot;os&quot;\n    &quot;os/signal&quot;\n    &quot;syscall&quot;\n    &quot;time&quot;\n \n    &quot;github.com/mark3labs/mcp-go/mcp&quot;\n    &quot;github.com/mark3labs/mcp-go/server&quot;\n)\n \nfunc main() {\n    s := server.NewMCPServer(&quot;Advanced CLI Tool&quot;, &quot;1.0.0&quot;,\n        server.WithResourceCapabilities(true, true),\n        server.WithPromptCapabilities(true),\n        server.WithToolCapabilities(true),\n        server.WithLogging(),\n    )\n \n    // Add comprehensive tools\n    addSystemTools(s)\n    addFileTools(s)\n    addGitTools(s)\n    addDatabaseTools(s)\n \n    // Handle graceful shutdown\n    setupGracefulShutdown(s)\n \n    // Start with error handling\n    if err := server.ServeStdio(s); err != nil {\n        logError(fmt.Sprintf(&quot;Server error: %v&quot;, err))\n        os.Exit(1)\n    }\n}\n \n// Helper functions for the advanced example\nfunc logToFile(message string) {\n    // Placeholder implementation\n    log.Println(message)\n}\n \nfunc logError(message string) {\n    // Placeholder implementation\n    log.Printf(&quot;ERROR: %s&quot;, message)\n}\n \nfunc addSystemTools(s *server.MCPServer) {\n    // Placeholder implementation\n}\n \nfunc addFileTools(s *server.MCPServer) {\n    // Placeholder implementation\n}\n \nfunc addGitTools(s *server.MCPServer) {\n    // Placeholder implementation\n}\n \nfunc addDatabaseTools(s *server.MCPServer) {\n    // Placeholder implementation\n}\n \nfunc setupGracefulShutdown(s *server.MCPServer) {\n    c := make(chan os.Signal, 1)\n    signal.Notify(c, os.Interrupt, syscall.SIGTERM)\n    \n    go func() {\n        &lt;-c\n        logToFile(&quot;Received shutdown signal&quot;)\n        \n        ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)\n        defer cancel()\n        \n        if err := s.Shutdown(ctx); err != nil {\n            logError(fmt.Sprintf(&quot;Shutdown error: %v&quot;, err))\n        }\n        \n        os.Exit(0)\n    }()\n}\n","title":"Advanced STDIO Server","titles":["STDIO Transport","Implementation"]},"284":{"href":"/transports/stdio#client-integration","html":"\n","isPage":false,"text":"\n","title":"Client Integration","titles":["STDIO Transport"]},"285":{"href":"/transports/stdio#how-llm-applications-connect","html":"\n<p>LLM applications typically connect to STDIO MCP servers by:</p>\n<ol>\n<li><strong>Spawning the process</strong>: Starting your server as a subprocess</li>\n<li><strong>Pipe communication</strong>: Using stdin/stdout for JSON-RPC messages</li>\n<li><strong>Lifecycle management</strong>: Handling process startup, shutdown, and errors</li>\n</ol>\n","isPage":false,"text":"\nLLM applications typically connect to STDIO MCP servers by:\n\nSpawning the process: Starting your server as a subprocess\nPipe communication: Using stdin/stdout for JSON-RPC messages\nLifecycle management: Handling process startup, shutdown, and errors\n\n","title":"How LLM Applications Connect","titles":["STDIO Transport","Client Integration"]},"286":{"href":"/transports/stdio#claude-desktop-integration","html":"\n<p>Configure your STDIO server in Claude Desktop:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;mcpServers&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;file-tools&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;command&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;args&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/your/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">],</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;env&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">        &quot;LOG_LEVEL&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;info&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p><strong>macOS</strong>: <code>~/Library/Application Support/Claude/claude_desktop_config.json</code>\n<strong>Windows</strong>: <code>%APPDATA%\\Claude\\claude_desktop_config.json</code></p>\n","isPage":false,"text":"\nConfigure your STDIO server in Claude Desktop:\n{\n  &quot;mcpServers&quot;: {\n    &quot;file-tools&quot;: {\n      &quot;command&quot;: &quot;go&quot;,\n      &quot;args&quot;: [&quot;run&quot;, &quot;/path/to/your/server/main.go&quot;],\n      &quot;env&quot;: {\n        &quot;LOG_LEVEL&quot;: &quot;info&quot;\n      }\n    }\n  }\n}\nmacOS: ~/Library/Application Support/Claude/claude_desktop_config.json\nWindows: %APPDATA%\\Claude\\claude_desktop_config.json\n","title":"Claude Desktop Integration","titles":["STDIO Transport","Client Integration"]},"287":{"href":"/transports/stdio#custom-client-integration","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">package</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> main</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">context</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">log</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &quot;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">github.com/mark3labs/mcp-go/client</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Create STDIO client</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> client.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewStdioClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">        &quot;go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;run&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/path/to/server/main.go&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Background</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Initialize connection</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Initialize</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">InitializeRequestParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ProtocolVersion: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2024-11-05&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Capabilities: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ClientCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Tools: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ToolsCapability</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            ClientInfo: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Implementation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Name:    </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;test-client&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                Version: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // List available tools</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tools, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ListTools</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">ListToolsRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{})</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Available tools: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tools.Tools))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, tool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> range</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> tools.Tools {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;- </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, tool.Name, tool.Description)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Call a tool</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> c.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">CallTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        Params: </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolParams</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;list_files&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            Arguments: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{}{</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:      </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;.&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">                &quot;recursive&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Tool result: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%+v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\npackage main\n \nimport (\n    &quot;context&quot;\n    &quot;log&quot;\n \n    &quot;github.com/mark3labs/mcp-go/client&quot;\n)\n \nfunc main() {\n    // Create STDIO client\n    c, err := client.NewStdioClient(\n        &quot;go&quot;, &quot;run&quot;, &quot;/path/to/server/main.go&quot;,\n    )\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer c.Close()\n \n    ctx := context.Background()\n \n    // Initialize connection\n    _, err = c.Initialize(ctx, mcp.InitializeRequest{\n        Params: mcp.InitializeRequestParams{\n            ProtocolVersion: &quot;2024-11-05&quot;,\n            Capabilities: mcp.ClientCapabilities{\n                Tools: &amp;mcp.ToolsCapability{},\n            },\n            ClientInfo: mcp.Implementation{\n                Name:    &quot;test-client&quot;,\n                Version: &quot;1.0.0&quot;,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    // List available tools\n    tools, err := c.ListTools(ctx, mcp.ListToolsRequest{})\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    log.Printf(&quot;Available tools: %d&quot;, len(tools.Tools))\n    for _, tool := range tools.Tools {\n        log.Printf(&quot;- %s: %s&quot;, tool.Name, tool.Description)\n    }\n \n    // Call a tool\n    result, err := c.CallTool(ctx, mcp.CallToolRequest{\n        Params: mcp.CallToolParams{\n            Name: &quot;list_files&quot;,\n            Arguments: map[string]interface{}{\n                &quot;path&quot;:      &quot;.&quot;,\n                &quot;recursive&quot;: false,\n            },\n        },\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    log.Printf(&quot;Tool result: %+v&quot;, result)\n}\n","title":"Custom Client Integration","titles":["STDIO Transport","Client Integration"]},"288":{"href":"/transports/stdio#debugging","html":"\n","isPage":false,"text":"\n","title":"Debugging","titles":["STDIO Transport"]},"289":{"href":"/transports/stdio#command-line-testing","html":"\n<p>Test your STDIO server directly from the command line:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Start your server</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Send initialization request</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;initialize&quot;,&quot;params&quot;:{&quot;protocolVersion&quot;:&quot;2024-11-05&quot;,&quot;capabilities&quot;:{&quot;tools&quot;:{}},&quot;clientInfo&quot;:{&quot;name&quot;:&quot;test&quot;,&quot;version&quot;:&quot;1.0.0&quot;}}}&#x27;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># List tools</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:2,&quot;method&quot;:&quot;tools/list&quot;,&quot;params&quot;:{}}&#x27;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Call a tool</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:3,&quot;method&quot;:&quot;tools/call&quot;,&quot;params&quot;:{&quot;name&quot;:&quot;list_files&quot;,&quot;arguments&quot;:{&quot;path&quot;:&quot;.&quot;,&quot;recursive&quot;:false}}}&#x27;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span></code></pre>\n","isPage":false,"text":"\nTest your STDIO server directly from the command line:\n# Start your server\ngo run main.go\n \n# Send initialization request\necho &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;initialize&quot;,&quot;params&quot;:{&quot;protocolVersion&quot;:&quot;2024-11-05&quot;,&quot;capabilities&quot;:{&quot;tools&quot;:{}},&quot;clientInfo&quot;:{&quot;name&quot;:&quot;test&quot;,&quot;version&quot;:&quot;1.0.0&quot;}}}&#x27; | go run main.go\n \n# List tools\necho &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:2,&quot;method&quot;:&quot;tools/list&quot;,&quot;params&quot;:{}}&#x27; | go run main.go\n \n# Call a tool\necho &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:3,&quot;method&quot;:&quot;tools/call&quot;,&quot;params&quot;:{&quot;name&quot;:&quot;list_files&quot;,&quot;arguments&quot;:{&quot;path&quot;:&quot;.&quot;,&quot;recursive&quot;:false}}}&#x27; | go run main.go\n","title":"Command Line Testing","titles":["STDIO Transport","Debugging"]},"290":{"href":"/transports/stdio#interactive-testing-script","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">#!/bin/bash</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># interactive_test.sh</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">SERVER_CMD</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;go run main.go&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Starting MCP STDIO server test...&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Function to send JSON-RPC request</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">send_request</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    local</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> request</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">$1</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Sending: </span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">$request</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">$request</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> |</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> $SERVER_CMD</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;---&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Initialize</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">send_request</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;initialize&quot;,&quot;params&quot;:{&quot;protocolVersion&quot;:&quot;2024-11-05&quot;,&quot;capabilities&quot;:{&quot;tools&quot;:{}},&quot;clientInfo&quot;:{&quot;name&quot;:&quot;test&quot;,&quot;version&quot;:&quot;1.0.0&quot;}}}&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># List tools</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">send_request</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:2,&quot;method&quot;:&quot;tools/list&quot;,&quot;params&quot;:{}}&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># List resources</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">send_request</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:3,&quot;method&quot;:&quot;resources/list&quot;,&quot;params&quot;:{}}&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Call tool</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">send_request</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:4,&quot;method&quot;:&quot;tools/call&quot;,&quot;params&quot;:{&quot;name&quot;:&quot;list_files&quot;,&quot;arguments&quot;:{&quot;path&quot;:&quot;.&quot;,&quot;recursive&quot;:false}}}&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Test completed.&quot;</span></span></code></pre>\n","isPage":false,"text":"\n#!/bin/bash\n \n# interactive_test.sh\nSERVER_CMD=&quot;go run main.go&quot;\n \necho &quot;Starting MCP STDIO server test...&quot;\n \n# Function to send JSON-RPC request\nsend_request() {\n    local request=&quot;$1&quot;\n    echo &quot;Sending: $request&quot;\n    echo &quot;$request&quot; | $SERVER_CMD\n    echo &quot;---&quot;\n}\n \n# Initialize\nsend_request &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:1,&quot;method&quot;:&quot;initialize&quot;,&quot;params&quot;:{&quot;protocolVersion&quot;:&quot;2024-11-05&quot;,&quot;capabilities&quot;:{&quot;tools&quot;:{}},&quot;clientInfo&quot;:{&quot;name&quot;:&quot;test&quot;,&quot;version&quot;:&quot;1.0.0&quot;}}}&#x27;\n \n# List tools\nsend_request &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:2,&quot;method&quot;:&quot;tools/list&quot;,&quot;params&quot;:{}}&#x27;\n \n# List resources\nsend_request &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:3,&quot;method&quot;:&quot;resources/list&quot;,&quot;params&quot;:{}}&#x27;\n \n# Call tool\nsend_request &#x27;{&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:4,&quot;method&quot;:&quot;tools/call&quot;,&quot;params&quot;:{&quot;name&quot;:&quot;list_files&quot;,&quot;arguments&quot;:{&quot;path&quot;:&quot;.&quot;,&quot;recursive&quot;:false}}}&#x27;\n \necho &quot;Test completed.&quot;\n","title":"Interactive Testing Script","titles":["STDIO Transport","Debugging"]},"291":{"href":"/transports/stdio#debug-logging","html":"\n<p>Add debug logging to your STDIO server:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Setup debug logging</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logFile, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OpenFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;mcp-server.log&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, os.O_CREATE</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">os.O_WRONLY</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">os.O_APPEND, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0666</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> logFile.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logger </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">New</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(logFile, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;[MCP] &quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, log.LstdFlags</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">|</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">log.Lshortfile)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Debug Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithToolCapabilities</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithLogging</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Add tools with debug logging</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">AddTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewTool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;debug_echo&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithDescription</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Echo with debug logging&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Required</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            message </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Echo tool called with message: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, message)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Echo: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, message)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Println</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Starting STDIO server...&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        logger.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Printf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server error: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nAdd debug logging to your STDIO server:\nfunc main() {\n    // Setup debug logging\n    logFile, err := os.OpenFile(&quot;mcp-server.log&quot;, os.O_CREATE|os.O_WRONLY|os.O_APPEND, 0666)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer logFile.Close()\n \n    logger := log.New(logFile, &quot;[MCP] &quot;, log.LstdFlags|log.Lshortfile)\n \n    s := server.NewMCPServer(&quot;Debug Server&quot;, &quot;1.0.0&quot;,\n        server.WithToolCapabilities(true),\n        server.WithLogging(),\n    )\n \n    // Add tools with debug logging\n    s.AddTool(\n        mcp.NewTool(&quot;debug_echo&quot;,\n            mcp.WithDescription(&quot;Echo with debug logging&quot;),\n            mcp.WithString(&quot;message&quot;, mcp.Required()),\n        ),\n        func(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n            message := req.GetString(&quot;message&quot;, &quot;&quot;)\n            logger.Printf(&quot;Echo tool called with message: %s&quot;, message)\n            return mcp.NewToolResultText(fmt.Sprintf(&quot;Echo: %s&quot;, message)), nil\n        },\n    )\n \n    logger.Println(&quot;Starting STDIO server...&quot;)\n    if err := server.ServeStdio(s); err != nil {\n        logger.Printf(&quot;Server error: %v&quot;, err)\n    }\n}\n","title":"Debug Logging","titles":["STDIO Transport","Debugging"]},"292":{"href":"/transports/stdio#mcp-inspector-integration","html":"\n<p>Use the MCP Inspector for visual debugging:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Install MCP Inspector</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">npm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -g</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> @modelcontextprotocol/inspector</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># Run your server with inspector</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp-inspector</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> go</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> main.go</span></span></code></pre>\n<p>This opens a web interface where you can:</p>\n<ul>\n<li>View available tools and resources</li>\n<li>Test tool calls interactively</li>\n<li>Inspect request/response messages</li>\n<li>Debug protocol issues</li>\n</ul>\n","isPage":false,"text":"\nUse the MCP Inspector for visual debugging:\n# Install MCP Inspector\nnpm install -g @modelcontextprotocol/inspector\n \n# Run your server with inspector\nmcp-inspector go run main.go\nThis opens a web interface where you can:\n\nView available tools and resources\nTest tool calls interactively\nInspect request/response messages\nDebug protocol issues\n\n","title":"MCP Inspector Integration","titles":["STDIO Transport","Debugging"]},"293":{"href":"/transports/stdio#error-handling","html":"\n","isPage":false,"text":"\n","title":"Error Handling","titles":["STDIO Transport"]},"294":{"href":"/transports/stdio#robust-error-handling","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleToolWithErrors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate required parameters</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    path, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RequireString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path parameter is required and must be a string&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Validate path security</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isValidPath</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;invalid or unsafe path: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, path)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Check if path exists</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Stat</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path); os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">IsNotExist</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path does not exist: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, path)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle context cancellation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Perform operation with timeout</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ctx, cancel </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> context.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithTimeout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">30</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Second)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> cancel</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    result, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> performOperation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ctx, path)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Log error for debugging</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        logError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Operation failed for path </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%s</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, path, err))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Return user-friendly error</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> errors.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Is</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err, context.DeadlineExceeded) {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation timed out&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Errorf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;operation failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%w</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, result)), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleToolWithErrors(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    // Validate required parameters\n    path, err := req.RequireString(&quot;path&quot;)\n    if err != nil {\n        return nil, fmt.Errorf(&quot;path parameter is required and must be a string&quot;)\n    }\n \n    // Validate path security\n    if !isValidPath(path) {\n        return nil, fmt.Errorf(&quot;invalid or unsafe path: %s&quot;, path)\n    }\n \n    // Check if path exists\n    if _, err := os.Stat(path); os.IsNotExist(err) {\n        return nil, fmt.Errorf(&quot;path does not exist: %s&quot;, path)\n    }\n \n    // Handle context cancellation\n    select {\n    case &lt;-ctx.Done():\n        return nil, ctx.Err()\n    default:\n    }\n \n    // Perform operation with timeout\n    ctx, cancel := context.WithTimeout(ctx, 30*time.Second)\n    defer cancel()\n \n    result, err := performOperation(ctx, path)\n    if err != nil {\n        // Log error for debugging\n        logError(fmt.Sprintf(&quot;Operation failed for path %s: %v&quot;, path, err))\n        \n        // Return user-friendly error\n        if errors.Is(err, context.DeadlineExceeded) {\n            return nil, fmt.Errorf(&quot;operation timed out&quot;)\n        }\n        \n        return nil, fmt.Errorf(&quot;operation failed: %w&quot;, err)\n    }\n \n    return mcp.NewToolResultText(fmt.Sprintf(&quot;%v&quot;, result)), nil\n}\n","title":"Robust Error Handling","titles":["STDIO Transport","Error Handling"]},"295":{"href":"/transports/stdio#process-management","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> main</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Handle panics gracefully</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> r </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> recover</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(); r </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">            logError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server panic: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, r))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    s </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewMCPServer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Robust Server&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WithRecovery</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(), </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Built-in panic recovery</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Setup signal handling</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    setupSignalHandling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Start server with retry logic</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> attempts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; attempts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 3</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">; attempts</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">++</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> server.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">ServeStdio</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(s); err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">            logError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Server attempt </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%d</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> failed: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, attempts</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> attempts </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 2</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sleep</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(time.Second </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Duration</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(attempts</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> setupSignalHandling</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    c </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">chan</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> os</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Signal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    signal.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Notify</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(c, os.Interrupt, syscall.SIGTERM)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    go</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> func</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sig </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">c</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        logToFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(fmt.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Sprintf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Received signal: </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">%v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, sig))</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Exit</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc main() {\n    // Handle panics gracefully\n    defer func() {\n        if r := recover(); r != nil {\n            logError(fmt.Sprintf(&quot;Server panic: %v&quot;, r))\n            os.Exit(1)\n        }\n    }()\n \n    s := server.NewMCPServer(&quot;Robust Server&quot;, &quot;1.0.0&quot;,\n        server.WithRecovery(), // Built-in panic recovery\n    )\n \n    // Setup signal handling\n    setupSignalHandling()\n \n    // Start server with retry logic\n    for attempts := 0; attempts &lt; 3; attempts++ {\n        if err := server.ServeStdio(s); err != nil {\n            logError(fmt.Sprintf(&quot;Server attempt %d failed: %v&quot;, attempts+1, err))\n            if attempts == 2 {\n                os.Exit(1)\n            }\n            time.Sleep(time.Second * time.Duration(attempts+1))\n        } else {\n            break\n        }\n    }\n}\n \nfunc setupSignalHandling() {\n    c := make(chan os.Signal, 1)\n    signal.Notify(c, os.Interrupt, syscall.SIGTERM)\n    \n    go func() {\n        sig := &lt;-c\n        logToFile(fmt.Sprintf(&quot;Received signal: %v&quot;, sig))\n        os.Exit(0)\n    }()\n}\n","title":"Process Management","titles":["STDIO Transport","Error Handling"]},"296":{"href":"/transports/stdio#performance-optimization","html":"\n","isPage":false,"text":"\n","title":"Performance Optimization","titles":["STDIO Transport"]},"297":{"href":"/transports/stdio#efficient-resource-usage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Use connection pooling for database tools</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> dbPool </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sql</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">DB</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> init</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    dbPool, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sql.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Open</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sqlite3&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;data.db&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        log.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Fatal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(err)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    dbPool.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetMaxOpenConns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">10</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    dbPool.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetMaxIdleConns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    dbPool.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">SetConnMaxLifetime</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(time.Hour)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Cache frequently accessed data</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fileCache </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">map</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cacheEntry</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cacheMutex </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sync</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">RWMutex</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">type</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> cacheEntry</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> struct</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    content   </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    timestamp </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">time</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Time</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getCachedFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">path</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">string</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    cacheMutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RLock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> cacheMutex.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RUnlock</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    entry, exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> fileCache[path]</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> !</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">exists </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">||</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> time.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Since</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(entry.timestamp) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 5</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">time.Minute {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> entry.content, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\n// Use connection pooling for database tools\nvar dbPool *sql.DB\n \nfunc init() {\n    var err error\n    dbPool, err = sql.Open(&quot;sqlite3&quot;, &quot;data.db&quot;)\n    if err != nil {\n        log.Fatal(err)\n    }\n    \n    dbPool.SetMaxOpenConns(10)\n    dbPool.SetMaxIdleConns(5)\n    dbPool.SetConnMaxLifetime(time.Hour)\n}\n \n// Cache frequently accessed data\nvar fileCache = make(map[string]cacheEntry)\nvar cacheMutex sync.RWMutex\n \ntype cacheEntry struct {\n    content   string\n    timestamp time.Time\n}\n \nfunc getCachedFile(path string) (string, bool) {\n    cacheMutex.RLock()\n    defer cacheMutex.RUnlock()\n    \n    entry, exists := fileCache[path]\n    if !exists || time.Since(entry.timestamp) &gt; 5*time.Minute {\n        return &quot;&quot;, false\n    }\n    \n    return entry.content, true\n}\n","title":"Efficient Resource Usage","titles":["STDIO Transport","Performance Optimization"]},"298":{"href":"/transports/stdio#memory-management","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">func</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleLargeFile</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">ctx</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Context</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#E36209;--shiki-dark:#F69D50\">req</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolRequest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">*</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">mcp</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">CallToolResult</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    path </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> req.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">GetString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;path&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Stream large files instead of loading into memory</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    file, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> os.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Open</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    defer</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> file.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Close</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // Process in chunks</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> chunkSize</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 64</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> *</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1024</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    buffer </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> make</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([]</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">byte</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, chunkSize)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    var</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> result </span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">strings</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Builder</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    for</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        n, err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> file.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Read</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(buffer)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">==</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> io.EOF {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            break</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> err </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!=</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, err</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Process chunk</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        processed </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> processChunk</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(buffer[:n])</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        result.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">WriteString</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(processed)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">        // Check for cancellation</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        select</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        case</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> &lt;-</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Done</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">():</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> nil</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, ctx.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Err</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">:</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> mcp.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">NewToolResultText</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(result.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">String</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()), </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">nil</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nfunc handleLargeFile(ctx context.Context, req mcp.CallToolRequest) (*mcp.CallToolResult, error) {\n    path := req.GetString(&quot;path&quot;, &quot;&quot;)\n    \n    // Stream large files instead of loading into memory\n    file, err := os.Open(path)\n    if err != nil {\n        return nil, err\n    }\n    defer file.Close()\n \n    // Process in chunks\n    const chunkSize = 64 * 1024\n    buffer := make([]byte, chunkSize)\n    \n    var result strings.Builder\n    for {\n        n, err := file.Read(buffer)\n        if err == io.EOF {\n            break\n        }\n        if err != nil {\n            return nil, err\n        }\n        \n        // Process chunk\n        processed := processChunk(buffer[:n])\n        result.WriteString(processed)\n        \n        // Check for cancellation\n        select {\n        case &lt;-ctx.Done():\n            return nil, ctx.Err()\n        default:\n        }\n    }\n \n    return mcp.NewToolResultText(result.String()), nil\n}\n","title":"Memory Management","titles":["STDIO Transport","Performance Optimization"]},"299":{"href":"/transports/stdio#next-steps","html":"\n<ul>\n<li><strong><a href=\"/transports/sse\">SSE Transport</a></strong> - Learn about real-time web communication</li>\n<li><strong><a href=\"/transports/http\">HTTP Transport</a></strong> - Explore traditional web service patterns</li>\n<li><strong><a href=\"/transports/inprocess\">In-Process Transport</a></strong> - Understand embedded scenarios</li>\n</ul>","isPage":false,"text":"\n\nSSE Transport - Learn about real-time web communication\nHTTP Transport - Explore traditional web service patterns\nIn-Process Transport - Understand embedded scenarios\n","title":"Next Steps","titles":["STDIO Transport"]}},"dirtCount":0,"index":[["$server",{"2":{"290":1}}],["$request",{"2":{"290":2}}],["$1",{"2":{"290":1}}],["$`",{"2":{"205":1,"214":1}}],["|",{"2":{"289":3,"290":1}}],["||",{"2":{"55":1,"69":1,"81":1,"99":2,"103":1,"107":1,"132":1,"213":1,"228":1,"240":1,"297":1}}],["75",{"2":{"272":1}}],["9",{"2":{"205":2,"214":2}}],["90",{"2":{"102":1}}],["z",{"2":{"205":1,"214":1}}],["z0",{"2":{"205":2,"214":2}}],["za",{"2":{"205":3,"214":3}}],["zero",{"2":{"51":3,"117":1,"208":1,"266":1}}],["64",{"2":{"298":1}}],["6",{"2":{"132":2}}],["60",{"2":{"50":1,"52":1,"272":2}}],["+port",{"2":{"152":2}}],["+",{"2":{"79":1,"95":1,"110":1,"117":1,"134":1,"159":1,"205":3,"208":1,"214":3,"219":1,"246":2,"253":1,"256":1,"266":1,"272":1}}],["+v",{"2":{"31":1,"45":1,"46":1,"50":2,"52":2,"60":2,"85":1,"92":2,"98":1,"106":1,"110":1,"287":1}}],["keep",{"2":{"253":1,"275":1}}],["key=",{"2":{"188":1}}],["keywords",{"2":{"168":3}}],["key",{"0":{"14":1,"19":1},"1":{"20":1,"21":1,"22":1},"2":{"2":1,"3":1,"4":1,"8":1,"107":4,"159":1,"166":1,"168":4,"173":1,"174":1,"176":2,"188":1,"211":2,"267":8}}],["kill",{"2":{"98":2}}],["know",{"2":{"78":1}}],["```go",{"2":{"214":1}}],["`^",{"2":{"205":1,"214":1}}],["`please",{"2":{"177":2}}],["`json",{"2":{"117":5,"118":11,"119":3,"207":3,"210":2,"214":2,"228":5,"241":2}}],["`",{"2":{"77":1,"117":5,"118":11,"119":3,"166":1,"173":2,"207":3,"210":2,"214":2,"228":13,"241":2,"267":2,"272":6,"276":2,"282":2}}],["`users",{"2":{"77":1}}],["50",{"2":{"272":1}}],["5",{"2":{"47":1,"52":2,"99":1,"107":1,"229":1,"266":1,"267":1,"272":2,"283":1,"297":2}}],["42",{"2":{"217":1}}],["4",{"2":{"45":1,"166":1,"177":2,"290":1}}],["32602",{"2":{"236":1}}],["3",{"2":{"45":1,"51":1,"166":1,"177":2,"254":1,"289":1,"290":1,"295":1}}],["30",{"2":{"41":1,"50":1,"51":1,"52":1,"92":1,"102":1,"129":1,"137":1,"193":1,"196":1,"210":1,"211":1,"218":1,"228":3,"229":1,"240":2,"272":1,"273":1,"275":1,"294":1}}],["25",{"2":{"228":2,"235":1}}],["2f",{"2":{"208":1,"266":1}}],["22",{"2":{"132":1}}],["20",{"2":{"85":1,"137":2}}],["2024",{"2":{"46":1,"266":1,"267":1,"287":1,"289":1,"290":1}}],["2",{"2":{"45":1,"51":1,"142":1,"166":1,"177":2,"186":1,"205":1,"214":1,"228":2,"234":1,"235":1,"236":1,"272":1,"289":4,"290":5,"295":1}}],["\tc",{"2":{"42":1}}],["\t\twithheaders",{"2":{"42":1}}],["\t\t\t",{"2":{"41":2,"42":2}}],["\t\ttransport",{"2":{"41":3}}],["\t\t",{"2":{"41":4,"42":2}}],["\thttptransport",{"2":{"41":1}}],["\t",{"2":{"30":1,"41":1,"42":1}}],["~64kb",{"2":{"257":1}}],["~1",{"2":{"256":1}}],["~100μs",{"2":{"256":1}}],["~1μs",{"2":{"256":1}}],["~",{"2":{"28":1,"286":1}}],["🔌",{"2":{"28":1}}],["👋",{"2":{"26":1}}],["🚀",{"2":{"16":1}}],["queries",{"2":{"210":1}}],["querycontext",{"2":{"210":1}}],["queryescape",{"2":{"188":1}}],["queryrowcontext",{"2":{"187":1}}],["queryrequest",{"2":{"7":1}}],["query",{"0":{"210":1},"2":{"71":3,"187":3,"210":14,"220":2,"228":8,"234":1,"280":1}}],["querytool",{"2":{"7":1}}],["questions",{"2":{"170":1,"173":2}}],["question",{"2":{"170":2}}],["quality",{"2":{"166":2,"171":1}}],["quick",{"0":{"25":1,"60":1,"159":1,"246":1},"1":{"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1}}],["quot",{"2":{"2":16,"3":30,"4":22,"5":4,"7":6,"8":14,"9":8,"16":28,"20":18,"21":8,"22":4,"23":4,"26":30,"28":16,"30":30,"31":20,"39":10,"40":40,"41":10,"42":10,"45":24,"46":12,"47":16,"49":20,"50":46,"51":4,"52":18,"54":2,"55":6,"60":48,"62":6,"63":2,"64":2,"67":28,"68":14,"69":4,"71":10,"72":12,"76":34,"77":12,"79":24,"80":28,"83":24,"84":40,"85":28,"87":24,"88":6,"89":42,"91":28,"92":18,"97":32,"98":24,"99":18,"101":4,"102":10,"103":12,"106":10,"107":12,"108":8,"110":22,"111":18,"113":42,"114":50,"117":54,"118":34,"119":24,"122":28,"124":12,"125":2,"126":8,"128":42,"129":4,"131":26,"132":14,"134":16,"135":14,"137":14,"141":6,"142":4,"144":8,"145":4,"146":6,"148":4,"149":6,"150":6,"151":10,"152":20,"153":14,"154":8,"159":74,"163":14,"165":77,"166":34,"168":22,"170":36,"171":34,"173":28,"174":28,"176":32,"177":42,"181":8,"183":18,"184":32,"186":22,"187":40,"188":18,"190":4,"191":12,"192":4,"193":22,"195":10,"196":4,"197":28,"202":24,"204":40,"205":20,"207":24,"208":20,"209":52,"210":20,"211":26,"213":12,"214":32,"216":2,"217":14,"218":18,"219":10,"220":20,"222":10,"223":12,"228":232,"229":28,"232":48,"234":26,"235":26,"236":20,"239":2,"241":20,"246":50,"253":16,"254":28,"261":4,"266":80,"267":66,"272":108,"273":42,"275":8,"276":14,"277":2,"282":104,"283":30,"286":20,"287":32,"289":66,"290":92,"291":26,"294":16,"295":10,"297":6,"298":4}}],["0666",{"2":{"291":1}}],["0644",{"2":{"209":1}}],["05",{"2":{"46":1,"266":1,"267":1,"287":1,"289":1,"290":1}}],["0",{"2":{"7":2,"8":2,"9":2,"16":2,"22":2,"26":2,"46":2,"51":2,"60":4,"69":1,"80":6,"83":2,"87":3,"102":1,"104":1,"110":2,"111":3,"114":2,"117":3,"122":2,"134":1,"137":3,"141":2,"142":2,"144":4,"145":2,"146":2,"148":2,"149":2,"150":2,"152":2,"153":2,"154":2,"159":4,"165":2,"166":1,"183":2,"184":2,"197":2,"204":1,"205":1,"207":2,"208":1,"209":2,"213":3,"214":2,"217":1,"222":1,"228":7,"229":2,"232":4,"234":2,"235":2,"236":1,"246":2,"254":2,"261":2,"266":11,"267":8,"272":3,"273":2,"282":2,"283":3,"287":2,"289":5,"290":6,"291":2,"295":4}}],["1f",{"2":{"272":3}}],["150",{"2":{"204":1,"213":2}}],["1024",{"2":{"298":1}}],["10ms",{"2":{"256":1}}],["10",{"2":{"85":1,"102":1,"132":1,"137":2,"204":1,"207":1,"214":1,"220":1,"222":1,"228":2,"234":1,"235":1,"266":1,"267":1,"272":2,"297":1}}],["10000",{"2":{"205":1}}],["1000",{"2":{"204":1}}],["100",{"2":{"79":1,"102":1,"134":4,"135":1,"204":1,"220":1,"222":1,"228":1,"272":1}}],["11",{"2":{"46":1,"266":1,"267":1,"287":1,"289":1,"290":1}}],["1",{"2":{"7":1,"8":1,"9":1,"16":1,"22":1,"26":1,"45":1,"46":1,"50":1,"51":1,"52":1,"69":1,"85":1,"92":1,"99":3,"102":1,"107":2,"108":1,"110":1,"111":1,"117":1,"122":1,"134":1,"137":2,"141":1,"144":2,"145":1,"146":1,"148":1,"149":1,"150":1,"152":1,"153":2,"154":1,"159":2,"165":1,"166":1,"177":2,"183":1,"184":1,"186":1,"197":1,"204":2,"209":1,"220":1,"228":3,"229":1,"232":2,"234":1,"235":1,"236":1,"240":1,"246":1,"254":1,"261":1,"266":2,"267":2,"272":3,"273":1,"282":2,"283":3,"287":1,"289":2,"290":2,"291":1,"295":4}}],["123",{"2":{"2":1,"186":3,"187":2,"228":1}}],["v1",{"2":{"188":1,"229":1}}],["v10",{"2":{"119":1}}],["vectors",{"2":{"165":1}}],["version",{"2":{"46":2,"49":1,"50":1,"141":1,"159":1,"184":1,"232":1,"266":1,"267":1,"287":1,"289":1,"290":1}}],["versus",{"2":{"7":1}}],["verify",{"2":{"34":1,"35":1,"36":1}}],["vulnerabilities",{"2":{"165":1}}],["view",{"2":{"292":1}}],["visual",{"2":{"292":1}}],["visualization",{"2":{"171":1,"249":1,"270":1}}],["violation",{"2":{"49":1,"50":1}}],["via",{"2":{"17":1}}],["valid",{"2":{"205":1,"241":1}}],["validator",{"2":{"119":4,"126":2}}],["validation",{"0":{"84":1,"119":1,"212":1},"1":{"213":1,"214":1},"2":{"84":1,"116":1,"118":1,"165":1,"204":1,"213":1,"214":1,"219":1}}],["validatejwt",{"2":{"241":2}}],["validatetoken",{"2":{"229":1}}],["validatetoolarguments",{"2":{"84":2}}],["validateurl",{"2":{"214":1}}],["validateemail",{"2":{"214":1}}],["validated",{"2":{"213":1}}],["validatefilepath",{"2":{"119":2}}],["validatevalue",{"2":{"84":2}}],["validate",{"2":{"35":1,"84":2,"117":3,"118":4,"119":5,"126":2,"187":1,"195":1,"209":1,"210":1,"213":1,"228":1,"229":1,"241":1,"260":1,"261":1,"282":1,"294":2}}],["val",{"2":{"168":4,"176":2}}],["values",{"2":{"205":1,"210":1,"275":1}}],["valueof",{"2":{"92":2}}],["value",{"2":{"41":2,"42":2,"50":1,"68":1,"84":15,"107":4,"159":1,"177":3,"211":2,"267":6,"272":1}}],["variable",{"2":{"177":3}}],["variables",{"2":{"40":1,"152":1,"177":8}}],["various",{"2":{"22":1,"204":1,"275":1}}],["var",{"2":{"9":1,"47":2,"49":3,"51":2,"67":2,"69":1,"72":2,"77":2,"80":1,"84":1,"85":1,"91":2,"98":1,"99":1,"117":1,"131":1,"132":1,"159":2,"165":1,"166":1,"168":1,"170":1,"171":1,"173":1,"174":2,"176":1,"177":1,"187":1,"207":1,"208":1,"209":2,"210":1,"211":1,"214":1,"266":1,"267":1,"272":2,"282":1,"297":4,"298":1}}],["v",{"2":{"16":1,"26":1,"41":1,"45":2,"46":1,"47":1,"50":10,"51":2,"52":2,"54":1,"68":3,"69":2,"77":2,"79":2,"83":2,"85":1,"87":2,"89":2,"91":3,"92":3,"98":4,"99":1,"107":1,"117":1,"122":1,"124":6,"129":2,"137":2,"153":1,"154":1,"159":1,"168":2,"177":1,"209":2,"210":3,"211":5,"213":1,"217":1,"219":1,"222":1,"229":4,"254":4,"267":1,"272":4,"276":1,"282":3,"283":2,"291":1,"294":2,"295":3}}],["vs",{"0":{"7":1,"238":1},"1":{"239":1,"240":1}}],["8081",{"2":{"254":2}}],["8080",{"2":{"5":2,"8":2,"23":2,"31":1,"39":2,"63":1,"64":1,"101":1,"103":1,"106":1,"114":2,"149":2,"150":2,"151":2,"152":1,"228":2,"229":2,"232":2,"246":1,"253":1,"254":2,"272":2,"273":3,"275":3}}],["8",{"2":{"3":1,"209":4,"228":3}}],["york",{"2":{"85":1,"193":1}}],["your",{"0":{"16":1,"17":1,"27":1},"1":{"28":1,"29":1},"2":{"14":1,"15":2,"17":1,"20":1,"22":1,"25":1,"28":3,"29":2,"36":1,"38":1,"58":1,"94":1,"103":2,"106":1,"113":1,"144":1,"160":1,"170":1,"173":1,"183":1,"201":1,"220":1,"243":1,"254":1,"282":1,"285":1,"286":2,"289":2,"291":1,"292":1}}],["you",{"0":{"59":1,"158":1},"2":{"6":1,"8":1,"15":1,"18":2,"25":1,"29":1,"30":1,"32":1,"75":1,"78":2,"155":1,"162":1,"170":3,"171":4,"219":1,"231":1,"241":1,"277":1,"292":1}}],["y",{"2":{"3":1,"20":1,"41":1,"42":1,"85":1,"117":8,"202":1,"208":7,"266":9,"267":1}}],["x",{"2":{"3":1,"20":1,"41":1,"42":1,"85":1,"117":7,"202":1,"208":6,"266":8,"267":1}}],["x27",{"0":{"18":1,"32":1,"34":1,"59":1,"158":1},"2":{"2":1,"14":1,"16":1,"20":1,"21":1,"26":1,"28":2,"30":1,"34":1,"51":2,"60":1,"69":1,"75":1,"159":1,"162":1,"170":4,"180":1,"200":1,"204":2,"253":1,"277":1,"282":2,"289":6,"290":8}}],["jwt",{"2":{"241":8}}],["jwtsecret",{"2":{"241":3}}],["jane",{"2":{"228":4}}],["jargon",{"2":{"176":1}}],["john",{"2":{"193":1,"218":1,"228":6,"234":1}}],["join",{"2":{"24":1,"166":2}}],["just",{"2":{"3":1,"14":1,"15":1}}],["jsonrpc",{"2":{"234":1,"235":1,"236":1,"289":3,"290":4}}],["jsonresources",{"2":{"77":2}}],["jsondata",{"2":{"117":2,"122":2,"186":2,"187":2,"191":2,"193":2,"195":2,"196":2,"210":2,"211":2,"213":2,"217":2,"222":2}}],["json",{"0":{"191":1,"217":1},"2":{"2":3,"8":1,"28":2,"45":1,"76":1,"77":4,"80":4,"91":2,"102":1,"117":2,"122":1,"159":4,"184":3,"186":3,"187":4,"188":2,"191":2,"193":3,"195":2,"196":2,"197":2,"210":2,"211":1,"213":1,"217":1,"222":1,"228":2,"232":4,"234":1,"272":2,"282":2,"285":1,"286":2,"290":1}}],["rpc",{"2":{"285":1,"290":1}}],["r",{"2":{"197":6,"232":8,"241":4,"275":1,"295":3}}],["risks",{"2":{"177":1}}],["right",{"0":{"247":1},"1":{"248":1,"249":1,"250":1,"251":1},"2":{"94":1,"243":1}}],["rfc3339",{"2":{"159":4}}],["rsc",{"2":{"107":36}}],["routes",{"2":{"232":1}}],["rowstojson",{"2":{"210":1}}],["rows",{"2":{"210":3}}],["row",{"2":{"187":2}}],["root",{"2":{"177":1}}],["roles",{"0":{"171":1}}],["roleuser",{"2":{"159":1}}],["role",{"2":{"87":1,"88":3,"159":1,"165":1,"166":1,"168":1,"170":7,"171":3,"173":1,"174":1,"176":1,"177":1,"241":2}}],["robust",{"0":{"294":1},"2":{"14":1,"48":1,"145":1,"154":1,"157":1,"194":1,"295":1}}],["rlock",{"2":{"54":1,"55":3,"72":2,"81":1,"92":1,"107":2,"108":1,"121":1,"125":1,"135":2,"198":1,"240":1,"297":1}}],["rwmutex",{"2":{"54":1,"55":1,"72":1,"81":1,"92":1,"107":1,"108":1,"121":1,"125":1,"135":1,"198":1,"240":1,"297":1}}],["rc",{"2":{"51":2,"55":28,"81":12}}],["rawargs",{"2":{"207":1}}],["raw",{"2":{"207":1}}],["raises",{"2":{"173":1}}],["ratelimiter",{"2":{"229":1}}],["ratelimitmw",{"2":{"137":1}}],["ratelimitmiddleware",{"2":{"125":5,"261":1}}],["rate",{"0":{"125":1},"2":{"123":1,"125":10,"226":1,"229":2,"250":1,"261":1}}],["rather",{"2":{"3":1,"8":1}}],["range",{"2":{"30":2,"45":1,"50":2,"51":1,"60":2,"71":1,"72":1,"76":1,"77":2,"79":2,"83":2,"84":3,"85":2,"87":3,"88":1,"92":2,"106":1,"107":1,"108":1,"131":3,"132":1,"135":1,"168":1,"174":3,"177":1,"197":1,"211":1,"240":2,"282":1,"287":1}}],["runlock",{"2":{"54":1,"55":4,"72":2,"81":1,"92":1,"107":2,"108":1,"121":1,"125":1,"135":2,"198":2,"240":1,"297":1}}],["running",{"0":{"17":1,"27":1},"1":{"28":1,"29":1},"2":{"17":1,"18":1,"25":1,"35":1,"52":2,"134":1,"222":1,"253":1,"267":1,"270":1}}],["runtime",{"2":{"8":1,"116":1}}],["run",{"2":{"3":1,"17":2,"26":2,"28":1,"29":2,"30":1,"40":2,"60":1,"92":1,"97":1,"114":1,"286":1,"287":1,"289":4,"290":1,"292":2}}],["repository",{"2":{"280":1}}],["report",{"2":{"131":1,"177":4}}],["replaceall",{"2":{"177":1}}],["replace",{"2":{"177":1}}],["representation",{"2":{"193":2}}],["representations",{"2":{"193":1}}],["representative",{"2":{"170":1}}],["reproduce",{"2":{"177":1}}],["removesession",{"2":{"121":1,"122":1}}],["removehandler",{"2":{"92":1}}],["reducing",{"2":{"116":1}}],["registersession",{"2":{"135":1}}],["registervalidation",{"2":{"119":1}}],["regular",{"2":{"106":1}}],["regex",{"2":{"77":2}}],["regexp",{"2":{"76":1,"77":1,"214":1}}],["refresh",{"2":{"91":2}}],["refreshing",{"2":{"91":2}}],["reflect",{"2":{"76":1,"92":2}}],["received",{"2":{"283":1,"295":1}}],["receiving",{"2":{"90":1}}],["recursively",{"2":{"282":1}}],["recursive",{"2":{"282":7,"287":1,"289":1,"290":1}}],["recommended",{"0":{"239":1}}],["recommendations",{"2":{"165":1,"166":1,"173":1}}],["record",{"2":{"187":2}}],["recordcount",{"2":{"166":1}}],["records",{"2":{"2":2,"166":1,"180":1,"187":2}}],["recover",{"2":{"145":1,"295":1}}],["recovering",{"2":{"55":6}}],["recovery",{"0":{"55":1,"145":1},"2":{"55":2,"142":1,"145":1,"154":1,"295":1}}],["recoverable",{"2":{"50":2}}],["reconnected",{"2":{"107":1}}],["reconnecterr",{"2":{"50":3}}],["reconnectloop",{"2":{"107":2}}],["reconnectch",{"2":{"107":4}}],["reconnectclient",{"2":{"50":2}}],["reconnecting",{"2":{"50":1,"107":1}}],["reconnection",{"0":{"107":1},"2":{"8":1,"50":1,"68":1,"107":2}}],["reconnect",{"2":{"50":1,"68":1}}],["reliable",{"2":{"264":1}}],["relying",{"2":{"239":1}}],["relative",{"2":{"282":1}}],["relationships",{"2":{"166":1}}],["related",{"2":{"77":1}}],["relevant",{"2":{"4":1,"176":1}}],["reinitialize",{"2":{"50":1}}],["retrieved",{"2":{"218":1}}],["retries",{"2":{"204":1,"207":2}}],["retryerr",{"2":{"55":3}}],["retryable",{"2":{"51":1}}],["retryableerr",{"2":{"51":2}}],["retryableerrors",{"2":{"51":3}}],["retryconfig",{"2":{"51":5}}],["retrying",{"2":{"50":1,"51":1,"69":1}}],["retry",{"0":{"51":1,"69":1},"2":{"50":1,"51":2,"55":1,"69":1,"295":1}}],["returns",{"2":{"145":1,"207":2}}],["return",{"2":{"3":2,"9":1,"16":2,"26":2,"40":4,"41":1,"42":1,"45":6,"46":2,"47":7,"50":13,"51":8,"52":2,"54":3,"55":11,"60":5,"67":5,"68":1,"69":3,"71":7,"72":8,"76":2,"77":5,"79":5,"80":14,"81":6,"83":4,"84":16,"85":1,"87":4,"88":6,"89":2,"91":5,"92":9,"98":1,"99":12,"103":1,"104":5,"107":13,"108":4,"110":1,"111":6,"113":5,"114":8,"117":3,"118":2,"119":3,"121":2,"122":6,"124":5,"125":5,"126":5,"128":1,"131":6,"132":4,"134":1,"135":1,"159":4,"165":3,"166":2,"168":5,"170":1,"171":1,"173":2,"174":2,"176":3,"177":2,"183":2,"184":2,"186":5,"187":4,"188":3,"190":1,"191":2,"192":2,"193":2,"195":6,"196":4,"198":3,"207":2,"208":7,"209":6,"210":7,"211":7,"213":6,"214":7,"216":1,"217":2,"218":1,"219":8,"220":1,"222":3,"228":18,"229":10,"239":3,"240":4,"241":9,"246":2,"253":5,"254":1,"266":3,"267":7,"272":7,"275":1,"276":1,"282":19,"291":1,"294":8,"297":2,"298":4}}],["re",{"2":{"20":1,"162":1,"180":1,"282":1}}],["req",{"2":{"9":2,"51":2,"55":3,"69":2,"99":2,"104":2,"107":2,"110":2,"111":2,"113":9,"117":1,"118":1,"122":2,"124":10,"125":2,"126":3,"131":2,"134":1,"137":1,"159":6,"165":2,"166":4,"168":7,"170":3,"171":4,"173":3,"174":3,"176":4,"177":3,"183":2,"184":2,"186":3,"187":3,"188":3,"190":2,"191":2,"192":2,"193":3,"195":8,"196":4,"198":4,"207":11,"208":4,"209":4,"210":2,"211":5,"213":4,"214":9,"216":1,"217":1,"218":1,"219":2,"222":1,"228":13,"229":8,"239":2,"246":2,"266":4,"267":4,"272":7,"276":1,"282":6,"291":2,"294":2,"298":2}}],["requiring",{"2":{"226":1,"249":1}}],["requirebool",{"2":{"207":1,"214":1,"282":1}}],["requirefloat",{"2":{"207":1,"208":2,"213":1,"214":1}}],["requireint",{"2":{"207":1,"214":1}}],["requirements",{"2":{"131":1,"243":1}}],["require",{"2":{"111":2}}],["requirestring",{"2":{"16":1,"26":1,"207":1,"208":1,"209":2,"211":2,"213":1,"214":1,"219":1,"246":1,"282":1,"294":1}}],["requiredpermissions",{"2":{"131":2}}],["required",{"2":{"3":5,"4":2,"16":1,"20":3,"26":1,"50":1,"84":7,"110":1,"117":6,"118":2,"119":3,"122":1,"126":1,"131":2,"163":1,"165":3,"168":1,"202":3,"204":2,"205":3,"207":1,"209":2,"213":1,"214":1,"220":1,"223":1,"228":5,"229":1,"236":1,"246":1,"266":3,"267":2,"272":1,"273":5,"282":1,"291":1,"294":2}}],["request=",{"2":{"290":1}}],["requestspersecond",{"2":{"125":2}}],["requestsnoyessseweb",{"2":{"95":1}}],["requests",{"2":{"7":2,"9":1,"100":1,"226":1}}],["request",{"0":{"211":1,"233":1,"234":1},"1":{"234":1,"235":1,"236":1},"2":{"5":1,"16":2,"26":2,"50":1,"126":1,"149":1,"153":2,"177":4,"211":4,"225":1,"226":1,"232":3,"239":2,"241":2,"258":1,"261":1,"275":2,"289":1,"290":6,"292":1}}],["reason",{"2":{"219":1}}],["realtime",{"2":{"113":5}}],["real",{"0":{"276":1},"1":{"277":1},"2":{"5":3,"39":1,"64":1,"90":1,"95":1,"105":1,"113":1,"133":1,"150":2,"241":1,"245":3,"249":2,"251":1,"262":1,"269":1,"270":2,"272":5,"273":3,"276":2,"299":1}}],["readall",{"2":{"188":1,"211":1}}],["readable",{"2":{"181":1}}],["readability",{"2":{"165":3}}],["readfile",{"2":{"183":1,"192":1,"282":1}}],["reads",{"2":{"128":1}}],["readbinaryresource",{"2":{"80":1}}],["readtextresource",{"2":{"80":1}}],["readjsonresource",{"2":{"80":1}}],["reading",{"0":{"78":1,"79":1,"80":1},"1":{"79":1,"80":1,"81":1},"2":{"75":1}}],["readresourceresult",{"2":{"79":1,"81":4,"111":1,"124":1,"183":2,"184":2,"186":1,"187":2,"188":2,"190":2,"192":2,"193":2,"195":2,"196":2,"198":2,"229":1}}],["readresourcerequestparams",{"2":{"60":1,"79":1,"111":1}}],["readresourcerequest",{"2":{"60":1,"79":1,"111":1,"124":1,"159":1,"183":1,"184":1,"186":1,"187":1,"188":1,"190":1,"191":1,"192":1,"193":1,"195":1,"196":1,"198":1,"228":1,"229":1,"272":1,"282":1}}],["readresource",{"2":{"60":1,"79":3,"80":3,"81":2,"111":2}}],["ready",{"2":{"17":1,"32":1,"115":1,"268":1}}],["readme",{"2":{"2":2,"21":3,"24":1,"181":2,"183":4,"197":2}}],["read",{"2":{"2":2,"24":1,"60":2,"75":1,"78":1,"79":3,"81":1,"103":1,"122":2,"124":3,"131":1,"166":1,"179":1,"183":1,"188":1,"211":2,"229":2,"231":2,"282":2,"298":1}}],["reviewprompt",{"2":{"4":1}}],["review",{"0":{"165":1},"2":{"4":5,"89":4,"93":1,"138":1,"163":3,"165":7,"242":1}}],["reusable",{"2":{"4":2,"18":1,"32":1,"86":1,"155":1,"158":1,"161":1,"199":1,"224":1}}],["resolve",{"2":{"282":1}}],["resourcedata",{"2":{"174":1}}],["resourceuris",{"2":{"174":2}}],["resourcecontent",{"2":{"183":1,"184":1,"187":1,"188":1,"190":1,"192":1,"193":1,"196":1}}],["resourcecontents",{"2":{"159":2,"186":1,"191":2,"195":1,"228":2,"272":2,"282":2}}],["resourcecache",{"2":{"81":6}}],["resourcemiddleware",{"2":{"124":1}}],["resourcehandler",{"2":{"111":1,"124":2,"197":1,"229":2}}],["resource",{"0":{"76":1,"77":1,"79":1,"80":1,"81":1,"173":1,"174":1,"180":1,"181":1,"197":1,"297":1},"1":{"181":1},"2":{"2":4,"9":1,"21":1,"43":1,"49":1,"60":10,"76":6,"77":10,"79":9,"80":5,"91":2,"111":2,"124":3,"153":1,"159":1,"165":1,"166":1,"174":10,"181":2,"183":1,"184":1,"186":1,"187":1,"188":1,"193":1,"194":1,"195":4,"196":1,"197":2,"229":2,"231":1,"282":1}}],["resourcescapability",{"2":{"46":1}}],["resources",{"0":{"2":1,"21":1,"75":1,"78":1,"172":1,"179":1,"182":1,"183":1,"184":1,"185":1,"187":1,"188":1,"198":1},"1":{"76":1,"77":1,"79":1,"80":1,"81":1,"173":1,"174":1,"180":1,"181":1,"182":1,"183":2,"184":2,"185":1,"186":2,"187":2,"188":2,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1},"2":{"2":3,"4":1,"7":1,"9":1,"13":1,"14":1,"18":1,"21":1,"32":1,"44":2,"46":1,"56":1,"58":1,"59":1,"60":12,"73":1,"74":1,"75":2,"76":8,"77":12,"78":1,"79":5,"91":2,"108":1,"128":3,"129":2,"137":1,"142":1,"144":2,"155":1,"157":1,"158":1,"160":1,"161":1,"174":8,"179":1,"180":1,"182":1,"185":1,"188":1,"189":1,"197":3,"198":1,"224":1,"228":1,"229":1,"231":3,"254":2,"272":1,"273":1,"290":2,"292":1}}],["respbody",{"2":{"211":2}}],["resp",{"2":{"188":3,"211":5}}],["responds",{"2":{"9":1}}],["respond",{"2":{"7":1}}],["responsewriter",{"2":{"232":3,"241":1}}],["response",{"0":{"233":1,"235":1,"236":1},"1":{"234":1,"235":1,"236":1},"2":{"5":1,"49":1,"71":3,"149":1,"188":1,"211":2,"225":1,"292":1}}],["responses",{"2":{"2":1,"145":1,"180":1,"270":1}}],["resilientsseclient",{"2":{"107":9}}],["resilientclient",{"2":{"55":5}}],["resulting",{"2":{"275":1}}],["resultdata",{"2":{"210":2,"211":2,"222":2}}],["result",{"0":{"215":1},"1":{"216":1,"217":1,"218":1,"219":1},"2":{"7":1,"30":4,"31":3,"45":3,"46":4,"50":4,"51":2,"52":4,"55":2,"60":3,"68":3,"69":2,"71":3,"79":4,"80":9,"81":9,"83":5,"85":10,"87":7,"88":2,"98":3,"99":2,"107":2,"110":3,"111":2,"117":10,"122":1,"124":4,"168":3,"198":1,"208":7,"211":1,"213":3,"217":3,"219":2,"222":1,"229":3,"235":1,"239":2,"266":10,"267":7,"287":3,"294":2,"298":3}}],["results",{"0":{"216":1,"217":1,"219":1,"222":1},"2":{"3":1,"85":5,"210":7,"220":1,"222":6,"229":1,"272":6}}],["restful",{"2":{"228":1}}],["restarted",{"2":{"99":1}}],["restarterr",{"2":{"98":9}}],["restarting",{"2":{"99":3}}],["restartchan",{"2":{"99":5}}],["restart",{"2":{"28":1,"98":9,"99":2,"132":1}}],["rest",{"2":{"5":1,"63":1,"149":1,"225":1,"226":1,"244":1,"250":1}}],["ncity",{"2":{"193":1}}],["ncode",{"2":{"165":1}}],["ncalling",{"2":{"60":1,"83":1}}],["n4",{"2":{"165":1}}],["n3",{"2":{"165":1,"174":1}}],["n2",{"2":{"165":1,"174":1}}],["n1",{"2":{"165":1,"174":1}}],["nplease",{"2":{"165":1}}],["npm",{"2":{"29":1,"292":1}}],["ninstructions",{"2":{"165":1}}],["nil",{"2":{"16":4,"26":4,"30":4,"31":2,"40":6,"41":1,"45":8,"46":2,"47":6,"50":5,"51":2,"52":2,"54":2,"55":13,"60":8,"67":6,"68":1,"69":4,"71":8,"72":6,"76":2,"77":10,"79":5,"80":16,"81":5,"83":5,"84":11,"85":1,"87":5,"88":6,"89":2,"91":3,"92":9,"97":3,"98":4,"99":14,"101":2,"102":1,"103":1,"106":3,"107":12,"108":2,"110":3,"111":1,"114":6,"117":4,"118":3,"119":1,"122":7,"124":2,"125":1,"126":3,"128":2,"129":1,"134":1,"137":2,"148":1,"149":1,"150":1,"151":2,"154":1,"159":7,"165":3,"166":3,"168":1,"170":1,"171":1,"173":3,"174":3,"176":1,"177":2,"183":3,"184":3,"186":5,"187":6,"188":5,"190":1,"191":3,"192":3,"193":1,"195":8,"196":6,"198":4,"207":2,"208":9,"209":10,"210":10,"211":14,"213":9,"214":5,"216":1,"217":3,"218":1,"219":5,"222":4,"228":19,"229":10,"232":1,"239":3,"240":1,"241":7,"246":3,"254":3,"266":6,"267":10,"272":10,"273":1,"276":3,"282":14,"283":2,"287":4,"291":3,"294":9,"295":2,"297":1,"298":6}}],["nuances",{"2":{"176":1}}],["nusing",{"2":{"87":1}}],["number",{"2":{"84":2,"202":2,"204":3,"205":1,"220":1,"266":2}}],["nreading",{"2":{"60":1,"79":1}}],["nage",{"2":{"193":1}}],["naming",{"2":{"165":1}}],["name",{"2":{"16":5,"26":5,"30":3,"31":2,"45":4,"46":2,"50":3,"52":2,"60":5,"68":1,"71":2,"72":4,"76":1,"83":6,"84":5,"85":6,"87":7,"88":3,"98":1,"110":1,"111":7,"118":8,"124":3,"131":1,"132":2,"141":1,"159":1,"177":3,"181":1,"187":1,"193":3,"197":2,"204":2,"207":4,"213":5,"214":6,"218":3,"219":2,"228":20,"234":1,"266":2,"267":4,"287":3,"289":2,"290":2}}],["navailable",{"2":{"60":1}}],["ntoe",{"2":{"30":1}}],["n",{"2":{"16":1,"26":1,"30":3,"31":1,"60":8,"76":3,"77":2,"79":6,"83":5,"85":3,"87":9,"89":2,"91":2,"92":4,"113":3,"135":17,"159":1,"165":6,"174":10,"246":2,"266":1,"267":1,"282":1,"298":2}}],["net",{"2":{"40":1,"97":1,"228":1}}],["networksingle",{"2":{"245":1}}],["networkrequired",{"2":{"113":7}}],["network",{"0":{"261":1},"2":{"5":1,"35":1,"110":1,"253":1,"256":1,"257":1,"260":1,"263":1,"264":1}}],["needs",{"2":{"170":1}}],["need",{"0":{"24":1},"2":{"75":1,"159":1,"269":1,"270":1}}],["needed",{"0":{"240":1},"2":{"6":1,"239":1,"282":1}}],["next",{"0":{"18":1,"32":1,"56":1,"73":1,"93":1,"138":1,"155":1,"160":1,"178":1,"199":1,"224":1,"242":1,"262":1,"268":1,"278":1,"299":1},"2":{"124":4,"125":2,"126":2,"229":6,"241":2}}],["newapplication",{"2":{"267":2}}],["newauditlogger",{"2":{"137":1}}],["newauthmiddleware",{"2":{"126":1,"137":1,"241":1}}],["newhttpsessionmanager",{"2":{"240":1}}],["newencoder",{"2":{"232":2}}],["newbusinesshooks",{"2":{"137":1}}],["newjwtvalidator",{"2":{"137":1}}],["newcustomnotifier",{"2":{"135":1,"137":1}}],["newclientfactory",{"2":{"114":2}}],["newclienthealthmonitor",{"2":{"54":1}}],["newclient",{"2":{"41":1,"55":4}}],["newprometheusmetrics",{"2":{"137":1}}],["newpromptprocessor",{"2":{"88":1,"89":2}}],["newprompt",{"2":{"4":2,"159":1,"163":1,"165":1}}],["newpermissionfilter",{"2":{"131":1,"137":1}}],["newreader",{"2":{"211":1}}],["newrequestwithcontext",{"2":{"211":1}}],["newresilientsseclient",{"2":{"107":1}}],["newresilientclient",{"2":{"55":1}}],["newresourcecache",{"2":{"81":1}}],["newresource",{"2":{"2":2,"21":1,"111":1,"159":1,"181":1,"183":1,"184":1,"186":1,"187":1,"188":1,"197":1,"228":1,"272":1,"282":1}}],["newratelimitmiddleware",{"2":{"125":1,"137":1}}],["newlimiter",{"2":{"125":1}}],["newloggingmiddleware",{"2":{"124":1,"137":1}}],["newllmclient",{"2":{"71":1}}],["newllmapplication",{"2":{"71":1}}],["newtextcontent",{"2":{"159":1,"165":1,"166":1,"168":1,"170":6,"171":3,"173":1,"174":1,"176":1,"177":1}}],["newtelemetryhooks",{"2":{"128":1,"137":1}}],["newtestclient",{"2":{"111":2}}],["newtypedtoolhandler",{"2":{"117":1}}],["newticker",{"2":{"54":1,"240":1,"272":1}}],["newtoolresultjson",{"2":{"118":1,"239":1}}],["newtoolresulttext",{"2":{"16":1,"26":1,"110":1,"111":1,"117":1,"122":1,"134":1,"159":1,"208":1,"209":1,"210":1,"211":1,"213":1,"216":1,"217":1,"222":1,"228":3,"246":1,"266":1,"267":2,"272":2,"276":1,"282":1,"291":1,"294":1,"298":1}}],["newtoolresulterror",{"2":{"16":1,"26":1,"117":2,"122":1,"207":1,"208":5,"209":5,"210":5,"211":6,"213":5,"214":1,"217":1,"219":2,"222":1,"266":1,"267":1,"282":4}}],["newtool",{"2":{"3":2,"16":1,"20":1,"26":1,"110":1,"111":1,"117":1,"122":1,"159":1,"202":1,"209":1,"220":1,"223":2,"228":3,"246":1,"266":1,"267":2,"272":2,"273":3,"282":1,"291":1}}],["newmanagedstdioclient",{"2":{"99":1}}],["newmanagedclient",{"2":{"47":1}}],["newmultiserverclient",{"2":{"72":1}}],["newmcpclientmanager",{"2":{"67":1}}],["newmcpserver",{"2":{"7":1,"8":1,"9":1,"16":1,"22":1,"26":1,"110":1,"111":1,"117":1,"122":1,"137":1,"140":1,"141":1,"142":1,"144":2,"145":1,"146":1,"148":1,"149":1,"150":1,"152":1,"153":1,"154":1,"159":1,"165":1,"183":1,"197":1,"209":1,"228":1,"229":1,"232":1,"246":1,"254":1,"261":1,"266":1,"267":1,"272":1,"273":1,"282":1,"283":1,"291":1,"295":1}}],["newservemux",{"2":{"232":1}}],["newsessionmanager",{"2":{"121":1,"122":1,"137":1}}],["newslacknotifier",{"2":{"137":1}}],["newsseserver",{"2":{"150":1,"151":1,"152":1,"246":1,"253":1,"254":1,"272":1,"273":1,"275":1}}],["newsseeventhandler",{"2":{"108":1}}],["newsseclient",{"2":{"106":1,"107":1}}],["newssemcpclient",{"2":{"39":1,"42":1,"45":1,"47":2,"64":1,"67":1,"72":1,"114":1}}],["newsubscriptionmanager",{"2":{"92":2}}],["newstreamablehttp",{"2":{"41":1}}],["newstreamablehttpclientpool",{"2":{"104":1}}],["newstreamablehttpclient",{"2":{"31":1,"39":1,"47":1,"63":1,"67":1,"71":1,"72":1,"101":1,"102":1,"103":1,"104":1,"114":1}}],["newstreamablehttpserver",{"2":{"23":1,"149":1,"151":1,"152":1,"228":1,"229":1,"246":1,"253":1,"254":1}}],["newstdiomcpclient",{"2":{"30":2,"39":1,"40":2,"60":1,"62":1,"67":1,"97":1}}],["newstdioclientwithoptions",{"2":{"99":1,"114":1}}],["newstdioclient",{"2":{"7":1,"287":1}}],["newinprocessclient",{"2":{"23":1,"39":1,"65":1,"110":1,"111":1,"253":1,"266":1,"267":1}}],["new",{"2":{"3":1,"16":1,"26":1,"49":10,"55":2,"85":1,"98":3,"99":4,"119":1,"137":1,"176":1,"193":1,"209":1,"228":1,"291":1}}],["noerror",{"2":{"111":2}}],["non",{"2":{"51":1}}],["now",{"2":{"17":1,"18":1,"32":1,"81":1,"118":1,"121":1,"124":2,"132":1,"135":2,"155":1,"159":3,"191":1,"198":1,"217":1,"228":2,"232":1,"240":9,"276":1}}],["normalized",{"2":{"8":1}}],["no",{"2":{"5":2,"80":4,"110":1,"131":1,"245":1,"256":1,"260":1,"267":1}}],["note",{"2":{"241":1,"253":1,"277":1}}],["notify",{"2":{"137":1,"153":1,"283":1,"295":1}}],["notifier",{"2":{"129":5,"137":1}}],["notificationhandler",{"2":{"92":5}}],["notification",{"2":{"91":23,"92":13,"106":3,"107":1,"108":13,"129":1,"134":3,"135":8,"272":3,"276":3,"277":3}}],["notifications",{"0":{"133":1,"134":1,"135":1,"276":1},"1":{"134":1,"135":1,"277":1},"2":{"90":1,"91":8,"92":7,"106":4,"108":6,"150":1,"272":2,"276":2}}],["not",{"2":{"2":1,"14":1,"49":2,"50":3,"68":1,"72":1,"84":1,"91":1,"92":1,"99":1,"107":2,"114":3,"165":1,"186":1,"187":2,"195":2,"209":1,"219":1,"228":2,"232":1,"241":1,"294":1}}],["==",{"2":{"30":1,"50":1,"51":2,"54":1,"69":1,"77":1,"80":4,"84":2,"92":1,"99":1,"107":2,"113":1,"114":1,"117":1,"126":1,"131":1,"132":1,"152":1,"165":1,"184":1,"186":1,"208":1,"213":1,"223":1,"228":4,"229":2,"246":1,"266":1,"267":1,"295":1,"298":1}}],["=",{"2":{"2":2,"3":2,"4":2,"7":4,"8":1,"9":4,"16":6,"20":1,"21":1,"22":1,"26":6,"30":11,"31":6,"39":4,"40":5,"41":3,"42":1,"45":14,"46":3,"47":8,"49":10,"50":14,"51":8,"52":6,"54":5,"55":19,"60":19,"62":1,"63":1,"64":1,"65":1,"67":8,"68":2,"69":5,"71":13,"72":12,"76":4,"77":14,"79":11,"80":14,"81":5,"83":9,"84":22,"85":8,"87":10,"88":8,"89":6,"91":8,"92":19,"97":7,"98":12,"99":19,"101":6,"102":4,"103":4,"104":4,"106":9,"107":19,"108":7,"110":8,"111":8,"113":3,"114":15,"117":9,"118":4,"119":5,"121":2,"122":10,"124":10,"125":5,"126":4,"128":2,"129":1,"131":8,"132":6,"134":3,"135":5,"137":16,"141":1,"142":1,"144":2,"145":1,"146":1,"148":3,"149":4,"150":4,"151":6,"152":6,"153":3,"154":3,"159":15,"163":1,"165":11,"166":5,"168":16,"170":4,"171":11,"173":8,"174":9,"176":5,"177":9,"181":1,"183":3,"184":3,"186":6,"187":9,"188":6,"190":1,"191":3,"192":3,"193":3,"195":4,"196":5,"197":3,"198":4,"202":1,"207":12,"208":10,"209":13,"210":13,"211":20,"213":8,"214":15,"216":1,"217":3,"218":1,"219":2,"220":1,"222":6,"223":2,"228":22,"229":14,"232":7,"239":4,"240":8,"241":10,"246":8,"253":5,"254":11,"261":1,"266":16,"267":18,"272":23,"273":4,"275":1,"276":4,"282":16,"283":7,"287":10,"291":7,"294":6,"295":8,"297":4,"298":8}}],["wronly|os",{"2":{"291":1}}],["wrong",{"2":{"207":1,"214":1}}],["writefile",{"2":{"209":1}}],["writestring",{"2":{"166":5,"174":6,"176":7,"298":1}}],["write",{"2":{"55":1,"103":1,"119":2}}],["writing",{"2":{"4":1}}],["wg",{"2":{"85":4,"92":4,"99":4,"108":4}}],["w",{"2":{"40":2,"45":3,"46":1,"51":1,"55":3,"60":4,"67":1,"69":1,"71":1,"72":2,"76":1,"77":1,"79":1,"80":2,"83":1,"84":3,"87":1,"92":1,"99":1,"107":1,"118":1,"126":1,"166":1,"173":1,"174":1,"183":1,"186":1,"187":1,"188":2,"195":1,"214":1,"228":2,"229":1,"232":12,"241":5,"254":3,"282":1,"294":1}}],["would",{"2":{"166":1,"229":3,"241":1,"253":1,"254":1,"273":1}}],["won",{"0":{"34":1}}],["world",{"0":{"26":1},"2":{"16":2,"26":3,"28":2,"30":2,"31":2,"111":2,"191":1}}],["workflow",{"2":{"248":1,"280":1}}],["workflows",{"2":{"4":1,"162":1}}],["work",{"2":{"134":1,"222":1,"226":1}}],["working",{"2":{"32":1}}],["works",{"2":{"8":2,"246":1}}],["want",{"2":{"162":1}}],["was",{"2":{"52":1}}],["waitgroup",{"2":{"85":1,"92":1,"99":1,"108":1}}],["waiting",{"2":{"47":1}}],["wait",{"2":{"47":1,"50":1,"51":1,"52":1,"85":1,"92":1,"99":2,"108":1,"137":1,"254":1}}],["waitforready",{"2":{"47":1}}],["walks",{"2":{"25":1}}],["way",{"2":{"5":1,"12":1,"201":1,"245":1}}],["wildcards",{"2":{"220":1}}],["will",{"2":{"15":1,"30":1}}],["windows",{"2":{"28":1,"286":1}}],["withbaseurl",{"2":{"273":1,"275":1}}],["withboolean",{"2":{"204":1,"282":1}}],["withcontext",{"2":{"241":1}}],["withcancel",{"2":{"47":1,"52":1,"67":1,"92":1,"99":1,"107":1,"108":1}}],["withlogging",{"2":{"229":1,"273":1,"283":1,"291":1}}],["withobject",{"2":{"204":1,"273":1}}],["without",{"2":{"131":1,"239":1,"264":1}}],["witharray",{"2":{"204":1,"220":1,"273":1}}],["withargument",{"2":{"159":1}}],["withallcapabilities",{"2":{"111":1}}],["withkeepaliveinterval",{"2":{"273":1,"275":1}}],["withkeepalive",{"2":{"151":1}}],["withmessageendpoint",{"2":{"151":1,"275":1}}],["withmimetype",{"2":{"2":2,"21":1,"159":1,"181":1,"183":1,"184":1,"186":1,"187":1,"188":1,"197":1,"228":1,"272":1,"282":1}}],["withssecontextfunc",{"2":{"275":1}}],["withsseendpoint",{"2":{"151":1,"275":1}}],["withstaticbasepath",{"2":{"273":1,"275":1}}],["withstateless",{"2":{"151":1,"229":1}}],["withstring",{"2":{"3":4,"16":1,"20":1,"26":1,"110":1,"117":1,"122":1,"159":1,"202":1,"204":1,"205":2,"209":3,"220":1,"223":1,"228":4,"246":1,"266":1,"267":2,"272":1,"273":5,"282":1,"291":1}}],["withendpointpath",{"2":{"151":1,"229":1}}],["withvalue",{"2":{"126":1,"229":1,"241":1}}],["withinteger",{"2":{"204":1}}],["withinstructions",{"2":{"146":1}}],["within",{"2":{"119":1,"263":1,"264":1,"267":1,"282":1}}],["withtoolmiddleware",{"2":{"261":2}}],["withtoolfilter",{"2":{"137":1}}],["withtoolhandlermiddleware",{"2":{"137":1}}],["withtoolcapabilities",{"2":{"16":1,"22":1,"26":1,"117":1,"122":1,"137":1,"142":1,"144":2,"159":1,"209":1,"228":1,"229":1,"246":1,"266":1,"267":1,"272":1,"273":1,"282":1,"283":1,"291":1}}],["withtimeout",{"2":{"50":2,"52":1,"54":1,"137":1,"196":1,"210":1,"283":1,"294":1}}],["withheartbeatinterval",{"2":{"229":1}}],["withheaders",{"2":{"114":1}}],["withhttpoauth",{"2":{"103":1}}],["withhttpbasicclient",{"2":{"41":1,"102":1}}],["withhttpheaders",{"2":{"41":1,"102":1,"114":1}}],["withhttptimeout",{"2":{"41":1,"102":1}}],["withhooks",{"2":{"9":1,"22":1,"122":1,"137":1,"142":1,"153":1}}],["withresourcecapabilities",{"2":{"137":1,"142":1,"144":2,"159":1,"183":1,"197":1,"228":1,"229":1,"272":1,"273":1,"282":1,"283":1}}],["withresourcedescription",{"2":{"2":2,"21":1,"159":1,"181":1,"183":1,"184":1,"186":1,"187":1,"188":1,"197":1,"228":1,"272":1,"282":1}}],["withretry",{"2":{"51":2}}],["withrecovery",{"2":{"22":1,"137":1,"142":1,"145":1,"154":1,"261":1,"295":1}}],["withpromptcapabilities",{"2":{"137":1,"142":1,"144":2,"159":1,"165":1,"229":1,"273":1,"283":1}}],["withpromptargument",{"2":{"4":4,"163":2,"165":3}}],["withpromptdescription",{"2":{"4":2,"159":1,"163":1,"165":1}}],["withnumber",{"2":{"3":2,"20":2,"117":2,"202":2,"204":1,"205":1,"220":1,"228":3,"266":2,"272":2}}],["withdescription",{"2":{"3":2,"16":1,"20":1,"26":1,"110":1,"111":1,"117":1,"122":1,"159":1,"202":1,"209":1,"220":1,"223":2,"228":3,"246":1,"266":1,"267":2,"272":2,"273":3,"282":1,"291":1}}],["with",{"0":{"28":1,"29":1,"51":1,"102":1,"107":1,"142":1},"2":{"1":1,"2":1,"3":1,"4":1,"8":2,"9":1,"12":1,"13":2,"14":1,"16":1,"17":1,"22":1,"25":1,"26":1,"29":1,"38":1,"40":1,"41":1,"46":1,"50":1,"51":2,"52":1,"57":1,"68":1,"71":1,"74":1,"82":1,"96":1,"100":1,"102":1,"103":1,"105":1,"109":1,"117":1,"120":1,"122":1,"137":3,"139":1,"140":1,"151":2,"153":1,"156":1,"157":1,"159":1,"160":1,"168":1,"170":3,"171":3,"173":1,"185":1,"186":1,"189":1,"201":1,"204":1,"207":1,"209":1,"210":1,"211":1,"213":3,"214":1,"220":1,"225":1,"226":2,"228":2,"232":1,"246":1,"250":1,"254":1,"261":1,"264":3,"270":3,"272":2,"275":1,"282":1,"283":1,"291":3,"292":1,"294":1,"295":1}}],["whether",{"2":{"204":1}}],["where",{"2":{"29":1,"162":1,"187":1,"280":1,"292":1}}],["when",{"0":{"240":1},"2":{"6":1,"7":1,"9":1,"231":1}}],["why",{"0":{"13":1}}],["what",{"0":{"12":1,"18":1,"32":1,"59":1,"158":1},"2":{"75":1,"78":1,"144":1,"170":1}}],["while",{"2":{"6":1,"12":1,"92":1,"157":1}}],["welcome",{"2":{"129":1}}],["webreq",{"2":{"113":2}}],["website",{"2":{"28":1}}],["web",{"2":{"5":3,"29":1,"39":2,"63":1,"64":1,"113":2,"149":1,"150":1,"225":1,"226":2,"244":1,"245":1,"249":2,"250":1,"262":2,"268":1,"269":2,"270":2,"278":1,"292":1,"299":2}}],["weather",{"2":{"2":1,"85":2,"188":8}}],["png",{"2":{"192":2}}],["plugins",{"2":{"280":1}}],["plugin",{"2":{"264":1}}],["please",{"2":{"159":1,"165":1,"166":2,"170":2,"173":5,"174":4,"176":4,"177":2}}],["plain",{"2":{"190":2,"193":1,"282":2}}],["placeholder",{"2":{"177":2,"228":4,"229":5,"254":1,"272":1,"273":1,"282":1,"283":6}}],["placeholders",{"2":{"4":1}}],["playground",{"2":{"119":1}}],["pm",{"2":{"132":1}}],["public",{"2":{"226":2,"250":1}}],["put",{"2":{"104":2,"232":1}}],["purpose",{"2":{"7":2}}],["pipes",{"2":{"256":1}}],["pipesnonostreamablehttpweb",{"2":{"95":1}}],["pipe",{"2":{"98":2,"257":1,"285":1}}],["pp",{"2":{"88":5}}],["points",{"2":{"173":1}}],["pointer",{"2":{"92":2}}],["polite",{"2":{"170":1}}],["potential",{"2":{"159":2,"165":1,"166":2,"177":2}}],["populate",{"2":{"104":1}}],["pool",{"2":{"104":14}}],["pooling",{"0":{"104":1},"2":{"258":1,"297":1}}],["pow",{"2":{"51":1}}],["powerful",{"2":{"32":1,"115":1,"156":1}}],["ports",{"2":{"253":1}}],["port",{"2":{"34":1,"149":1,"150":1,"152":4,"246":10,"253":4}}],["possible",{"2":{"26":1}}],["post",{"2":{"3":1,"231":7,"232":1,"234":1}}],["persistence",{"2":{"239":1}}],["personal",{"2":{"280":1}}],["person",{"2":{"16":1,"26":1}}],["perfect",{"2":{"180":1,"225":1,"264":1,"269":1,"279":1}}],["performoperation",{"2":{"294":1}}],["performance",{"0":{"255":1,"296":1},"1":{"256":1,"257":1,"258":1,"297":1,"298":1},"2":{"65":1,"113":6,"129":1,"165":4,"243":1,"251":1}}],["performclientoperations",{"2":{"45":2}}],["perform",{"2":{"3":2,"20":1,"117":1,"166":1,"200":1,"201":1,"202":2,"208":1,"266":2,"294":1}}],["permissionfilter",{"2":{"131":5}}],["permission",{"0":{"131":1},"2":{"49":1,"50":1,"131":2}}],["permissions",{"2":{"34":1,"121":4,"122":4,"130":1,"131":1,"195":1,"260":1,"261":1}}],["per",{"0":{"121":1},"2":{"9":1,"120":1,"261":1}}],["pagination",{"2":{"228":1}}],["pay",{"2":{"166":1}}],["panics",{"2":{"145":2,"295":1}}],["panic",{"2":{"142":1,"145":1,"154":1,"267":1,"295":2}}],["parent",{"2":{"260":1,"280":1}}],["parts",{"2":{"186":4}}],["particularly",{"2":{"162":1}}],["parsewithclaims",{"2":{"241":1}}],["parsed",{"2":{"214":3}}],["parsedburi",{"2":{"187":1}}],["parse",{"2":{"80":1,"91":2,"214":1}}],["param",{"2":{"50":1,"68":1}}],["params",{"2":{"30":1,"31":1,"45":1,"46":1,"50":1,"52":2,"60":2,"68":1,"71":1,"72":1,"79":1,"83":1,"87":1,"88":1,"91":2,"98":1,"110":2,"111":3,"122":1,"124":6,"159":2,"165":1,"166":3,"168":6,"170":2,"171":3,"173":2,"174":2,"176":3,"177":2,"183":1,"184":1,"186":2,"187":2,"188":2,"190":1,"191":1,"192":1,"193":2,"195":7,"196":3,"198":2,"210":6,"228":2,"229":2,"234":1,"236":1,"239":3,"266":2,"267":2,"272":1,"282":2,"287":2,"289":3,"290":4}}],["parameters",{"2":{"4":1,"50":1,"82":1,"168":1,"185":1,"201":1,"204":6,"207":2,"208":1,"213":2,"214":2,"294":1}}],["parameter",{"0":{"168":1,"204":1,"207":1,"213":1},"2":{"3":1,"36":1,"116":1,"186":1,"204":1,"206":1,"207":1,"211":1,"213":2,"294":1}}],["parameterized",{"2":{"3":1,"185":1}}],["package",{"2":{"16":1,"26":1,"30":1,"31":1,"40":1,"60":1,"97":1,"117":1,"141":1,"159":1,"228":1,"246":1,"266":1,"272":1,"282":1,"283":1,"287":1}}],["pattern",{"0":{"208":1},"2":{"77":3,"205":1}}],["patterns",{"0":{"39":1,"66":1,"70":1,"175":1,"195":1,"221":1,"233":1},"1":{"67":1,"68":1,"69":1,"71":1,"72":1,"176":1,"177":1,"222":1,"223":1,"234":1,"235":1,"236":1},"2":{"9":1,"159":1,"165":1,"166":2,"226":1,"243":1,"278":1,"282":1,"299":1}}],["paths",{"2":{"35":1,"282":2}}],["path",{"2":{"2":1,"3":1,"28":1,"30":1,"40":2,"60":1,"97":1,"119":7,"209":9,"275":1,"282":32,"286":1,"287":2,"289":1,"290":1,"294":14,"297":2,"298":3}}],["passive",{"2":{"7":1}}],["practical",{"2":{"176":1}}],["practice",{"2":{"165":1,"241":1,"253":1}}],["practices",{"2":{"4":1,"89":1,"163":1,"165":5,"171":1,"260":1}}],["privilege",{"2":{"260":1}}],["price",{"2":{"205":2,"207":4,"214":4}}],["primary",{"2":{"201":1}}],["priority",{"2":{"177":1,"205":2}}],["prioritization",{"2":{"171":1}}],["println",{"2":{"47":1,"50":3,"52":2,"68":1,"89":1,"91":4,"98":3,"99":2,"107":2,"128":2,"137":2,"153":1,"154":1,"228":1,"229":1,"232":1,"246":1,"254":3,"272":1,"273":1,"283":1,"291":1}}],["print",{"2":{"30":1}}],["printf",{"2":{"9":2,"16":1,"26":1,"30":3,"31":1,"45":4,"46":2,"47":1,"50":16,"51":1,"52":4,"54":1,"60":8,"68":3,"69":1,"76":3,"77":4,"79":8,"83":7,"85":3,"87":11,"89":4,"91":6,"92":5,"97":1,"98":5,"99":1,"101":1,"106":2,"107":1,"110":1,"113":3,"122":2,"124":6,"128":2,"137":2,"153":4,"159":1,"229":4,"246":2,"254":4,"266":1,"267":1,"272":2,"276":1,"283":1,"287":3,"291":2}}],["proxy",{"2":{"188":1}}],["productivity",{"2":{"280":1}}],["production",{"0":{"136":1,"137":1},"1":{"137":1},"2":{"32":1,"115":1,"137":1,"261":1,"268":1}}],["products",{"2":{"187":1}}],["product",{"2":{"171":2,"205":1,"220":2}}],["professional",{"2":{"168":1,"170":1}}],["profile",{"2":{"2":2,"186":3,"197":1,"223":2,"228":2}}],["problems",{"2":{"166":1}}],["providing",{"2":{"157":1,"158":1,"263":1}}],["provided",{"2":{"166":1,"171":1}}],["provides",{"2":{"6":1,"12":1,"38":1,"58":1,"95":1,"206":1,"213":1,"225":1}}],["provide",{"2":{"3":2,"4":1,"75":1,"82":1,"86":1,"105":1,"109":1,"116":1,"144":4,"155":1,"161":1,"162":1,"165":2,"166":1,"170":1,"173":3,"174":1,"176":2,"177":1,"179":1,"200":1,"220":1,"222":1}}],["progressdata",{"2":{"277":1}}],["progressnotification",{"2":{"91":1}}],["progress",{"2":{"91":9,"92":2,"108":1,"134":3,"222":1,"270":1,"272":4,"277":1}}],["programming",{"2":{"4":1,"163":1,"165":1}}],["propschema",{"2":{"84":2}}],["properties",{"2":{"84":3,"204":1}}],["proper",{"2":{"9":1,"34":1,"43":1,"48":1,"145":1,"153":1,"154":1,"194":1,"254":1,"261":1}}],["processchunk",{"2":{"298":1}}],["processwithmcp",{"2":{"267":2}}],["processwithstate",{"2":{"9":1}}],["processes",{"2":{"280":1}}],["processembedded",{"2":{"245":1}}],["processed",{"2":{"110":1,"217":1,"222":1,"272":1,"298":2}}],["processrequest",{"2":{"239":1}}],["processuser",{"2":{"213":1}}],["processuserquery",{"2":{"71":1}}],["processtesting",{"2":{"95":1}}],["processtoolresult",{"2":{"68":1}}],["processnotification",{"2":{"92":2}}],["processor",{"2":{"89":4}}],["processprompt",{"2":{"88":2,"89":2}}],["processing",{"0":{"88":1},"2":{"134":1,"153":1,"229":1,"267":1,"270":1,"272":1,"275":1}}],["process",{"0":{"46":1,"65":1,"99":1,"109":1,"110":1,"111":1,"251":1,"263":1,"266":1,"295":1},"1":{"110":1,"111":1,"264":1,"265":1,"266":1,"267":1,"268":1},"2":{"14":1,"23":1,"39":1,"46":1,"50":1,"65":1,"68":1,"79":1,"98":6,"99":1,"109":2,"110":1,"206":1,"210":1,"213":1,"239":1,"242":1,"244":1,"245":1,"253":2,"256":1,"257":1,"258":1,"260":2,"262":1,"263":2,"264":2,"266":1,"267":1,"278":1,"285":2,"298":2,"299":1}}],["pros",{"2":{"5":3,"260":1}}],["prompttemplates",{"2":{"177":2}}],["prompttemplate",{"2":{"177":2}}],["prompttype",{"2":{"174":3}}],["promptname",{"2":{"88":2}}],["promptmessage",{"2":{"88":4,"89":2,"159":1,"165":1,"166":1,"168":1,"170":3,"171":3,"173":1,"174":1,"176":1,"177":1}}],["promptprocessor",{"2":{"88":6}}],["prompt",{"0":{"87":1,"88":1,"89":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"175":1},"1":{"163":1,"165":1,"166":1,"168":1,"176":1,"177":1},"2":{"4":2,"18":1,"32":1,"50":1,"87":14,"88":1,"89":6,"144":1,"159":1,"163":2,"165":2,"168":3,"173":1,"174":2,"176":9,"231":1}}],["promptscapability",{"2":{"46":1}}],["prompts",{"0":{"4":1,"86":1,"161":1,"176":1,"177":1},"1":{"87":1,"88":1,"89":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1},"2":{"4":2,"7":1,"13":1,"14":1,"18":1,"32":1,"44":1,"46":1,"56":1,"58":1,"59":1,"73":1,"74":1,"86":1,"87":12,"142":1,"144":2,"155":1,"157":1,"158":1,"161":1,"162":1,"199":1,"224":1,"231":3,"254":1}}],["project",{"2":{"2":2,"15":1,"21":2,"181":2,"183":2,"197":1}}],["protocolversion",{"2":{"46":1,"266":1,"267":1,"287":1,"289":1,"290":1}}],["protocols",{"2":{"8":1}}],["protocol",{"0":{"1":1},"1":{"2":1,"3":1,"4":1,"5":1},"2":{"1":1,"5":1,"6":1,"8":2,"12":1,"14":1,"15":1,"49":3,"50":3,"245":1,"292":1}}],["prefs",{"2":{"239":1}}],["predetermined",{"2":{"182":1}}],["predictive",{"2":{"166":2}}],["presented",{"2":{"173":1}}],["preview",{"2":{"166":2}}],["prevention",{"2":{"177":1}}],["preventing",{"2":{"116":1}}],["prevent",{"2":{"119":1,"145":1,"261":1}}],["pre",{"2":{"2":1,"104":1}}],["html",{"2":{"282":2}}],["httpreq",{"2":{"211":3}}],["httpsession",{"2":{"240":6}}],["httpsessionmanager",{"2":{"240":6}}],["httpserver",{"2":{"149":2,"151":2,"152":2,"228":2,"229":2,"246":2,"253":2,"254":2}}],["https",{"2":{"102":1,"103":1,"188":1,"214":2,"261":1}}],["httptransport",{"2":{"41":1}}],["http",{"0":{"149":1,"211":1,"261":1},"2":{"5":4,"8":1,"31":1,"39":2,"40":1,"41":2,"63":1,"64":1,"67":1,"72":1,"97":1,"100":1,"101":1,"102":2,"103":1,"106":1,"114":2,"149":4,"150":1,"151":1,"152":1,"188":1,"211":3,"214":2,"226":2,"228":1,"232":12,"241":11,"242":1,"244":1,"250":1,"256":2,"257":1,"258":1,"268":1,"273":1,"275":4,"278":1,"299":1}}],["hypothetical",{"2":{"241":1}}],["human",{"2":{"181":1}}],["hints",{"2":{"220":1}}],["histogram",{"2":{"128":2}}],["higher",{"2":{"159":1}}],["high",{"2":{"14":1,"65":1,"113":5,"205":1,"251":2}}],["h",{"2":{"92":2,"128":24,"129":10,"198":10,"211":2}}],["here",{"2":{"60":1,"159":1,"170":1}}],["healthy",{"2":{"54":4,"232":1}}],["health",{"0":{"54":1},"2":{"54":2,"231":2}}],["header",{"2":{"41":2,"42":2,"211":2,"232":2,"241":3}}],["headers",{"2":{"41":1,"42":1,"107":5,"114":14,"211":7,"275":1}}],["hellohandler",{"2":{"16":2,"26":2}}],["hello",{"0":{"26":1},"2":{"16":4,"26":8,"28":3,"30":1,"31":1,"89":1,"111":2,"170":1,"191":1}}],["helpful",{"2":{"170":1}}],["helps",{"2":{"153":1}}],["helper",{"0":{"214":1},"2":{"80":1,"107":1,"206":1,"207":1,"208":1,"213":1,"228":2,"229":1,"254":1,"272":1,"273":1,"282":1,"283":1}}],["help",{"0":{"24":1},"2":{"4":1,"15":1,"161":1,"170":1,"220":1}}],["home",{"2":{"282":1}}],["hours",{"2":{"132":1}}],["hour",{"2":{"132":4,"297":1}}],["hooks",{"0":{"127":1,"128":1,"129":1},"1":{"128":1,"129":1},"2":{"9":1,"115":1,"122":5,"137":1,"142":1,"153":9,"155":1,"158":1,"178":1,"199":1,"224":1}}],["how",{"0":{"285":1},"2":{"0":1,"5":1,"38":1,"57":1,"60":1,"74":1,"94":1,"139":1,"155":1,"156":1,"160":1,"178":1}}],["happens",{"2":{"45":1}}],["have",{"2":{"18":1,"32":1,"182":1,"201":1}}],["handling",{"0":{"48":1,"50":1,"68":1,"91":1,"98":1,"108":1,"154":1,"168":1,"194":1,"196":1,"293":1,"294":1},"1":{"49":1,"50":1,"51":1,"52":1,"195":1,"196":1,"294":1,"295":1},"2":{"8":1,"36":1,"37":1,"43":1,"48":1,"68":1,"73":1,"92":1,"137":1,"154":2,"194":1,"254":1,"283":1,"285":1,"295":1}}],["handleecho",{"2":{"246":2}}],["handleupdateuser",{"2":{"232":1}}],["handleusersapi",{"2":{"232":2}}],["handleuserresource",{"2":{"228":2}}],["handleuser",{"2":{"197":1}}],["handleuserprofile",{"2":{"186":2}}],["handlelargefile",{"2":{"298":1}}],["handlelistfiles",{"2":{"282":2}}],["handlelistusers",{"2":{"232":1}}],["handlelongrunningtool",{"2":{"134":1}}],["handlefilecontent",{"2":{"282":2}}],["handlefileupload",{"2":{"232":1}}],["handlefunc",{"2":{"232":4}}],["handleflexibleprompt",{"2":{"168":1}}],["handlegetuser",{"2":{"228":2}}],["handlegetprofile",{"2":{"223":1}}],["handlegettime",{"2":{"159":2}}],["handlejsontool",{"2":{"217":1}}],["handlejsonresource",{"2":{"191":1}}],["handlevalidatedtool",{"2":{"213":1}}],["handlehttprequest",{"2":{"211":1}}],["handlemetrics",{"2":{"232":2}}],["handlemessagenotification",{"2":{"91":2}}],["handlemulticontenttool",{"2":{"218":1}}],["handlemultiformatresource",{"2":{"193":1}}],["handleimageresource",{"2":{"192":1}}],["handleweatherdata",{"2":{"188":2}}],["handleappconfig",{"2":{"184":2}}],["handleanalyzelogs",{"2":{"159":2}}],["handlecurrentmetrics",{"2":{"272":2}}],["handlecreatefile",{"2":{"209":2}}],["handlecreateuserapi",{"2":{"232":1}}],["handlecreateuser",{"2":{"118":1,"228":2}}],["handlecalculate",{"2":{"208":1,"266":2}}],["handlecalculatetyped",{"2":{"117":2}}],["handleconditionalprompt",{"2":{"176":1}}],["handleconversationprompt",{"2":{"170":1}}],["handleconfig",{"2":{"159":2,"197":1}}],["handlecodereview",{"2":{"165":2}}],["handleclienterrors",{"2":{"50":3,"68":1}}],["handletoolwitherrors",{"2":{"219":1,"294":1}}],["handletoolupdatenotification",{"2":{"91":2}}],["handletexttool",{"2":{"216":1}}],["handletextresource",{"2":{"190":1}}],["handletemplateprompt",{"2":{"177":1}}],["handletableaccess",{"2":{"7":1}}],["handleprogressnotification",{"2":{"91":2}}],["handlenotifications",{"2":{"92":2}}],["handlenotification",{"2":{"91":2,"108":2}}],["handle",{"2":{"91":1,"106":1,"120":1,"195":1,"209":1,"211":1,"244":1,"283":1,"294":1,"295":1}}],["handlerfunc",{"2":{"241":1}}],["handlerealtimetool",{"2":{"276":1}}],["handlereadme",{"2":{"197":1}}],["handlereadmefile",{"2":{"183":2}}],["handleresource",{"2":{"198":1}}],["handleresourcewithtimeout",{"2":{"196":1}}],["handleresourcewitherrors",{"2":{"195":1}}],["handleresourceembeddedprompt",{"2":{"173":1}}],["handleresourceupdatenotification",{"2":{"91":2}}],["handlerolebasedprompt",{"2":{"171":1}}],["handlers",{"0":{"206":1},"1":{"207":1,"208":1,"209":1,"210":1,"211":1},"2":{"92":14,"108":7,"145":1,"206":1}}],["handler",{"0":{"208":1},"2":{"16":1,"26":1,"92":7,"108":12,"111":4,"117":1,"197":2,"232":2,"241":2}}],["handlesubscribeupdates",{"2":{"273":1}}],["handlesubscriptions",{"2":{"91":1}}],["handlesendmessage",{"2":{"273":1}}],["handlesearchusers",{"2":{"228":2}}],["handlesearchdatabase",{"2":{"220":1}}],["handlesystemmonitor",{"2":{"272":2}}],["handlestreamdata",{"2":{"272":2}}],["handlestreamingtool",{"2":{"222":1}}],["handlestatelesstool",{"2":{"239":1}}],["handlestatus",{"2":{"232":2}}],["handlestdioerrors",{"2":{"98":1}}],["handles",{"2":{"9":2,"277":1}}],["handledocumentedit",{"2":{"273":1}}],["handledeleteuser",{"2":{"223":1,"232":1}}],["handledatabasequery",{"2":{"210":1}}],["handledatabaserecord",{"2":{"187":2}}],["handledataanalysis",{"2":{"166":1}}],["handledynamicresourceprompt",{"2":{"174":1}}],["handled",{"2":{"8":1,"45":1}}],["handlequery",{"2":{"7":1}}],["haspermissionfortool",{"2":{"131":2}}],["haspermission",{"2":{"122":1,"195":1}}],["hasprefix",{"2":{"80":1,"119":1,"210":1,"241":1,"282":3}}],["has",{"2":{"2":1,"9":1,"95":1,"244":1}}],["b",{"2":{"176":2}}],["blocks",{"2":{"148":1}}],["blob",{"2":{"79":3,"80":2,"192":1}}],["broadcast",{"2":{"277":1}}],["broadcastsystemmessage",{"2":{"135":1}}],["broken",{"2":{"98":2}}],["browsers",{"2":{"280":1}}],["browser",{"2":{"64":1,"150":1,"249":1,"270":1}}],["break",{"2":{"51":2,"69":1,"84":1,"92":1,"107":1,"295":1,"298":1}}],["bin",{"2":{"290":1}}],["bind",{"2":{"210":2}}],["bindarguments",{"2":{"207":1,"210":1,"214":1}}],["binding",{"2":{"207":1,"214":1}}],["binary",{"0":{"192":1},"2":{"2":1,"80":2,"192":1}}],["bit",{"2":{"52":1}}],["bound",{"2":{"210":1}}],["both",{"2":{"210":1}}],["body",{"2":{"188":4,"211":6}}],["boolean",{"2":{"84":2,"204":1}}],["bool",{"2":{"51":1,"54":2,"55":2,"81":1,"84":1,"99":1,"103":1,"107":1,"113":3,"118":1,"119":1,"121":1,"131":1,"132":3,"176":3,"187":1,"207":1,"210":1,"228":1,"240":1,"267":1,"282":2,"297":1}}],["boilerplate",{"2":{"13":1,"14":1,"116":1,"157":1}}],["byte",{"2":{"80":2,"209":3,"241":2,"298":1}}],["bytes",{"2":{"79":1}}],["by",{"0":{"61":1},"1":{"62":1,"63":1,"64":1,"65":1},"2":{"28":2,"45":1,"96":1,"117":1,"162":1,"180":1,"187":1,"208":1,"220":1,"257":3,"266":1,"285":1}}],["bandwidth",{"2":{"257":1}}],["batch",{"0":{"85":1},"2":{"229":1}}],["balanced",{"2":{"63":1,"149":1,"250":1}}],["balancingno",{"2":{"245":1}}],["balancing",{"2":{"5":1,"226":1}}],["bash",{"2":{"290":1}}],["base",{"2":{"275":2,"282":3}}],["baseurl",{"2":{"104":2,"107":5,"114":12}}],["base64",{"2":{"76":1,"80":1,"192":2,"209":4}}],["basedir",{"2":{"282":2}}],["based",{"0":{"131":1,"132":1,"152":1,"177":1,"183":1,"253":1},"2":{"2":1,"4":1,"5":1,"31":1,"64":1,"87":1,"113":1,"114":1,"118":1,"130":1,"150":2,"152":2,"165":1,"168":1,"170":1,"171":1,"174":1,"176":1,"243":1,"246":1,"249":2,"267":1,"268":1,"270":2,"282":1}}],["basics",{"0":{"37":1,"139":1},"1":{"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1},"2":{"59":1,"73":1,"93":1,"138":1,"155":1,"158":1,"160":1,"242":1}}],["basic",{"0":{"30":1,"76":1,"79":1,"83":1,"87":1,"91":1,"97":1,"101":1,"106":1,"110":1,"117":1,"141":1,"163":1,"165":1,"181":1,"202":1,"208":1,"228":1,"266":1,"272":1,"282":1},"1":{"31":1},"2":{"18":1,"20":1,"41":1,"42":1,"140":1,"141":1,"156":1,"210":1,"266":1}}],["backward",{"2":{"207":1}}],["backup",{"2":{"132":1}}],["backofffactor",{"2":{"51":3}}],["backoff",{"0":{"51":1},"2":{"51":1,"69":4,"107":2}}],["background",{"2":{"30":1,"31":1,"45":1,"47":2,"50":2,"52":2,"60":1,"67":1,"71":1,"72":1,"92":1,"97":1,"98":1,"99":1,"101":1,"102":1,"103":1,"106":2,"107":1,"108":1,"110":1,"111":1,"137":1,"266":1,"267":1,"283":1,"287":1}}],["back",{"2":{"3":1,"71":1,"246":1}}],["beginner",{"2":{"176":2}}],["begin",{"2":{"170":1}}],["behavior",{"2":{"127":1,"142":1,"177":2}}],["bearer",{"2":{"106":1,"114":2,"241":2}}],["before",{"2":{"50":1,"75":1,"99":1}}],["better",{"2":{"18":1}}],["between",{"2":{"4":1,"12":1,"132":1,"161":1,"213":1,"244":1,"269":1}}],["benefits",{"2":{"8":1}}],["best",{"2":{"4":1,"5":3,"62":1,"63":1,"64":1,"65":1,"89":1,"148":1,"149":1,"150":1,"163":1,"165":6,"171":1,"248":1,"249":1,"250":1,"251":1,"260":1}}],["be",{"2":{"2":1,"4":1,"21":1,"50":1,"82":1,"162":1,"165":1,"170":1,"173":1,"180":1,"213":2,"253":1,"275":1,"294":1}}],["built",{"2":{"295":1}}],["builddynamicprompt",{"2":{"168":1}}],["builder",{"2":{"166":1,"174":1,"176":1,"298":1}}],["buildconversation",{"2":{"88":1}}],["build",{"2":{"7":1,"15":1,"32":1,"57":1,"138":1,"156":1,"157":1,"165":1,"166":1,"168":1,"173":1,"174":1,"178":1,"242":1,"268":1,"278":1}}],["building",{"0":{"57":1,"156":1},"1":{"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"157":1,"158":1,"159":1,"160":1},"2":{"0":1,"13":1}}],["buffer",{"2":{"298":3}}],["buffering",{"2":{"258":1}}],["buffers",{"2":{"257":1}}],["bug",{"2":{"177":5}}],["bugs",{"2":{"165":1}}],["burst",{"2":{"125":5,"137":1}}],["businesshooks",{"2":{"129":4,"137":1}}],["business",{"0":{"129":1},"2":{"7":1,"8":1,"14":1,"177":1,"219":1}}],["but",{"2":{"2":1,"176":1}}],["utilities",{"2":{"248":2,"280":2}}],["utf",{"2":{"3":1,"209":4}}],["usd",{"2":{"205":1}}],["using",{"0":{"86":1},"1":{"87":1,"88":1,"89":1},"2":{"59":1,"100":1,"208":1,"277":1,"285":1}}],["usage",{"0":{"87":1,"258":1,"297":1},"2":{"51":1,"77":1,"92":1,"111":1,"113":1,"114":1,"165":1,"267":1}}],["usually",{"2":{"50":1}}],["used",{"2":{"173":1,"253":1}}],["useful",{"2":{"162":1}}],["uses",{"2":{"7":1,"241":1}}],["usertool",{"2":{"223":2}}],["userdata",{"2":{"214":2}}],["userlevel",{"2":{"176":3}}],["userrole",{"2":{"170":2,"223":2}}],["userresources",{"2":{"77":2}}],["userresource",{"2":{"2":1}}],["usercreateoutput",{"2":{"118":2}}],["usercreateinput",{"2":{"118":2}}],["usermessage",{"2":{"88":2}}],["userid",{"2":{"9":1,"121":4,"122":1,"186":2,"228":9,"239":4,"240":4,"241":2}}],["user",{"0":{"171":1},"2":{"2":3,"12":1,"77":3,"88":2,"102":1,"118":9,"122":3,"126":4,"129":2,"131":3,"165":1,"166":1,"168":1,"170":4,"171":3,"173":1,"174":1,"176":3,"177":4,"186":10,"197":2,"204":2,"214":2,"218":1,"223":5,"228":43,"229":4,"236":1,"239":1,"241":7,"248":1,"249":1,"270":1,"280":1,"294":1}}],["userstore",{"2":{"241":5}}],["users",{"2":{"2":2,"4":1,"161":1,"186":3,"187":3,"197":1,"228":11,"232":1,"234":1,"235":1,"282":1}}],["use",{"0":{"226":1,"264":1,"270":1,"280":1},"2":{"2":1,"3":1,"4":2,"7":3,"9":1,"18":1,"24":1,"28":1,"29":1,"31":2,"34":1,"36":1,"44":1,"45":1,"56":1,"60":1,"74":1,"85":1,"87":1,"94":1,"97":1,"101":1,"102":1,"103":1,"106":1,"110":1,"114":1,"142":1,"176":1,"177":3,"185":1,"186":1,"196":1,"214":1,"220":1,"239":1,"241":1,"243":1,"248":1,"249":1,"250":1,"251":1,"253":1,"260":1,"261":1,"266":1,"267":3,"276":1,"282":1,"292":1,"297":1}}],["url+",{"2":{"42":1}}],["url",{"2":{"41":1,"184":2,"188":1,"211":3,"214":5,"275":1}}],["url=sqlite",{"2":{"40":1}}],["uristr",{"2":{"174":3}}],["uris",{"2":{"174":1,"180":1,"182":1}}],["uri=",{"2":{"124":3}}],["uri",{"0":{"186":1},"2":{"2":1,"4":1,"60":4,"76":1,"77":1,"79":9,"80":6,"81":8,"89":1,"111":5,"124":3,"128":1,"159":2,"166":1,"173":1,"174":4,"181":1,"183":2,"184":2,"185":1,"186":6,"187":3,"188":3,"190":2,"191":2,"192":2,"193":4,"195":10,"196":4,"197":2,"198":2,"228":9,"229":5,"272":2,"282":9}}],["upload",{"2":{"232":1}}],["uptime",{"2":{"159":1,"232":1}}],["update",{"2":{"240":1,"267":3,"272":1,"276":1,"277":1}}],["updated",{"2":{"91":4,"108":2,"267":1}}],["updates",{"2":{"5":2,"133":1,"150":1,"222":1,"249":1,"269":1,"270":1,"272":2,"273":3}}],["up",{"2":{"25":1}}],["unsafe",{"2":{"294":1}}],["unsupported",{"2":{"49":1,"50":1,"72":1}}],["under",{"2":{"223":1}}],["understand",{"2":{"155":1,"299":1}}],["understanding",{"2":{"0":1,"7":1,"43":1,"153":1}}],["until",{"2":{"148":1}}],["unregistersession",{"2":{"135":1}}],["unauthorized",{"2":{"99":1}}],["unmarshal",{"2":{"80":1,"91":2}}],["unmarshaling",{"2":{"8":1}}],["unlock",{"2":{"54":1,"55":2,"72":1,"81":1,"92":2,"107":3,"108":1,"121":2,"125":1,"135":2,"198":1,"240":2}}],["unexpectedly",{"2":{"98":1}}],["unexpected",{"2":{"50":1,"68":1,"98":1}}],["unknown",{"2":{"47":1,"50":1,"67":1,"84":1,"91":1,"114":1,"177":1,"208":1,"266":1,"267":1}}],["unified",{"2":{"174":1}}],["unixnano",{"2":{"228":1}}],["unix",{"2":{"135":2,"159":3,"191":1,"217":1,"232":1,"276":1}}],["units",{"2":{"3":1}}],["unique",{"2":{"2":1,"181":1}}],["o",{"2":{"291":3}}],["octet",{"2":{"282":1}}],["oauthconfig",{"2":{"103":1}}],["oauth",{"2":{"103":1}}],["os",{"2":{"97":1,"114":1,"132":1,"137":3,"152":2,"153":2,"183":1,"184":2,"188":1,"192":1,"209":1,"246":3,"253":2,"282":4,"283":6,"291":2,"294":2,"295":5,"298":1}}],["object",{"2":{"84":2,"168":1,"204":2,"211":1}}],["ok",{"2":{"84":14,"91":2,"92":2,"114":6,"159":2,"165":2,"168":6,"174":2,"176":2,"211":2,"241":2,"266":2,"267":2}}],["overall",{"2":{"165":1,"174":1}}],["over",{"2":{"157":1}}],["overview",{"0":{"58":1,"95":1,"157":1,"244":1},"2":{"166":1}}],["overhead",{"2":{"5":1,"13":1,"110":1,"245":1,"256":1,"258":1,"263":1,"264":1}}],["other",{"2":{"30":1,"130":1,"160":1,"179":1}}],["opportunities",{"2":{"166":1}}],["optimization",{"0":{"296":1},"1":{"297":1,"298":1}}],["optimizations",{"2":{"165":1}}],["optimized",{"2":{"95":1,"244":1}}],["optional",{"2":{"140":1,"168":1,"207":1,"211":1,"213":1,"214":1,"273":1}}],["options",{"0":{"22":1,"23":1,"142":1,"151":1,"243":1,"275":1},"1":{"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1},"2":{"22":1,"99":5,"102":1,"114":8,"139":1,"142":1,"151":3,"275":1}}],["operator",{"2":{"131":3}}],["operation",{"2":{"3":1,"20":1,"44":1,"45":1,"49":2,"50":3,"51":2,"52":2,"85":1,"117":8,"119":2,"134":1,"154":1,"202":2,"208":5,"216":1,"219":1,"266":8,"267":3,"273":1,"294":4}}],["operations",{"0":{"74":1,"85":1,"209":1},"1":{"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1},"2":{"3":2,"9":1,"18":1,"20":1,"45":1,"56":1,"57":1,"59":1,"73":1,"106":1,"117":1,"129":1,"196":1,"202":1,"222":2,"270":1}}],["openfile",{"2":{"291":1}}],["opens",{"2":{"29":1,"292":1}}],["open",{"2":{"12":1,"297":1,"298":1}}],["outliers",{"2":{"89":1,"166":1}}],["out",{"2":{"18":1,"24":1,"50":1,"52":1,"98":1,"294":1}}],["outputs",{"2":{"4":1}}],["output",{"2":{"3":1,"5":1,"96":1,"117":3,"118":2,"148":1,"244":1,"279":1}}],["onresourceread",{"2":{"128":1}}],["onresourceupdate",{"2":{"108":1}}],["ontoolcall",{"2":{"128":1,"129":1}}],["ontoolupdate",{"2":{"108":1}}],["onserverstop",{"2":{"128":1}}],["onserverstart",{"2":{"128":1}}],["onsessionend",{"2":{"9":1,"128":1,"129":1}}],["onsessionstart",{"2":{"9":1,"128":1,"129":1}}],["onmessage",{"2":{"108":1}}],["onprogress",{"2":{"108":1}}],["once",{"2":{"55":1,"78":1}}],["oneof=read",{"2":{"119":1}}],["oneof=add",{"2":{"117":1}}],["one",{"2":{"5":1,"245":1}}],["on",{"2":{"2":1,"4":1,"8":1,"14":1,"24":1,"51":1,"87":1,"113":1,"114":1,"118":1,"129":1,"130":1,"149":1,"150":1,"152":2,"165":6,"166":1,"168":1,"170":1,"171":1,"174":1,"176":1,"180":1,"207":1,"228":1,"229":1,"232":1,"239":1,"243":1,"246":3,"254":2,"267":1,"272":1,"273":1,"282":1}}],["onlysseweb",{"2":{"245":1}}],["only",{"2":{"2":2,"5":1,"75":1,"132":3,"179":1,"210":1,"223":3,"245":1}}],["orders",{"2":{"187":1}}],["orchestration",{"2":{"7":1}}],["oriented",{"2":{"3":1,"170":1}}],["or",{"2":{"2":3,"3":1,"4":1,"18":1,"21":1,"47":1,"91":1,"126":1,"130":1,"144":1,"159":1,"162":1,"166":1,"173":1,"179":1,"180":2,"200":1,"207":1,"214":2,"219":1,"241":1,"250":1,"282":1,"294":1}}],["offset",{"2":{"228":7,"234":1,"235":1}}],["offers",{"2":{"207":1}}],["off",{"2":{"132":1}}],["of",{"2":{"0":1,"2":1,"6":1,"14":1,"16":1,"26":1,"37":1,"38":1,"140":1,"145":1,"166":1,"173":2,"176":2,"179":1,"189":1,"200":1,"204":2,"220":1,"263":1,"298":1}}],["driven",{"2":{"270":1}}],["drop",{"2":{"135":1}}],["dashboards",{"2":{"270":2}}],["dashboard",{"2":{"249":1}}],["datatype",{"2":{"122":2}}],["dataseturi",{"2":{"89":2,"166":3}}],["dataset",{"2":{"4":2,"89":2,"166":11}}],["databases",{"2":{"18":1,"179":1}}],["database",{"0":{"187":1,"210":1},"2":{"2":2,"7":3,"40":1,"118":1,"132":1,"180":1,"184":2,"186":1,"187":6,"220":2,"228":1,"239":1,"248":1,"280":1,"297":1}}],["data",{"0":{"166":1,"173":1},"2":{"2":2,"3":1,"4":3,"12":1,"18":1,"21":2,"32":1,"64":1,"75":1,"80":7,"89":4,"110":1,"119":1,"122":7,"131":1,"135":2,"144":1,"155":1,"158":1,"166":3,"171":3,"179":2,"185":1,"186":1,"187":3,"188":1,"191":2,"192":1,"193":5,"195":2,"196":2,"198":7,"207":1,"209":5,"214":1,"217":1,"218":3,"224":1,"226":1,"228":1,"236":1,"240":2,"249":1,"270":2,"272":7,"273":3,"297":2}}],["dump",{"2":{"132":1}}],["during",{"2":{"132":1}}],["duration=",{"2":{"124":4}}],["duration",{"2":{"47":1,"51":3,"52":1,"54":3,"69":1,"81":2,"107":1,"124":6,"128":8,"129":4,"198":1,"229":6,"272":8,"295":1}}],["d",{"2":{"30":1,"45":1,"51":2,"60":2,"69":2,"76":1,"77":2,"79":2,"83":2,"85":1,"87":3,"89":2,"91":2,"97":1,"101":1,"106":1,"107":1,"134":1,"159":1,"166":1,"174":2,"193":1,"218":1,"222":1,"228":7,"272":6,"282":1,"287":1,"295":1}}],["differences",{"2":{"174":1}}],["differently",{"2":{"253":1}}],["different",{"2":{"4":1,"5":1,"95":1,"139":1,"147":1,"189":1,"209":1,"243":1,"244":1,"278":1}}],["diagnostic",{"2":{"166":1}}],["disk",{"2":{"272":3}}],["distribute",{"2":{"226":1}}],["distributions",{"2":{"166":1}}],["discovery",{"2":{"197":1}}],["discover",{"2":{"60":1,"75":1}}],["discord",{"2":{"24":1}}],["disconnected",{"2":{"9":1,"153":1}}],["disconnect",{"2":{"9":1}}],["discussion",{"2":{"24":1}}],["dive",{"2":{"118":1}}],["division",{"2":{"117":1,"208":1,"266":1}}],["divide",{"2":{"3":1,"20":1,"117":2,"202":1,"208":1,"266":2}}],["directly",{"2":{"289":1}}],["directories",{"2":{"282":1}}],["directory",{"2":{"18":1,"119":2,"209":1,"282":6}}],["direct",{"2":{"109":1,"244":1,"263":1}}],["dos",{"2":{"261":1}}],["doe",{"2":{"193":1,"218":1,"228":3}}],["doesn",{"2":{"253":1}}],["does",{"2":{"91":1,"92":1,"146":1,"294":1}}],["down",{"2":{"137":1,"153":1}}],["double",{"2":{"55":1}}],["done",{"2":{"47":6,"51":1,"54":1,"69":1,"85":1,"91":1,"92":2,"99":2,"107":2,"108":2,"222":1,"272":2,"294":1,"298":1}}],["don",{"2":{"30":1,"51":2,"69":1,"282":1}}],["do",{"2":{"3":1,"211":1}}],["doc",{"2":{"273":1}}],["docs",{"2":{"2":1,"21":1,"181":1,"197":1}}],["documents",{"2":{"174":1}}],["documenturi",{"2":{"173":3}}],["documentation",{"2":{"2":1,"4":1,"24":1,"180":1,"181":1,"183":1,"197":1}}],["document",{"2":{"2":1,"173":10,"174":1,"249":1,"270":1,"273":3}}],["dbpool",{"2":{"297":5}}],["db",{"2":{"2":1,"40":1,"118":1,"187":3,"210":1,"297":2}}],["debugtools",{"2":{"132":2}}],["debug",{"0":{"291":1},"2":{"132":2,"184":2,"207":2,"267":6,"291":6,"292":1}}],["debugging",{"0":{"288":1},"1":{"289":1,"290":1,"291":1,"292":1},"2":{"7":1,"29":1,"36":1,"280":1,"292":1,"294":1}}],["delete",{"2":{"119":1,"121":1,"131":1,"135":1,"223":2,"232":1,"240":1}}],["delay",{"2":{"51":6,"99":1}}],["decision",{"0":{"113":1}}],["decode",{"2":{"80":1}}],["decodestring",{"2":{"80":1,"209":1}}],["deadlineexceeded",{"2":{"52":1,"196":1,"294":1}}],["denied",{"2":{"49":1,"50":1,"195":1}}],["detection",{"2":{"282":1}}],["detectmimetype",{"2":{"282":2}}],["detected",{"2":{"165":1}}],["detect",{"2":{"163":1,"165":1}}],["determines",{"2":{"38":1}}],["detailed",{"2":{"176":1}}],["detail",{"2":{"73":1,"262":1}}],["details",{"2":{"8":1,"14":1,"176":1,"236":1}}],["depth",{"2":{"176":1}}],["dependencies",{"2":{"34":1}}],["deployments",{"2":{"63":1,"149":1,"250":1}}],["deployment",{"2":{"5":1,"147":1,"243":1}}],["development",{"2":{"29":1,"62":1,"65":1,"132":2,"138":1,"148":1,"242":1,"248":2,"251":1,"264":1,"268":1,"278":1,"280":2}}],["demonstrates",{"2":{"159":1}}],["demonstratesubscriptionmanager",{"2":{"92":1}}],["demonstratetransportselection",{"2":{"113":1}}],["demonstratetoolcalling",{"2":{"83":1}}],["demonstratedynamicprompts",{"2":{"89":1}}],["demonstratepromptusage",{"2":{"87":1}}],["demonstratebatchtoolcalls",{"2":{"85":1}}],["demonstrateresourcereading",{"2":{"79":1}}],["demonstrateresourcefiltering",{"2":{"77":1}}],["demonstrateclientfactory",{"2":{"114":1}}],["demonstrateclientoperations",{"2":{"60":2}}],["demonstrateclientlifecycle",{"2":{"45":1}}],["demonstratecancellation",{"2":{"52":1}}],["demonstratecontextusage",{"2":{"52":1}}],["demo",{"2":{"16":1,"159":2}}],["demand",{"2":{"2":1,"180":1}}],["design",{"0":{"239":1,"240":1},"2":{"165":1,"171":1}}],["designed",{"2":{"13":1}}],["desktop",{"0":{"28":1,"286":1},"2":{"5":1,"28":4,"62":1,"95":1,"148":1,"245":1,"248":1,"264":1,"279":1,"280":1,"286":3}}],["description",{"2":{"4":3,"16":1,"26":1,"30":1,"50":3,"60":1,"76":3,"83":1,"87":4,"111":2,"159":2,"163":2,"165":4,"166":1,"168":1,"170":1,"171":1,"173":1,"174":1,"176":1,"177":8,"197":2,"202":3,"204":6,"205":3,"209":3,"220":3,"228":1,"266":3,"273":1,"282":2,"287":1}}],["definition",{"0":{"203":1},"1":{"204":1,"205":1}}],["define",{"2":{"3":1,"4":1,"5":1,"26":1,"98":1,"99":1,"117":1,"171":1,"201":1,"210":1,"282":1}}],["defined",{"2":{"2":1}}],["defines",{"2":{"1":1}}],["defer",{"2":{"30":1,"31":1,"45":2,"47":1,"50":2,"52":1,"54":3,"55":2,"60":1,"72":2,"81":2,"85":1,"92":3,"97":1,"99":1,"101":1,"102":1,"103":1,"104":1,"106":1,"107":3,"108":2,"110":1,"111":1,"114":1,"121":3,"135":4,"137":1,"188":1,"196":1,"210":2,"211":1,"240":2,"253":1,"266":1,"272":1,"283":1,"287":1,"291":1,"294":1,"295":1,"297":1,"298":1}}],["defaultbool",{"2":{"282":1}}],["defaultnumber",{"2":{"220":1,"228":2,"272":2}}],["defaultvalue",{"2":{"168":4,"176":2}}],["defaults",{"2":{"168":1,"207":1,"214":1}}],["defaultstring",{"2":{"159":1,"273":1}}],["defaultretryconfig",{"2":{"51":2}}],["default",{"2":{"3":1,"47":1,"50":1,"67":1,"68":1,"72":1,"91":1,"98":1,"99":2,"104":2,"107":1,"113":2,"114":1,"122":1,"135":2,"152":1,"159":2,"163":1,"165":2,"171":1,"204":2,"207":1,"208":1,"209":1,"213":1,"214":1,"222":1,"232":1,"246":1,"253":1,"266":1,"267":1,"272":1,"282":1,"294":1,"298":1}}],["dynamically",{"2":{"187":1}}],["dynamic",{"0":{"89":1,"174":1,"185":1},"1":{"186":1,"187":1,"188":1},"2":{"2":2,"4":1,"21":1,"161":1,"180":1,"185":1,"186":2,"272":1}}],["game",{"2":{"251":1,"264":1}}],["gateways",{"2":{"226":1}}],["gauge",{"2":{"128":2}}],["gt",{"2":{"51":1,"60":2,"81":1,"83":1,"87":2,"114":2,"129":1,"132":1,"166":1,"186":1,"187":1,"213":1,"228":1,"266":1,"267":1,"282":2,"297":1}}],["gracefully",{"2":{"154":1,"295":1}}],["graceful",{"0":{"47":1},"2":{"137":2,"153":1,"283":1}}],["greet",{"2":{"16":1,"26":1,"28":1}}],["g",{"2":{"17":1,"29":1,"292":1}}],["guide",{"2":{"15":1,"25":1}}],["git",{"2":{"280":1}}],["github",{"2":{"15":1,"16":2,"26":3,"30":2,"31":2,"40":2,"60":2,"67":2,"76":2,"97":3,"117":2,"119":1,"141":1,"159":2,"165":2,"187":2,"228":2,"241":1,"246":3,"266":3,"272":2,"282":2,"283":2,"287":1}}],["giving",{"2":{"6":1,"180":1}}],["general",{"2":{"168":1,"273":1}}],["generatesessionid",{"2":{"240":1}}],["generateid",{"2":{"118":1,"228":2}}],["generate",{"2":{"89":4,"162":1,"168":1,"173":1}}],["generatecodereviewprompt",{"2":{"89":2}}],["generatedata",{"2":{"272":2}}],["generatedataanalysisprompt",{"2":{"89":2}}],["generated",{"2":{"2":1,"180":1}}],["generation",{"0":{"89":1},"2":{"4":1}}],["getcachedfile",{"2":{"297":1}}],["getclientip",{"2":{"229":1}}],["getport",{"2":{"253":3}}],["getpromptrequestparams",{"2":{"87":1,"88":1}}],["getpromptrequest",{"2":{"87":1,"88":1,"159":1,"165":1,"166":1,"168":1,"170":1,"171":1,"173":1,"174":1,"176":1,"177":1}}],["getpromptresult",{"2":{"87":1,"159":2,"165":2,"166":2,"168":2,"170":2,"171":2,"173":2,"174":2,"176":2,"177":2}}],["getprompt",{"2":{"87":3,"88":1}}],["getfromcache",{"2":{"229":1}}],["getfloat",{"2":{"207":1,"214":1,"266":2}}],["getrawarguments",{"2":{"207":1}}],["getbool",{"2":{"207":1,"213":1,"214":1}}],["getboolarg",{"2":{"176":2}}],["getint",{"2":{"207":1,"214":1,"228":3,"272":2}}],["getuser",{"2":{"241":1}}],["getuserpreferences",{"2":{"239":1}}],["getuserfromdb",{"2":{"186":1,"228":3}}],["getuserdata",{"2":{"122":1}}],["getstringslicearg",{"2":{"166":1,"168":2}}],["getstringarg",{"2":{"165":2,"166":1,"168":4,"170":1,"171":1,"173":1,"174":1,"176":1}}],["getstring",{"2":{"159":1,"207":1,"209":1,"211":1,"214":1,"228":4,"266":1,"267":2,"272":1,"291":1,"298":1}}],["getsession",{"2":{"121":1,"122":1,"131":1,"240":1}}],["getsessionid",{"2":{"9":1,"122":1,"124":2,"125":1,"131":1}}],["getarguments",{"2":{"207":1,"211":1}}],["getactivesessioncount",{"2":{"128":2}}],["getalltools",{"2":{"72":1}}],["getlimiter",{"2":{"125":2}}],["getenv",{"2":{"114":1,"132":1,"152":2,"184":2,"188":1,"246":2,"253":2}}],["getting",{"0":{"10":1},"1":{"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1}}],["get",{"2":{"2":1,"14":1,"15":1,"25":1,"26":1,"50":1,"71":1,"72":1,"81":2,"84":1,"85":2,"87":2,"88":1,"104":2,"122":3,"159":2,"179":1,"188":1,"223":2,"228":2,"231":4,"232":1,"241":1,"267":2,"272":1,"276":1}}],["golang",{"2":{"241":1}}],["got",{"2":{"80":2,"84":6}}],["goroutines",{"2":{"85":1}}],["goroutine",{"2":{"52":1,"137":1}}],["go",{"0":{"13":1},"2":{"0":1,"5":1,"6":1,"9":1,"13":3,"14":1,"15":6,"16":2,"17":3,"23":1,"25":1,"26":8,"28":2,"29":2,"30":4,"31":2,"34":1,"38":1,"40":6,"47":1,"52":1,"58":1,"60":4,"67":2,"76":2,"85":1,"89":1,"92":1,"95":1,"97":5,"99":1,"106":1,"107":1,"108":2,"114":2,"115":1,"117":2,"119":1,"137":1,"141":1,"147":1,"153":1,"156":1,"157":1,"159":2,"165":2,"187":2,"204":1,"206":1,"207":1,"213":1,"219":2,"228":2,"240":1,"243":1,"246":3,"254":2,"266":3,"272":2,"282":2,"283":3,"286":2,"287":3,"289":8,"290":2,"292":2,"295":1}}],["lshortfile",{"2":{"291":1}}],["lstdflags|log",{"2":{"291":1}}],["lstdflags",{"2":{"137":1}}],["ll",{"0":{"59":1,"158":1}}],["llmclient",{"2":{"71":5}}],["llmapplication",{"2":{"71":4}}],["llm",{"0":{"71":1,"285":1},"2":{"2":1,"3":1,"7":1,"18":1,"20":1,"71":3,"86":1,"157":1,"200":1,"249":1,"270":1,"285":1}}],["llms",{"2":{"1":1,"2":2,"3":1,"4":1,"7":1,"9":1,"12":1,"20":1,"21":1,"32":1,"144":2,"155":2,"158":2,"161":1,"162":1,"179":1,"180":1,"200":1,"201":1,"206":1,"220":1,"270":1,"280":1}}],["lt",{"2":{"47":5,"51":3,"54":2,"69":6,"79":1,"91":2,"92":2,"99":4,"104":4,"107":7,"108":2,"132":1,"134":1,"135":2,"137":1,"153":1,"198":1,"213":1,"222":2,"254":4,"272":5,"283":1,"294":1,"295":2,"298":1}}],["least",{"2":{"260":1}}],["learning",{"2":{"171":1}}],["learn",{"0":{"59":1,"158":1},"2":{"32":1,"37":1,"56":1,"57":1,"74":1,"93":1,"94":1,"138":1,"139":1,"155":1,"156":1,"160":1,"178":2,"199":1,"224":2,"242":1,"268":1,"278":1,"299":1}}],["length",{"2":{"168":3}}],["len",{"2":{"30":1,"45":1,"60":4,"76":1,"77":2,"79":2,"80":3,"83":2,"85":1,"87":4,"88":1,"89":2,"97":1,"101":1,"106":1,"114":2,"166":1,"168":1,"186":1,"210":1,"213":1,"228":2,"266":1,"267":1,"272":2,"282":1,"287":1}}],["let",{"2":{"16":1,"20":1,"26":1,"92":1,"170":1}}],["leverage",{"2":{"14":1,"226":1}}],["level=debug",{"2":{"40":1}}],["level",{"2":{"14":1,"159":6,"176":3,"205":1,"286":1}}],["live",{"2":{"249":1,"269":1,"270":2,"273":1}}],["limited",{"2":{"226":1,"250":1,"257":3}}],["limiter",{"2":{"125":9}}],["limiters",{"2":{"125":4}}],["limit",{"2":{"125":3,"220":1,"228":7,"229":1,"234":1,"235":1}}],["limiting",{"0":{"125":1},"2":{"123":1,"229":1,"261":1}}],["line",{"0":{"289":1},"2":{"39":1,"62":1,"244":1,"248":1,"262":1,"279":1,"280":1,"289":1}}],["lines",{"2":{"14":1}}],["listfiles",{"2":{"282":2}}],["listenandserve",{"2":{"232":1}}],["listprompts",{"2":{"87":1}}],["listing",{"0":{"75":1,"76":1,"77":1,"197":1},"1":{"76":1,"77":1},"2":{"77":2,"282":1}}],["listresourcesbypattern",{"2":{"77":2}}],["listresourcesbytype",{"2":{"77":2}}],["listresources",{"2":{"60":1,"76":2,"77":2,"79":1}}],["list",{"2":{"30":1,"45":1,"50":3,"54":1,"60":4,"76":2,"79":2,"83":2,"84":1,"87":2,"91":3,"204":1,"231":6,"282":5,"287":2,"289":3,"290":5}}],["listtoolsrequest",{"2":{"97":1,"287":1}}],["listtools",{"2":{"7":1,"30":1,"45":1,"50":2,"54":1,"60":1,"71":1,"72":1,"83":1,"84":1,"97":1,"101":1,"106":1,"287":1}}],["library",{"2":{"28":1,"65":1,"241":2,"251":1,"264":2,"286":1}}],["lifecycle",{"0":{"43":1,"44":1,"45":1,"153":1},"1":{"44":1,"45":1,"46":1,"47":1},"2":{"9":1,"37":1,"43":1,"59":1,"73":1,"127":1,"142":1,"153":3,"285":1}}],["likely",{"2":{"98":1}}],["like",{"2":{"2":1,"3":1,"5":1,"18":1,"20":1,"63":1,"123":1,"149":1,"156":1,"225":1,"228":1,"241":1,"244":1}}],["latency",{"0":{"256":1}}],["lastaccess",{"2":{"240":3}}],["last",{"2":{"51":1,"240":1}}],["lasterr",{"2":{"51":3,"69":3}}],["larger",{"2":{"267":1}}],["large",{"2":{"12":1,"298":1}}],["layer",{"0":{"8":1},"2":{"8":1}}],["layers",{"2":{"7":1,"244":1}}],["language",{"2":{"4":2,"12":1,"89":3,"163":2,"165":6,"176":1}}],["low",{"2":{"113":4,"205":1}}],["london",{"2":{"85":1}}],["long",{"2":{"52":2,"134":2,"222":1,"270":1}}],["longer",{"2":{"50":1}}],["location=",{"2":{"188":1}}],["location",{"2":{"85":2,"188":4}}],["localhost",{"2":{"31":1,"39":2,"63":1,"64":1,"101":1,"103":1,"106":1,"114":2,"273":1,"275":3}}],["local",{"2":{"5":2,"62":1,"148":2,"245":1,"248":2,"256":1,"279":1,"280":3,"290":1}}],["lock",{"2":{"54":1,"55":3,"72":1,"81":1,"92":2,"107":3,"108":1,"121":2,"125":1,"135":2,"198":1,"240":2}}],["lost",{"2":{"49":1,"50":1,"68":1,"99":1}}],["lookup",{"2":{"228":1}}],["look",{"2":{"28":1,"159":1}}],["logfile",{"2":{"291":3}}],["logtofile",{"2":{"283":2,"295":1}}],["logtoolcall",{"2":{"129":1,"229":1}}],["logerror",{"2":{"283":3,"294":1,"295":2}}],["logresourceread",{"2":{"229":1}}],["logo",{"2":{"192":1}}],["loglevel",{"2":{"159":3}}],["logs",{"2":{"132":1,"159":4}}],["logsessionend",{"2":{"129":1}}],["logger",{"2":{"124":12,"128":10,"137":3,"291":4}}],["loggingmw",{"2":{"137":2}}],["loggingmiddleware",{"2":{"124":5}}],["logging",{"0":{"124":1,"291":1},"2":{"123":1,"127":1,"184":1,"291":4}}],["log",{"2":{"9":2,"30":5,"31":3,"40":2,"41":1,"45":4,"46":2,"47":2,"50":19,"51":1,"52":6,"54":1,"60":4,"67":1,"68":4,"69":1,"76":1,"77":2,"79":2,"83":2,"87":2,"89":2,"91":8,"92":5,"97":5,"98":8,"99":3,"101":3,"102":1,"103":1,"106":5,"107":3,"110":3,"114":1,"122":2,"124":2,"128":2,"129":1,"137":6,"148":1,"149":1,"150":1,"151":2,"153":5,"154":2,"159":3,"228":3,"229":6,"232":2,"246":1,"254":7,"266":4,"267":2,"272":5,"273":2,"276":1,"283":3,"286":1,"287":8,"291":4,"294":1,"297":1}}],["logic",{"0":{"51":1,"69":1,"129":1},"2":{"7":1,"8":1,"14":1,"68":1,"219":1,"295":1}}],["loading",{"2":{"298":1}}],["loadfromredis",{"2":{"239":1}}],["load",{"2":{"5":1,"63":1,"149":1,"226":1,"239":1,"241":1,"245":1,"250":1}}],["avoid",{"2":{"176":1}}],["available",{"0":{"214":1},"2":{"5":1,"30":2,"45":1,"50":2,"60":6,"71":2,"75":1,"76":2,"78":1,"83":2,"87":2,"97":1,"99":1,"101":1,"106":1,"223":2,"231":3,"287":2,"292":1}}],["amazing",{"2":{"146":1}}],["am",{"2":{"132":1}}],["amp",{"2":{"9":1,"41":1,"46":3,"47":1,"54":1,"55":7,"67":1,"71":1,"72":1,"80":1,"81":1,"84":1,"88":1,"91":2,"92":1,"99":3,"102":3,"104":1,"107":3,"108":1,"111":1,"113":8,"114":1,"118":2,"121":2,"122":1,"124":1,"125":1,"126":1,"128":1,"131":1,"135":1,"153":1,"159":1,"165":1,"166":1,"168":1,"170":1,"171":1,"173":1,"174":1,"176":1,"177":1,"183":1,"184":1,"187":2,"188":2,"190":1,"192":1,"193":1,"195":1,"196":1,"207":1,"210":1,"211":1,"214":3,"218":1,"219":1,"228":6,"240":2,"241":4,"266":1,"267":3,"287":1}}],["audience",{"2":{"168":3}}],["audit",{"2":{"129":1}}],["auditlogger",{"2":{"129":4}}],["automation",{"2":{"248":1,"280":1}}],["automatically",{"2":{"8":1,"9":2,"30":1,"145":1,"231":1,"277":1}}],["automatic",{"2":{"8":2,"9":1,"116":1,"118":1,"145":1}}],["auto",{"2":{"163":1,"165":2}}],["authheader",{"2":{"241":3}}],["authmw",{"2":{"137":1}}],["authmiddleware",{"2":{"126":4,"241":5,"261":1}}],["authorization",{"0":{"241":1},"2":{"106":1,"114":2,"241":3,"261":1}}],["auth",{"2":{"103":1,"229":1,"261":1}}],["authentication",{"0":{"103":1,"126":1,"241":1},"2":{"50":1,"106":1,"123":1,"126":1,"184":1,"229":2,"261":1}}],["age",{"2":{"118":4,"193":2,"204":2,"207":2,"213":6,"214":4,"218":3,"228":18}}],["agent",{"2":{"102":1}}],["again",{"2":{"99":1}}],["agnostic",{"2":{"8":1,"246":1}}],["after",{"2":{"47":2,"51":2,"52":1,"55":1,"69":2,"99":1,"107":1,"240":2,"272":1}}],["adjust",{"2":{"176":1,"282":1}}],["administration",{"2":{"248":1}}],["admintool",{"2":{"223":2}}],["admin",{"2":{"131":4,"223":3}}],["advanced",{"0":{"92":1,"115":1,"175":1,"221":1,"229":1,"273":1,"283":1},"1":{"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"176":1,"177":1,"222":1,"223":1},"2":{"32":1,"142":1,"155":1,"156":1,"157":1,"158":1,"160":1,"176":2,"178":1,"199":1,"224":1,"229":3,"268":1,"273":3,"283":2}}],["adddatabasetools",{"2":{"283":2}}],["addgittools",{"2":{"283":2}}],["addfiletools",{"2":{"283":2}}],["addrealtimeresources",{"2":{"273":2}}],["address",{"2":{"47":3,"67":3,"72":3,"205":1}}],["addresourcemiddleware",{"2":{"229":1}}],["addresource",{"2":{"7":1,"111":2,"159":1,"183":1,"184":1,"186":1,"187":1,"188":1,"197":1,"228":1,"272":1,"282":1}}],["addapplicationtools",{"2":{"267":2}}],["addanalyticstools",{"2":{"229":2}}],["addmiddleware",{"2":{"232":1}}],["addmcproutes",{"2":{"232":1}}],["addsystemtools",{"2":{"283":2}}],["addstreamablehttpmiddleware",{"2":{"229":1}}],["addserver",{"2":{"72":1}}],["addbatchtools",{"2":{"229":2}}],["addbeforeany",{"2":{"153":1}}],["addcollaborativetools",{"2":{"273":2}}],["addconditionaltools",{"2":{"223":1}}],["addcrudtools",{"2":{"229":2}}],["addprompt",{"2":{"159":1,"165":1}}],["addproductionprompts",{"2":{"137":1}}],["addproductionresources",{"2":{"137":1}}],["addproductiontools",{"2":{"137":1}}],["additional",{"2":{"146":1,"228":1}}],["addonerror",{"2":{"153":1}}],["addonunregistersession",{"2":{"122":1,"153":1}}],["addonregistersession",{"2":{"122":1,"153":1}}],["addhandler",{"2":{"92":3,"108":5}}],["addtoolmiddleware",{"2":{"229":2}}],["addtool",{"2":{"7":1,"16":1,"26":1,"110":1,"111":3,"117":1,"122":1,"159":1,"209":1,"220":1,"223":2,"228":3,"246":1,"266":1,"267":2,"272":2,"273":3,"282":1,"291":1}}],["add",{"2":{"3":1,"15":1,"16":2,"18":3,"20":1,"26":1,"32":1,"85":2,"87":1,"88":1,"92":2,"99":1,"108":1,"110":1,"111":1,"117":2,"122":1,"123":1,"126":1,"137":1,"142":2,"145":1,"146":1,"153":2,"154":1,"155":1,"159":3,"160":1,"171":2,"183":1,"197":1,"202":1,"208":1,"211":1,"228":2,"229":5,"232":4,"240":2,"241":1,"246":1,"254":2,"266":4,"267":2,"272":2,"273":2,"275":2,"282":2,"283":1,"291":2}}],["alive",{"2":{"275":1}}],["alice",{"2":{"28":1}}],["always",{"2":{"261":1}}],["alongside",{"2":{"232":1}}],["algorithmic",{"2":{"165":1}}],["alert",{"2":{"129":1,"135":1}}],["alternatives",{"2":{"50":1}}],["already",{"2":{"34":1}}],["also",{"2":{"30":1,"219":1}}],["allow",{"2":{"125":1,"131":1,"229":1}}],["allowedtables",{"2":{"187":2}}],["alloweddir",{"2":{"119":2}}],["allowed",{"2":{"119":1,"209":1,"210":1,"232":1}}],["allowing",{"2":{"8":1,"185":1}}],["alltools",{"2":{"72":3}}],["all",{"2":{"9":1,"14":1,"58":1,"76":1,"77":2,"95":1,"134":1,"137":1,"144":1,"165":3,"174":2,"223":1,"239":1,"260":1,"268":1,"273":1,"277":1}}],["abuse",{"2":{"261":1}}],["absolute",{"2":{"282":1}}],["abs",{"2":{"119":1}}],["abspath",{"2":{"119":2}}],["abstracts",{"2":{"6":1,"8":1}}],["about",{"2":{"32":1,"94":1,"170":1,"178":1,"224":1,"242":1,"268":1,"278":1,"299":1}}],["above",{"2":{"17":1,"173":1}}],["ai",{"2":{"12":1,"264":1}}],["attack",{"2":{"165":1}}],["attention",{"2":{"159":1,"166":1}}],["attempts+1",{"2":{"295":2}}],["attempts++",{"2":{"295":1}}],["attempts",{"2":{"51":1,"69":1,"295":3}}],["attempt+1",{"2":{"51":1,"69":1}}],["attempt++",{"2":{"51":1,"69":1,"107":1}}],["attempt",{"2":{"51":6,"69":5,"98":1,"107":5,"295":1}}],["attempting",{"2":{"50":1,"68":1}}],["at",{"2":{"8":1,"118":1,"159":1,"228":1}}],["aware",{"0":{"122":1},"2":{"4":1,"122":1}}],["array",{"2":{"84":2,"168":1,"204":1}}],["arg",{"2":{"87":3}}],["argumentdescription",{"2":{"159":1}}],["argument",{"0":{"212":1},"1":{"213":1,"214":1},"2":{"84":5,"165":1}}],["arguments",{"0":{"167":1},"1":{"168":1},"2":{"3":1,"4":1,"30":1,"31":1,"45":1,"49":1,"50":2,"52":1,"60":1,"68":2,"71":2,"72":1,"83":1,"84":1,"85":5,"87":5,"88":1,"110":2,"111":2,"122":1,"159":1,"165":3,"166":3,"168":10,"170":2,"171":3,"173":3,"174":2,"176":3,"177":2,"210":1,"234":1,"239":1,"266":1,"267":1,"287":1,"289":1,"290":1}}],["arg2",{"2":{"39":1,"62":1}}],["arg1",{"2":{"39":1,"62":1}}],["args",{"2":{"28":1,"72":2,"83":2,"84":6,"87":2,"88":4,"111":2,"114":3,"159":3,"165":5,"168":4,"176":2,"207":1,"210":4,"211":3,"286":1}}],["architectures",{"2":{"63":1,"226":1,"250":1,"264":2}}],["architecture",{"0":{"6":1},"1":{"7":1,"8":1,"9":1},"2":{"6":1}}],["arithmetic",{"2":{"3":1,"20":1,"117":1,"202":2}}],["area",{"2":{"165":1}}],["areas",{"2":{"4":2,"89":1,"165":1,"166":1}}],["are",{"2":{"2":1,"3":1,"4":1,"8":1,"9":1,"34":1,"78":1,"161":1,"170":2,"171":4,"180":1,"201":1,"210":1,"223":1,"228":1}}],["account",{"2":{"223":1}}],["acceptance",{"2":{"177":1}}],["accept",{"2":{"3":1,"17":1,"102":1}}],["accessed",{"2":{"297":1}}],["accessible",{"2":{"35":1,"187":1}}],["access",{"2":{"2":2,"7":1,"12":1,"58":1,"75":1,"179":1,"180":1,"185":1,"187":1,"194":1,"195":1,"207":2,"240":1}}],["actual",{"2":{"177":3,"206":1}}],["active",{"2":{"7":1,"9":1,"118":4,"128":2}}],["actionable",{"2":{"173":1}}],["action",{"2":{"3":1,"173":1}}],["actions",{"2":{"3":1,"20":1,"200":1,"201":1}}],["acquiring",{"2":{"55":1}}],["across",{"2":{"9":1,"226":1}}],["appname",{"2":{"267":4}}],["appssimple",{"2":{"245":1}}],["apps",{"2":{"95":1,"245":1}}],["appsprocess",{"2":{"95":1}}],["appropriate",{"2":{"87":1,"170":1,"189":1}}],["append",{"2":{"77":2,"88":1,"92":2,"108":1,"114":2,"131":1,"132":1,"171":2,"174":1,"222":1,"272":2,"291":1}}],["appdata",{"2":{"28":1,"286":1}}],["applications",{"0":{"285":1},"2":{"5":2,"7":1,"12":1,"39":1,"48":1,"58":1,"62":1,"63":1,"64":1,"65":1,"148":1,"150":1,"176":1,"226":2,"244":1,"249":2,"262":1,"264":4,"269":1,"270":3,"279":1,"280":2,"285":1}}],["application",{"0":{"71":1,"267":1},"2":{"2":1,"28":1,"46":1,"77":1,"80":1,"102":1,"113":1,"159":2,"184":5,"186":2,"187":2,"188":2,"191":1,"193":1,"195":1,"196":1,"197":3,"228":2,"232":2,"234":1,"248":1,"267":12,"272":2,"282":2,"286":1}}],["app",{"2":{"2":1,"71":5,"113":1,"119":1,"184":1,"197":2,"267":22}}],["apiurl",{"2":{"188":2}}],["apisstandard",{"2":{"245":1}}],["apishttp",{"2":{"95":1}}],["apis",{"2":{"5":1,"18":1,"149":1,"179":1,"188":1,"226":2}}],["api",{"0":{"188":1},"2":{"2":3,"3":1,"7":1,"13":1,"18":1,"102":1,"180":1,"186":1,"188":5,"226":3,"228":1,"229":1,"232":4,"250":2,"275":3}}],["annotations",{"0":{"220":1}}],["anonymous",{"2":{"122":1}}],["another",{"2":{"30":1,"41":2,"42":2}}],["anthropic",{"2":{"28":1}}],["any",{"2":{"8":2,"51":1,"55":1,"71":1,"84":1,"140":1,"153":4,"162":1,"179":1,"204":4,"207":2,"220":1,"246":1,"254":1,"282":2}}],["analytics",{"2":{"229":1,"251":1,"264":1,"270":1}}],["analyzers",{"2":{"280":1}}],["analyze",{"2":{"4":2,"89":1,"159":5,"166":1,"177":2}}],["analysismessages",{"2":{"89":2}}],["analysistype",{"2":{"89":2,"166":3,"173":3}}],["analysisprompt",{"2":{"4":1}}],["analysis",{"0":{"166":1},"2":{"4":3,"89":4,"162":1,"166":6,"171":2,"173":4,"174":1,"176":1,"177":2}}],["an",{"2":{"2":1,"12":1,"60":1,"107":1,"170":1,"171":2,"176":1}}],["and",{"0":{"52":1,"171":1,"205":1,"241":1},"2":{"0":2,"1":1,"3":1,"4":4,"5":1,"7":3,"8":1,"9":1,"12":4,"13":2,"14":2,"17":1,"25":2,"26":1,"28":1,"29":1,"31":1,"32":1,"35":1,"37":2,"39":1,"43":1,"44":3,"46":1,"50":3,"55":1,"56":1,"57":2,"58":1,"59":2,"60":1,"62":1,"65":1,"73":2,"74":1,"94":1,"95":1,"98":1,"115":1,"116":2,"117":1,"120":1,"123":1,"127":1,"132":1,"137":1,"139":1,"140":1,"142":1,"145":1,"155":1,"156":1,"157":1,"158":2,"159":1,"160":2,"161":2,"162":1,"163":1,"165":7,"166":5,"170":2,"171":3,"173":2,"174":2,"176":3,"177":3,"178":1,"180":1,"182":1,"187":1,"199":1,"201":1,"210":1,"213":1,"224":1,"225":1,"228":2,"229":2,"243":2,"244":2,"248":2,"249":1,"251":1,"261":1,"263":1,"264":1,"269":2,"270":1,"275":1,"279":1,"280":1,"285":1,"292":1,"294":1}}],["astextcontent",{"2":{"266":1,"267":1}}],["ascii",{"2":{"209":2}}],["ask",{"2":{"170":1}}],["asking",{"2":{"28":1}}],["assist",{"2":{"170":1}}],["assistant",{"2":{"165":1,"170":1}}],["assess",{"2":{"177":1}}],["assessment`",{"2":{"177":1}}],["assessment",{"2":{"165":1,"166":1,"174":1}}],["assert",{"2":{"111":1}}],["as",{"2":{"2":1,"26":1,"54":1,"162":1,"179":1,"192":1,"200":1,"226":1,"264":1,"282":1,"285":1}}],["a",{"0":{"140":1},"1":{"141":1,"142":1},"2":{"2":2,"3":1,"6":1,"12":1,"14":1,"15":1,"16":3,"17":1,"18":1,"26":3,"29":1,"30":2,"31":2,"32":1,"40":1,"52":1,"54":1,"60":3,"83":1,"87":1,"92":1,"96":1,"97":1,"107":1,"140":1,"141":1,"146":1,"159":4,"163":1,"165":2,"166":2,"170":4,"171":2,"173":2,"174":1,"176":1,"177":2,"179":1,"181":1,"183":1,"188":1,"193":1,"202":1,"205":3,"209":1,"214":3,"223":1,"228":1,"231":4,"241":2,"246":1,"264":1,"267":1,"273":2,"276":1,"282":2,"285":1,"287":1,"289":1,"292":1,"294":1}}],["sqlite3",{"2":{"297":1}}],["sql",{"2":{"187":1,"297":2}}],["skip",{"2":{"135":1}}],["srv",{"2":{"134":2}}],["slice",{"2":{"168":3}}],["slow",{"2":{"129":1}}],["sleep",{"2":{"50":1,"52":2,"92":1,"99":2,"134":1,"222":1,"272":1,"295":1}}],["smith",{"2":{"228":2}}],["sm",{"2":{"92":35,"121":12,"122":2,"131":2,"240":17}}],["sh",{"2":{"290":1}}],["shared",{"2":{"258":1,"270":1,"273":2}}],["shutting",{"2":{"137":1,"153":1}}],["shutdown",{"0":{"47":1},"2":{"47":1,"137":5,"153":2,"283":4,"285":1}}],["shouldincludetool",{"2":{"132":2}}],["showing",{"2":{"60":1}}],["showtoolschema",{"2":{"50":2}}],["show",{"2":{"50":1}}],["syntax",{"2":{"186":1}}],["synthesize",{"2":{"174":2}}],["sync",{"2":{"40":1,"54":1,"55":1,"67":1,"72":1,"76":1,"81":1,"85":1,"92":2,"97":1,"99":1,"107":1,"108":2,"121":1,"125":1,"135":1,"198":1,"240":1,"297":1}}],["syscall",{"2":{"137":1,"153":1,"283":2,"295":1}}],["systemerror",{"2":{"219":1}}],["systemmessage",{"2":{"171":6}}],["system",{"0":{"171":1},"2":{"2":1,"3":1,"7":1,"14":1,"131":1,"135":1,"170":2,"171":3,"219":2,"248":2,"249":1,"270":1,"272":7,"280":2}}],["systems",{"2":{"1":1,"12":1,"251":1,"270":1}}],["space",{"2":{"258":1}}],["spawning",{"2":{"96":1,"285":1}}],["spawns",{"2":{"40":1,"97":1}}],["split",{"2":{"186":1}}],["sprintf",{"2":{"16":1,"26":1,"117":1,"122":1,"129":2,"134":1,"159":2,"165":2,"166":3,"168":1,"170":2,"171":3,"173":2,"174":3,"176":4,"177":2,"187":1,"188":1,"193":1,"208":2,"209":3,"210":3,"211":5,"213":1,"217":1,"218":1,"222":2,"228":5,"239":1,"246":1,"266":1,"267":3,"272":5,"282":3,"283":2,"291":1,"294":2,"295":3}}],["special",{"2":{"166":1}}],["specialized",{"2":{"144":1}}],["specified",{"2":{"165":1,"272":1}}],["specifically",{"2":{"165":1}}],["specification",{"2":{"13":1}}],["specific",{"2":{"4":1,"8":1,"9":1,"56":1,"57":1,"59":1,"73":1,"83":1,"87":1,"93":1,"94":1,"95":1,"122":2,"129":1,"131":1,"144":1,"151":1,"165":3,"244":1,"267":1,"277":1}}],["specify",{"2":{"2":1}}],["spec",{"2":{"14":1}}],["solutions",{"2":{"177":2}}],["solution",{"2":{"170":1}}],["source",{"2":{"166":1,"174":1,"179":1,"272":10}}],["sources",{"2":{"12":1,"18":1,"32":1,"174":2,"224":1}}],["somecondition",{"2":{"219":1}}],["some",{"2":{"90":1}}],["someone",{"2":{"16":1,"26":1,"176":1}}],["software",{"2":{"62":1,"171":2}}],["switch",{"2":{"8":1,"47":1,"50":1,"67":1,"68":1,"72":1,"84":1,"91":1,"98":1,"113":1,"114":1,"117":1,"152":1,"159":1,"165":1,"166":1,"170":1,"171":1,"173":1,"174":1,"176":1,"208":1,"209":1,"232":1,"246":1,"253":1,"266":1,"267":1,"282":1}}],["samples",{"2":{"272":1}}],["same",{"2":{"8":2,"109":1,"246":1,"263":1}}],["sales",{"2":{"89":1}}],["saveusertodb",{"2":{"228":2}}],["save",{"2":{"17":1,"26":1}}],["say",{"2":{"16":1,"26":1}}],["safebasedirs",{"2":{"282":2}}],["safe",{"0":{"213":1},"2":{"9":1,"154":1,"201":1,"206":1,"207":1,"213":1,"282":3}}],["safety",{"2":{"9":1,"14":1,"116":1}}],["safely",{"2":{"1":1,"165":1}}],["sdk",{"0":{"6":1},"1":{"7":1,"8":1,"9":1}}],["sseserver",{"2":{"150":2,"151":2,"152":2,"246":2,"253":2,"254":2,"272":2,"273":2,"275":1}}],["sseeventhandler",{"2":{"108":11}}],["sseclient",{"2":{"107":1,"108":2}}],["sse",{"0":{"42":1,"64":1,"105":1,"106":1,"107":1,"108":1,"150":1,"249":1,"261":1,"269":1,"272":1,"273":1,"275":1},"1":{"106":1,"107":1,"108":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1},"2":{"5":2,"8":1,"39":2,"42":2,"47":1,"64":2,"67":1,"72":1,"105":1,"106":2,"107":1,"113":1,"114":5,"150":3,"151":1,"152":1,"244":1,"246":2,"253":1,"254":3,"256":1,"257":1,"258":1,"262":1,"269":1,"270":1,"272":3,"273":2,"275":6,"276":1,"277":1,"299":1}}],["sig",{"2":{"295":2}}],["sigterm",{"2":{"137":1,"153":1,"283":1,"295":1}}],["sigchan",{"2":{"137":3}}],["signal",{"2":{"137":4,"153":2,"283":4,"295":4}}],["since",{"2":{"81":1,"124":2,"159":1,"198":1,"232":1,"297":1}}],["single",{"2":{"5":1,"62":1,"148":1,"193":1,"248":1,"264":1,"280":1}}],["similarities",{"2":{"174":1}}],["simulate",{"2":{"134":1,"222":1,"228":1,"272":1}}],["simultaneously",{"2":{"9":1}}],["simplest",{"2":{"26":1}}],["simple",{"2":{"3":1,"5":1,"13":2,"16":1,"26":1,"163":1,"176":1,"181":1,"202":1,"246":1,"282":1}}],["script",{"0":{"290":1}}],["scheme",{"2":{"214":3}}],["schematype",{"2":{"84":2}}],["schema",{"0":{"84":1},"2":{"36":1,"50":3,"84":9,"87":1}}],["schemas",{"2":{"3":1,"201":1}}],["scanrowtomap",{"2":{"187":1}}],["scientist",{"2":{"171":2}}],["scenario",{"2":{"162":1,"170":5}}],["scenarios",{"2":{"5":1,"39":1,"64":1,"65":1,"95":1,"147":1,"148":1,"149":1,"226":1,"242":1,"243":1,"244":2,"248":1,"251":1,"262":1,"263":1,"268":1,"278":1,"280":2,"299":1}}],["scopes",{"2":{"103":1}}],["suitable",{"2":{"176":1}}],["summary",{"2":{"129":1,"166":1,"173":3}}],["success",{"2":{"85":1,"191":1,"217":1}}],["successfully",{"2":{"99":1,"107":1,"134":1,"209":1,"216":1,"218":1,"228":1}}],["successful",{"2":{"50":1,"68":1,"229":1}}],["suggested",{"2":{"165":1}}],["suggestalternativetools",{"2":{"50":2}}],["suggest",{"2":{"50":1,"177":1}}],["suggestions",{"2":{"4":1}}],["subscribe",{"2":{"91":3,"92":2,"106":2,"107":2,"108":1,"273":2}}],["subscriber",{"2":{"91":3,"92":7}}],["subscriptionmanager",{"2":{"92":9}}],["subscription",{"0":{"91":1,"92":1},"2":{"91":1,"92":2}}],["subscriptions",{"0":{"90":1},"1":{"91":1,"92":1},"2":{"74":1,"90":1,"91":2,"92":1}}],["subprocess",{"2":{"40":1,"96":1,"97":1,"280":1,"285":1}}],["subtract",{"2":{"3":1,"20":1,"117":2,"202":1,"208":1,"266":2}}],["supported",{"2":{"38":1,"58":1,"95":1,"277":1}}],["support",{"2":{"9":1,"13":1,"14":2,"28":1,"51":1,"90":1,"91":1,"92":1,"170":2,"269":1,"286":1}}],["supporting",{"2":{"9":1}}],["supports",{"2":{"5":1,"23":1,"91":1,"144":1,"147":1,"204":1,"220":1,"243":1}}],["seamless",{"2":{"263":1}}],["searchusersindb",{"2":{"228":2}}],["search",{"2":{"3":1,"220":3,"228":5,"234":1}}],["several",{"2":{"207":1}}],["severity",{"2":{"135":3}}],["seh",{"2":{"108":27}}],["see",{"2":{"52":1}}],["selecttransport",{"2":{"113":4}}],["selection",{"0":{"112":1,"253":1},"1":{"113":1,"114":1}}],["select",{"2":{"47":2,"51":1,"54":1,"69":1,"91":1,"92":1,"99":3,"104":2,"107":3,"108":1,"135":2,"187":1,"210":2,"222":1,"253":1,"254":1,"272":2,"294":1,"298":1}}],["sec",{"2":{"137":1}}],["secret",{"2":{"103":1,"241":2}}],["sections",{"2":{"160":1}}],["section",{"2":{"57":1,"156":1}}],["seconds",{"2":{"52":2,"128":2}}],["second",{"2":{"41":1,"47":1,"50":3,"51":2,"52":3,"69":1,"92":1,"99":2,"102":2,"107":1,"129":1,"137":1,"196":1,"202":1,"210":1,"211":1,"229":1,"266":1,"272":2,"273":1,"275":1,"283":1,"294":1,"295":1}}],["security",{"0":{"259":1},"1":{"260":1,"261":1},"2":{"12":1,"165":4,"187":1,"209":1,"210":1,"261":1,"282":1,"294":1}}],["secure",{"2":{"5":1,"12":1,"245":1,"261":1}}],["setconnmaxlifetime",{"2":{"297":1}}],["setcache",{"2":{"229":1}}],["setmaxidleconns",{"2":{"297":1}}],["setmaxopenconns",{"2":{"297":1}}],["setsseconfig",{"2":{"114":2}}],["setstreamablehttpconfig",{"2":{"114":2}}],["setstdioconfig",{"2":{"114":2}}],["setheader",{"2":{"106":1,"107":2}}],["set",{"2":{"41":2,"42":1,"81":2,"106":1,"107":1,"114":3,"211":1,"232":2,"275":2}}],["settings",{"2":{"9":1,"121":2,"184":1,"197":1}}],["setupsignalhandling",{"2":{"295":2}}],["setupserver",{"2":{"254":2}}],["setupgracefulshutdown",{"2":{"283":2}}],["setup",{"2":{"5":1,"137":1,"156":1,"291":1,"295":1}}],["session=",{"2":{"124":5}}],["sessionmanager",{"2":{"121":6,"122":5,"131":5,"137":2}}],["sessionid",{"2":{"9":6,"121":6,"122":2,"124":7,"125":6,"128":8,"129":9,"131":2,"135":7,"229":2,"240":2}}],["sessionstate",{"2":{"9":2,"121":5,"131":1}}],["sessions",{"2":{"9":4,"121":5,"128":4,"131":1,"135":7,"240":6,"277":1}}],["session",{"0":{"9":1,"120":1,"121":1,"122":1,"237":1,"277":1},"1":{"121":1,"122":1,"238":1,"239":1,"240":1,"241":1},"2":{"9":5,"115":1,"120":1,"121":2,"122":15,"125":1,"128":4,"129":2,"131":4,"132":1,"135":1,"153":5,"156":1,"231":1,"240":11,"277":2}}],["serialization",{"2":{"8":1,"245":1,"256":1}}],["service",{"2":{"132":1,"170":1,"278":1,"299":1}}],["services",{"2":{"5":1,"39":1,"95":1,"149":1,"226":3,"245":1,"250":2,"262":1}}],["serve",{"2":{"162":1,"182":1,"189":1}}],["servesse",{"2":{"5":1,"8":1,"23":1}}],["servestdio",{"2":{"5":1,"7":1,"8":1,"16":1,"23":1,"26":1,"117":1,"122":1,"137":1,"141":1,"148":1,"152":1,"153":1,"154":1,"159":1,"165":1,"183":1,"197":1,"209":1,"246":1,"253":1,"254":1,"282":1,"283":1,"291":1,"295":1}}],["servehttp",{"2":{"5":1,"8":1,"241":1}}],["serverfromcontext",{"2":{"134":1,"272":2,"276":1}}],["servername",{"2":{"72":6}}],["serverinfo",{"2":{"46":2}}],["server",{"0":{"7":1,"16":1,"17":1,"22":1,"26":1,"27":1,"34":1,"72":1,"115":1,"137":1,"139":1,"140":1,"141":1,"142":1,"143":1,"150":1,"153":1,"228":1,"254":1,"266":1,"272":1,"275":1,"282":1,"283":1},"1":{"28":1,"29":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"140":1,"141":2,"142":2,"143":1,"144":2,"145":2,"146":2,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1},"2":{"5":4,"7":5,"8":7,"9":7,"14":1,"15":1,"16":8,"17":1,"18":1,"20":1,"22":6,"23":5,"25":1,"26":12,"28":2,"29":1,"30":2,"32":1,"35":1,"38":1,"39":1,"40":2,"41":1,"45":1,"46":2,"47":1,"60":1,"62":2,"65":1,"67":1,"72":1,"81":1,"91":1,"97":2,"98":2,"105":1,"110":4,"111":10,"114":1,"117":5,"122":10,"124":6,"125":3,"126":2,"128":4,"131":1,"133":1,"134":1,"137":17,"138":1,"140":2,"141":8,"142":8,"144":14,"145":4,"146":5,"148":4,"149":5,"150":5,"151":7,"152":5,"153":9,"154":9,"155":1,"156":1,"158":1,"159":18,"160":2,"165":4,"178":1,"183":4,"187":1,"197":5,"201":1,"209":3,"223":1,"228":8,"229":21,"231":2,"232":5,"239":1,"242":2,"244":1,"246":12,"253":4,"254":16,"261":5,"266":5,"267":6,"268":1,"269":1,"270":1,"272":11,"273":13,"275":8,"276":4,"277":3,"282":7,"283":13,"285":1,"286":2,"287":1,"289":2,"290":2,"291":9,"292":1,"295":7}}],["servers",{"0":{"147":1,"156":1},"1":{"148":1,"149":1,"150":1,"151":1,"157":1,"158":1,"159":1,"160":1},"2":{"0":1,"5":1,"7":4,"13":1,"14":1,"15":1,"30":1,"31":1,"57":1,"58":1,"74":1,"96":1,"100":1,"105":1,"109":1,"115":1,"139":1,"152":1,"156":1,"157":2,"158":1,"225":1,"226":1,"244":1,"251":2,"263":1,"264":1,"269":1,"280":1,"285":1}}],["sensitive",{"2":{"129":1}}],["sent",{"0":{"150":1},"2":{"5":1,"14":1,"23":1,"105":1,"244":1,"269":1,"276":1}}],["sending",{"2":{"290":1}}],["sendnotificationtoclient",{"2":{"272":2,"276":1,"277":1}}],["sendnotificationtoallclients",{"2":{"134":1}}],["sendwelcome",{"2":{"129":1}}],["sendalert",{"2":{"129":2,"135":1}}],["send",{"2":{"3":1,"71":2,"129":1,"133":1,"134":1,"272":4,"273":2,"276":3,"277":3,"289":1,"290":6}}],["store",{"2":{"241":2}}],["storage",{"2":{"239":1}}],["story",{"2":{"177":3}}],["stopped",{"2":{"137":1}}],["stopping",{"2":{"128":1}}],["stops",{"2":{"128":1}}],["stop",{"2":{"54":1,"92":3,"108":1,"272":1}}],["step",{"2":{"134":1}}],["steps",{"0":{"56":1,"73":1,"93":1,"138":1,"155":1,"160":1,"178":1,"199":1,"224":1,"242":1,"262":1,"268":1,"278":1,"299":1},"2":{"177":3}}],["stdin",{"2":{"285":1}}],["stdiooptions",{"2":{"99":2,"114":2}}],["stdioclient",{"2":{"98":1,"99":1}}],["stdio",{"0":{"40":1,"62":1,"96":1,"97":1,"98":1,"99":1,"148":1,"248":1,"260":1,"279":1,"282":1,"283":1},"1":{"97":1,"98":1,"99":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1},"2":{"5":2,"8":1,"14":1,"16":1,"17":1,"23":1,"26":1,"30":1,"35":2,"39":1,"40":2,"47":1,"60":1,"62":1,"67":1,"96":1,"98":1,"99":1,"113":2,"114":5,"141":1,"148":1,"244":1,"246":1,"254":3,"256":1,"257":1,"258":1,"262":1,"279":1,"280":1,"282":1,"285":1,"286":1,"287":1,"289":1,"290":1,"291":2}}],["stderr",{"2":{"282":1}}],["stdencoding",{"2":{"80":1,"192":1,"209":1}}],["stdout",{"2":{"137":1,"285":1}}],["strategies",{"2":{"177":1}}],["str",{"2":{"168":4}}],["stream",{"2":{"272":3,"275":1,"282":1,"298":1}}],["streamablehttpcoption",{"2":{"114":1}}],["streamablehttpclientpool",{"2":{"104":6}}],["streamablehttp",{"0":{"31":1,"41":1,"63":1,"100":1,"101":1,"102":1,"103":1,"104":1,"225":1,"228":1,"229":1,"250":1},"1":{"101":1,"102":1,"103":1,"104":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1},"2":{"14":1,"23":1,"31":4,"35":1,"39":1,"41":2,"47":1,"63":1,"100":1,"101":1,"102":1,"103":1,"113":1,"114":4,"225":1,"226":1,"228":3,"229":2,"231":1,"232":2,"244":1,"246":2,"253":1,"254":3,"262":1}}],["streamingstreamablehttpweb",{"2":{"245":1}}],["streaming",{"0":{"222":1},"2":{"5":2,"64":1,"150":1,"222":1,"270":2}}],["struct",{"2":{"9":1,"47":3,"51":1,"54":1,"55":1,"67":1,"71":1,"72":1,"81":2,"85":2,"88":1,"92":1,"99":5,"104":1,"107":4,"108":1,"111":1,"113":1,"114":5,"117":2,"118":3,"119":1,"121":2,"124":1,"125":1,"126":1,"128":1,"129":1,"131":1,"132":1,"135":1,"177":1,"197":1,"198":2,"207":1,"210":4,"214":1,"228":1,"240":2,"241":2,"267":2,"297":1}}],["structure",{"0":{"163":1,"181":1,"202":1},"2":{"4":1,"161":1}}],["structured",{"2":{"3":2,"4":1,"162":1,"201":1,"207":1,"214":1,"219":1}}],["strings",{"2":{"76":1,"80":1,"119":3,"166":4,"170":1,"171":1,"174":2,"176":1,"177":1,"186":1,"209":1,"210":3,"211":1,"228":3,"241":2,"282":6,"298":1}}],["string",{"2":{"9":5,"30":1,"31":1,"40":2,"41":2,"42":2,"45":1,"47":1,"50":2,"52":1,"60":2,"67":1,"68":1,"71":3,"72":8,"77":2,"79":3,"80":6,"81":5,"83":3,"84":9,"85":5,"87":3,"88":8,"89":6,"92":4,"97":1,"102":2,"103":1,"104":1,"107":7,"108":3,"110":2,"111":7,"113":3,"114":27,"117":3,"118":9,"119":4,"121":10,"122":3,"125":3,"128":12,"129":3,"131":3,"132":3,"134":1,"135":9,"159":5,"165":3,"166":3,"168":14,"170":1,"171":3,"173":2,"174":2,"176":4,"177":9,"183":1,"184":3,"186":3,"187":3,"188":1,"191":2,"193":2,"195":1,"196":1,"197":4,"198":1,"204":6,"205":1,"207":1,"210":4,"211":5,"213":1,"214":3,"217":3,"218":1,"220":2,"222":3,"223":1,"228":9,"229":2,"232":2,"239":2,"240":8,"241":3,"253":1,"266":1,"267":3,"272":8,"276":1,"282":10,"283":2,"287":1,"294":1,"297":4,"298":1}}],["stages",{"0":{"44":1}}],["startup",{"2":{"154":1,"285":1}}],["startwithgracefulshutdown",{"2":{"137":2}}],["startserver",{"2":{"253":1}}],["starts",{"2":{"128":1,"282":1}}],["starting",{"0":{"147":1},"1":{"148":1,"149":1,"150":1,"151":1},"2":{"128":1,"228":1,"229":1,"232":1,"246":3,"254":3,"272":1,"273":1,"285":1,"290":1,"291":1}}],["starttime",{"2":{"121":2,"232":1}}],["start",{"0":{"25":1,"34":1},"1":{"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1},"2":{"16":1,"23":1,"26":2,"30":2,"52":1,"54":1,"92":4,"99":3,"108":1,"124":4,"137":2,"139":1,"141":1,"148":1,"149":2,"150":2,"151":2,"152":2,"159":4,"160":1,"170":1,"228":2,"229":1,"231":1,"246":2,"253":2,"254":3,"272":2,"273":1,"282":1,"283":1,"289":1,"295":1}}],["started",{"0":{"10":1},"1":{"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1},"2":{"14":1,"122":1,"124":2,"128":2}}],["standardclaims",{"2":{"241":1}}],["standardized",{"2":{"12":1}}],["standard",{"0":{"231":1,"234":1,"235":1},"2":{"5":2,"12":1,"96":1,"148":1,"244":1,"279":1}}],["stat",{"2":{"294":1}}],["statistical",{"2":{"171":1}}],["statistics",{"2":{"166":1}}],["static",{"0":{"182":1},"1":{"183":1,"184":1},"2":{"2":2,"21":1,"180":1,"182":1,"183":1}}],["stateless",{"0":{"238":1,"239":1},"1":{"239":1,"240":1},"2":{"225":1,"226":1,"250":1}}],["state",{"0":{"121":1},"2":{"9":6,"120":1,"132":1,"239":1,"270":1}}],["stateful",{"0":{"238":1,"240":1},"1":{"239":1,"240":1},"2":{"7":1}}],["statusunauthorized",{"2":{"241":3}}],["statusmethodnotallowed",{"2":{"232":1}}],["statuscode",{"2":{"211":1}}],["status",{"2":{"3":1,"118":3,"191":1,"211":1,"217":1,"222":1,"232":4,"267":4,"276":1}}],["s",{"0":{"18":1,"32":1},"2":{"2":1,"5":3,"7":4,"8":4,"9":3,"14":1,"16":5,"21":1,"22":1,"23":3,"26":5,"28":2,"30":3,"45":2,"46":2,"47":1,"50":5,"60":7,"67":1,"72":4,"75":1,"76":4,"79":10,"80":2,"83":5,"84":4,"85":1,"87":8,"91":3,"92":1,"110":3,"111":3,"113":3,"114":1,"117":3,"122":5,"124":11,"125":1,"128":2,"129":3,"137":8,"141":2,"142":1,"144":2,"145":1,"146":1,"148":2,"149":2,"150":2,"151":2,"152":4,"153":7,"154":2,"159":7,"165":7,"166":6,"168":1,"170":4,"171":3,"173":4,"174":6,"176":5,"177":2,"183":3,"184":1,"186":1,"187":3,"188":3,"193":2,"195":3,"196":1,"197":3,"200":1,"204":2,"208":1,"209":4,"218":1,"220":1,"223":3,"228":20,"229":16,"232":2,"239":1,"246":8,"253":5,"254":6,"261":1,"266":5,"267":4,"272":7,"273":9,"275":1,"277":1,"282":7,"283":14,"287":2,"291":5,"294":3,"295":2}}],["tmp",{"2":{"282":2}}],["tc",{"2":{"111":17}}],["tlsclientconfig",{"2":{"102":1}}],["tls",{"2":{"97":1,"102":1,"261":1}}],["ttl",{"2":{"81":5,"198":2}}],["typically",{"2":{"75":1,"96":1,"166":1,"182":1,"253":1,"285":1}}],["types",{"0":{"49":1,"61":1,"169":1,"189":1,"193":1,"204":1,"215":1,"218":1},"1":{"62":1,"63":1,"64":1,"65":1,"170":1,"171":1,"190":1,"191":1,"192":1,"193":1,"216":1,"217":1,"218":1,"219":1},"2":{"3":1,"36":1,"80":1,"84":1,"117":1,"144":1,"189":2,"201":1,"204":1,"228":1}}],["type",{"0":{"213":1},"2":{"2":1,"9":1,"14":2,"30":1,"47":2,"51":1,"54":1,"55":1,"67":2,"71":1,"72":2,"79":1,"81":2,"83":1,"84":2,"85":2,"88":1,"89":1,"92":2,"99":1,"104":1,"107":1,"108":1,"111":1,"113":1,"114":1,"116":1,"117":2,"118":2,"119":1,"121":2,"122":2,"124":1,"125":1,"126":1,"128":1,"129":1,"131":1,"132":1,"134":1,"135":3,"166":1,"173":1,"174":2,"177":1,"198":2,"201":1,"204":3,"207":3,"214":2,"218":2,"219":1,"220":1,"228":1,"232":2,"234":1,"235":1,"240":2,"241":2,"267":2,"282":1,"297":1}}],["typed",{"0":{"80":1,"116":1,"117":1,"118":1},"1":{"117":1,"118":1,"119":1},"2":{"2":1,"3":1,"115":1,"116":1,"117":3,"156":1,"158":1,"178":1,"224":1}}],["t",{"0":{"34":1},"2":{"30":1,"34":1,"51":6,"69":1,"84":9,"111":5,"253":1,"267":1,"282":2}}],["trimprefix",{"2":{"241":1,"282":1}}],["trimspace",{"2":{"210":1}}],["trimmed",{"2":{"210":2}}],["trigger",{"2":{"99":1,"107":1}}],["trends",{"2":{"89":1}}],["truncatestring",{"2":{"79":2}}],["true",{"2":{"22":1,"51":1,"55":2,"81":1,"113":3,"117":1,"122":1,"131":2,"132":6,"137":3,"142":3,"144":6,"151":2,"159":3,"165":1,"176":1,"183":1,"184":1,"187":3,"197":1,"204":1,"209":1,"213":1,"219":1,"228":3,"229":4,"240":1,"246":1,"266":1,"267":3,"272":3,"273":4,"282":4,"283":4,"291":1,"297":1}}],["try",{"2":{"54":1,"99":1}}],["trading",{"2":{"251":1}}],["traditional",{"2":{"5":1,"100":1,"149":1,"225":1,"226":1,"244":1,"250":1,"262":1,"278":1,"299":1}}],["traversal",{"2":{"119":1,"209":1,"282":1}}],["transportuse",{"2":{"245":1}}],["transportrequirements",{"2":{"113":5}}],["transportbest",{"2":{"95":1}}],["transport",{"0":{"8":1,"23":1,"61":1,"95":1,"112":1,"114":1,"148":1,"149":1,"151":1,"225":1,"243":1,"245":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"254":1,"260":1,"263":1,"269":1,"279":1},"1":{"62":1,"63":1,"64":1,"65":1,"113":1,"114":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"244":1,"245":1,"246":1,"247":1,"248":2,"249":2,"250":2,"251":2,"252":1,"253":2,"254":2,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"264":1,"265":1,"266":1,"267":1,"268":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1},"2":{"5":4,"8":6,"14":1,"23":1,"38":2,"41":2,"56":1,"57":1,"59":1,"73":1,"93":1,"94":2,"95":1,"102":5,"103":2,"113":1,"114":13,"139":1,"141":1,"147":1,"151":1,"152":4,"225":1,"226":1,"242":2,"243":2,"244":2,"246":7,"253":2,"254":2,"262":5,"263":1,"264":1,"268":1,"269":1,"270":1,"276":1,"278":2,"279":2,"280":1,"299":3}}],["transports",{"0":{"5":1,"94":1,"261":1},"1":{"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1},"2":{"5":2,"14":1,"56":1,"58":1,"59":1,"73":1,"90":1,"93":1,"95":1,"114":1,"254":1,"268":1,"278":1}}],["table",{"2":{"187":9}}],["tableresource",{"2":{"7":1}}],["task",{"2":{"168":4,"171":5,"205":1}}],["tasks",{"2":{"162":1}}],["tags",{"2":{"118":5,"204":2}}],["take",{"2":{"3":1,"20":1,"200":1,"222":1}}],["title",{"2":{"166":1,"170":1,"171":1,"174":1}}],["ticker",{"2":{"54":3,"240":1,"272":3}}],["ticket",{"2":{"3":1}}],["timeofday",{"2":{"132":2}}],["timeout",{"0":{"52":1,"196":1},"2":{"41":1,"47":5,"49":1,"50":1,"52":1,"54":5,"98":1,"137":1,"196":2,"204":1,"207":2,"210":1,"211":2,"272":2,"294":1}}],["timehttp",{"2":{"95":1}}],["timemulti",{"2":{"95":1,"245":1}}],["timed",{"2":{"50":1,"52":1,"98":1,"294":1}}],["time",{"0":{"276":1},"1":{"277":1},"2":{"5":3,"39":1,"40":1,"41":1,"47":4,"50":4,"51":6,"52":5,"54":4,"64":1,"67":1,"69":3,"76":1,"81":6,"90":1,"92":2,"97":1,"99":4,"102":2,"105":1,"107":3,"113":1,"116":1,"117":1,"118":3,"121":3,"124":4,"128":2,"129":2,"132":1,"133":1,"134":2,"135":2,"137":1,"150":2,"159":11,"191":1,"196":1,"198":5,"210":1,"211":1,"217":1,"222":3,"228":5,"229":4,"232":2,"240":18,"245":2,"249":2,"251":1,"262":1,"269":1,"270":2,"272":13,"273":4,"275":1,"276":3,"283":2,"294":1,"295":3,"297":5,"299":1}}],["timestr",{"2":{"159":4}}],["timestamp",{"2":{"81":3,"135":2,"191":1,"198":3,"217":1,"232":1,"276":1,"297":2}}],["times",{"2":{"4":1}}],["tenant",{"2":{"226":1}}],["terms",{"2":{"176":1}}],["terminated",{"2":{"148":1}}],["technical",{"2":{"170":3,"176":2,"177":1}}],["tell",{"2":{"144":1}}],["telemetryhooks",{"2":{"128":9,"137":2}}],["telemetry",{"2":{"127":1}}],["testreq",{"2":{"113":2}}],["testwithinprocessclient",{"2":{"111":1}}],["tests",{"2":{"111":1}}],["testserver",{"2":{"42":1}}],["testclient",{"2":{"111":9}}],["test",{"2":{"28":1,"29":1,"40":1,"110":5,"111":3,"266":1,"287":1,"289":2,"290":4,"292":1}}],["testingno",{"2":{"245":1}}],["testing",{"0":{"28":1,"29":1,"111":1,"289":1,"290":1},"2":{"7":1,"39":1,"62":1,"65":1,"111":1,"113":2,"248":1,"251":2,"264":3,"280":1}}],["templatename",{"2":{"177":3}}],["templates",{"0":{"164":1,"186":1},"1":{"165":1,"166":1},"2":{"4":2,"18":1,"32":1,"86":1,"144":1,"155":1,"158":1,"161":1,"162":1,"185":1,"199":1,"224":1}}],["template",{"0":{"88":1,"177":1},"2":{"2":1,"4":1,"88":1,"177":11}}],["textdata",{"2":{"193":2}}],["textresourcecontent",{"2":{"184":1,"187":1,"196":1}}],["textresourcecontents",{"2":{"159":1,"186":1,"191":1,"195":1,"228":1,"272":1,"282":1}}],["textcontent",{"2":{"88":1,"266":2,"267":2}}],["text",{"0":{"190":1,"216":1},"2":{"2":2,"21":1,"30":2,"60":1,"79":3,"80":4,"83":2,"87":1,"88":1,"91":1,"111":1,"159":1,"181":1,"183":3,"184":1,"186":1,"187":1,"188":1,"190":3,"191":1,"193":4,"195":1,"196":1,"197":1,"218":4,"219":2,"228":1,"235":2,"266":2,"267":2,"272":1,"280":1,"282":4}}],["txt",{"2":{"2":1,"282":3}}],["toupper",{"2":{"210":1}}],["today",{"2":{"170":1}}],["tone",{"2":{"168":3}}],["took",{"2":{"129":1}}],["tool=",{"2":{"124":3}}],["toolmiddleware",{"2":{"124":1,"125":1,"126":1,"137":1}}],["toolresult",{"2":{"85":4}}],["toolcall",{"2":{"71":4,"85":9}}],["toolcalls",{"2":{"71":2}}],["toolname",{"2":{"50":4,"72":2,"84":4,"128":4,"129":5,"131":2,"229":3}}],["toolhandlerfunc",{"2":{"124":2}}],["toolhandler",{"2":{"9":1,"111":1,"122":1,"125":2,"126":2,"229":4}}],["tool",{"0":{"36":1,"83":1,"84":1,"85":1,"117":1,"118":1,"130":1,"201":1,"202":1,"203":1,"206":1,"209":1,"210":1,"211":1,"220":1,"221":1},"1":{"131":1,"132":1,"202":1,"204":1,"205":1,"207":1,"208":1,"209":1,"210":1,"211":1,"222":1,"223":1},"2":{"3":2,"4":1,"16":5,"26":5,"28":2,"30":4,"31":2,"32":1,"36":2,"45":6,"49":1,"50":14,"52":8,"60":10,"68":3,"71":3,"72":2,"83":11,"84":11,"91":2,"98":2,"110":4,"111":4,"113":2,"117":4,"122":1,"124":3,"128":3,"129":2,"131":7,"132":10,"159":1,"202":2,"206":1,"209":1,"220":2,"229":2,"231":1,"246":1,"264":1,"266":1,"267":2,"282":1,"283":1,"287":5,"289":1,"290":1,"291":1,"292":1}}],["toolscapability",{"2":{"46":1,"266":1,"267":1,"287":1}}],["tools",{"0":{"3":1,"20":1,"82":1,"116":1,"122":1,"200":1,"223":1},"1":{"83":1,"84":1,"85":1,"117":1,"118":1,"119":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1},"2":{"3":2,"5":1,"7":5,"12":1,"13":1,"14":1,"18":2,"20":1,"29":1,"30":7,"32":1,"39":1,"44":1,"45":8,"46":1,"50":10,"54":1,"56":1,"58":1,"59":1,"60":12,"71":5,"72":4,"73":1,"74":1,"82":1,"83":12,"84":4,"91":2,"95":1,"97":4,"101":4,"106":4,"108":1,"110":1,"115":1,"116":1,"120":1,"128":3,"130":1,"131":4,"132":4,"137":1,"142":1,"144":2,"148":2,"150":1,"155":1,"156":1,"157":1,"158":2,"160":1,"178":3,"199":1,"200":1,"201":1,"209":1,"220":1,"223":3,"224":1,"228":1,"229":4,"231":3,"234":2,"244":1,"245":1,"248":3,"249":1,"254":2,"266":1,"267":3,"270":2,"272":1,"273":1,"279":1,"280":4,"282":1,"283":1,"286":1,"287":8,"289":4,"290":4,"291":1,"292":1,"297":1}}],["tokenstring",{"2":{"241":2}}],["tokenvalidator",{"2":{"126":5}}],["token",{"2":{"103":1,"106":1,"114":2,"126":6,"229":5,"241":11}}],["tokenurl",{"2":{"103":1}}],["total",{"2":{"91":1,"134":1,"228":3,"235":1,"272":1}}],["topic",{"2":{"73":1,"176":7,"273":1}}],["to",{"2":{"1":1,"2":2,"3":2,"4":2,"5":1,"7":4,"8":1,"12":1,"13":1,"15":2,"16":2,"17":2,"21":1,"26":2,"28":2,"30":4,"32":1,"40":4,"41":1,"46":1,"47":1,"50":2,"52":1,"54":1,"55":2,"56":1,"57":2,"58":3,"60":4,"67":1,"71":2,"72":2,"74":2,"75":2,"76":1,"79":3,"80":2,"83":1,"84":1,"87":3,"89":2,"91":4,"92":3,"94":1,"97":1,"98":4,"99":1,"106":1,"107":1,"110":1,"117":1,"118":1,"122":1,"126":1,"133":1,"134":1,"138":1,"139":1,"142":1,"144":1,"145":1,"155":3,"156":2,"157":2,"158":2,"159":1,"160":3,"162":2,"163":1,"165":2,"166":2,"170":1,"173":2,"174":1,"176":1,"177":1,"178":1,"179":2,"180":1,"183":1,"185":1,"188":1,"195":2,"199":1,"200":1,"201":1,"202":1,"209":2,"210":5,"211":3,"213":1,"217":1,"220":2,"222":1,"223":1,"224":1,"228":1,"229":1,"241":1,"243":1,"254":1,"266":1,"267":1,"272":2,"273":2,"276":4,"277":3,"282":8,"285":1,"286":1,"287":1,"290":1,"291":1}}],["thoughtful",{"2":{"170":1,"173":1}}],["throughput",{"0":{"257":1}}],["through",{"2":{"20":1,"25":1,"74":1,"96":1,"188":1,"276":1}}],["thread",{"2":{"9":1}}],["this",{"2":{"15":1,"25":1,"26":1,"29":1,"57":1,"135":1,"140":1,"145":1,"156":1,"166":1,"173":3,"177":2,"190":1,"241":1,"253":1,"292":1}}],["things",{"2":{"3":1,"146":1}}],["think",{"2":{"2":1,"179":1,"200":1}}],["than",{"2":{"3":1,"8":1}}],["that",{"2":{"1":1,"2":1,"3":1,"4":1,"6":1,"12":1,"18":1,"20":1,"30":1,"32":1,"34":1,"40":1,"57":1,"82":1,"97":1,"115":1,"146":1,"155":1,"159":2,"161":1,"162":1,"173":1,"174":1,"179":1,"200":2,"201":1,"222":1,"223":1,"269":1,"270":1,"280":1}}],["then",{"2":{"160":1}}],["these",{"2":{"113":1,"231":1}}],["their",{"2":{"2":1,"78":1}}],["they",{"2":{"2":1,"3":1,"20":1,"21":1,"161":1,"162":1,"180":1,"201":1,"282":2}}],["them",{"2":{"0":1,"2":1,"179":1,"200":1}}],["the",{"0":{"247":1},"1":{"248":1,"249":1,"250":1,"251":1},"2":{"0":1,"1":1,"2":1,"3":1,"4":1,"6":2,"8":1,"12":1,"13":1,"16":2,"17":1,"18":1,"20":1,"21":1,"24":4,"26":3,"28":2,"29":3,"30":4,"31":2,"34":1,"35":1,"36":2,"37":1,"38":2,"43":1,"44":1,"45":1,"46":2,"50":1,"52":1,"60":1,"71":1,"81":1,"94":1,"97":1,"109":1,"140":2,"141":1,"153":1,"159":4,"160":1,"163":1,"165":3,"166":2,"170":3,"171":1,"173":4,"174":2,"176":1,"198":1,"200":1,"201":1,"202":1,"206":1,"210":2,"220":1,"228":1,"229":1,"243":1,"244":1,"246":2,"253":1,"254":1,"263":1,"266":3,"267":3,"272":1,"273":1,"275":2,"276":3,"277":3,"279":1,"282":4,"283":1,"285":1,"289":1,"292":1}}],["md",{"2":{"183":2}}],["memory",{"0":{"258":1,"298":1},"2":{"257":1,"258":1,"272":3,"298":1}}],["mechanisms",{"2":{"226":1}}],["metricscollector",{"2":{"128":2}}],["metrics",{"2":{"128":16,"137":2,"232":3,"272":17}}],["metadata",{"0":{"146":1},"2":{"118":4,"140":1}}],["method",{"2":{"30":1,"91":2,"92":8,"108":4,"153":4,"211":3,"232":2,"234":1,"279":1,"289":3,"290":4}}],["methods",{"0":{"207":1,"214":1},"2":{"5":1,"14":1,"23":1,"147":1,"206":1,"207":1,"208":1,"213":1,"243":1,"277":1}}],["medium",{"2":{"113":5,"168":1,"205":1}}],["messagenotification",{"2":{"91":1}}],["message",{"0":{"169":1,"170":1},"1":{"170":1,"171":1},"2":{"87":4,"88":4,"91":7,"92":2,"108":1,"134":1,"135":7,"151":1,"153":2,"171":1,"191":1,"216":2,"228":1,"236":1,"246":4,"272":1,"273":3,"275":4,"276":1,"283":4,"291":6}}],["messages",{"2":{"87":3,"88":8,"89":2,"133":1,"159":1,"165":1,"166":1,"168":1,"170":5,"171":7,"173":1,"174":1,"176":1,"177":1,"285":1,"292":1}}],["msc",{"2":{"72":12,"99":26}}],["m",{"2":{"67":3,"124":8,"125":11,"126":2,"170":2,"241":5}}],["mux",{"2":{"232":7}}],["mustcompile",{"2":{"214":1}}],["must",{"2":{"165":1,"213":1,"214":1,"294":1}}],["mutex",{"2":{"54":5,"55":12,"72":7,"81":5,"92":7,"107":11,"108":5,"121":7,"125":5,"135":9,"198":6,"240":7}}],["multiclient",{"2":{"113":7}}],["multiserverclient",{"2":{"72":6}}],["multi",{"0":{"72":1,"114":1,"170":1,"254":1},"2":{"9":2,"64":1,"226":1,"246":1,"249":1,"254":2,"269":1,"270":1}}],["multiple",{"0":{"193":1,"218":1},"2":{"4":1,"5":2,"7":1,"9":3,"14":1,"23":1,"120":1,"147":1,"150":1,"174":1,"193":1,"197":1,"226":1,"243":1,"254":1}}],["multiply",{"2":{"3":1,"20":1,"117":2,"202":1,"208":1,"266":2}}],["mc",{"2":{"47":11}}],["mcpmethod",{"2":{"153":2}}],["mcpserver",{"2":{"111":1,"137":1,"223":1,"229":4,"253":1,"254":1,"267":6,"272":6,"273":2,"276":3,"277":1,"283":5}}],["mcpservers",{"2":{"28":1,"286":1}}],["mcpaddress",{"2":{"71":2}}],["mcpclient",{"2":{"71":7,"266":4,"267":4}}],["mcpclientmanager",{"2":{"67":4}}],["mcp",{"0":{"1":1,"12":1,"13":1,"16":1,"29":1,"57":1,"156":1,"231":1,"234":1,"235":1,"292":1},"1":{"2":1,"3":1,"4":1,"5":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"157":1,"158":1,"159":1,"160":1},"2":{"0":3,"2":6,"3":17,"4":13,"5":2,"6":2,"7":4,"9":3,"12":1,"13":3,"14":2,"15":5,"16":14,"17":1,"20":9,"21":3,"23":1,"25":2,"26":15,"28":1,"29":3,"30":7,"31":6,"32":1,"36":1,"37":1,"38":1,"39":2,"40":3,"45":2,"46":8,"50":2,"51":3,"52":4,"55":2,"57":2,"58":3,"60":8,"63":1,"64":1,"67":3,"68":2,"69":2,"71":2,"72":5,"74":1,"76":3,"77":4,"79":3,"81":4,"83":3,"84":3,"85":1,"87":3,"88":7,"89":2,"91":7,"92":5,"95":1,"97":4,"98":2,"99":2,"101":1,"102":1,"103":3,"104":2,"106":1,"107":3,"108":8,"110":9,"111":12,"114":3,"115":1,"117":17,"118":3,"122":8,"124":4,"125":2,"126":2,"128":2,"131":4,"132":4,"134":3,"135":5,"137":1,"138":1,"139":1,"140":1,"141":2,"147":1,"151":1,"152":1,"153":2,"156":2,"157":2,"159":29,"160":1,"162":1,"163":8,"165":19,"166":5,"168":5,"170":12,"171":9,"173":5,"174":5,"176":5,"177":5,"178":1,"180":1,"181":3,"183":7,"184":8,"186":7,"187":11,"188":7,"190":4,"191":4,"192":4,"193":4,"195":5,"196":5,"197":3,"198":3,"202":12,"204":25,"205":13,"206":1,"207":2,"208":8,"209":20,"210":8,"211":9,"213":9,"214":1,"216":3,"217":4,"218":4,"219":6,"220":13,"222":4,"223":6,"225":1,"226":1,"228":41,"229":7,"231":11,"232":3,"234":1,"239":3,"242":1,"243":1,"244":1,"246":12,"251":2,"253":1,"263":1,"264":3,"266":28,"267":28,"268":1,"269":1,"272":26,"273":21,"275":3,"276":4,"278":1,"279":1,"280":2,"282":25,"283":3,"285":1,"287":9,"290":1,"291":9,"292":3,"294":3,"298":3}}],["millisecond",{"2":{"134":1,"222":1,"272":1}}],["middleware",{"0":{"123":1,"124":1,"125":1,"126":1,"145":1},"1":{"124":1,"125":1,"126":1},"2":{"115":1,"137":1,"155":1,"158":1,"178":1,"199":1,"224":1,"229":3,"232":1,"241":1,"261":2}}],["missing",{"2":{"84":2,"165":1,"207":1,"214":1,"241":1}}],["microservice",{"2":{"63":1,"226":1,"250":1}}],["minute",{"2":{"229":1,"240":3,"297":1}}],["minutes",{"2":{"15":1,"25":1}}],["min",{"2":{"228":2}}],["minlength",{"2":{"204":1}}],["minimum",{"2":{"159":1,"204":2,"205":1,"220":1}}],["minimal",{"2":{"13":2,"14":1,"157":1,"258":1}}],["min=0",{"2":{"118":1}}],["min=1",{"2":{"118":2}}],["mimetype",{"2":{"76":1,"77":3,"79":1,"80":4,"159":1,"183":1,"184":1,"186":1,"187":1,"188":1,"190":1,"191":1,"192":1,"193":2,"195":1,"196":1,"197":2,"228":1,"272":1,"282":1}}],["mime",{"2":{"2":1,"79":1,"189":1,"282":1}}],["myapp",{"2":{"102":1}}],["myhooks",{"2":{"22":1,"142":1}}],["my",{"2":{"8":1,"22":1,"46":1,"141":1,"146":1,"148":1,"267":1}}],["monolithic",{"2":{"264":1}}],["monitor",{"2":{"129":1,"272":3}}],["monitorprocess",{"2":{"99":2}}],["monitoring",{"0":{"53":1},"1":{"54":1,"55":1},"2":{"249":2,"270":2,"280":1}}],["more",{"2":{"5":1,"18":2,"24":1,"115":1,"155":1,"158":1,"199":1,"245":1}}],["most",{"2":{"5":2,"23":1,"148":1,"279":1}}],["mode",{"2":{"184":1}}],["modeling",{"2":{"166":1}}],["modelcontextprotocol",{"2":{"29":1,"292":1}}],["models",{"2":{"12":1}}],["model",{"2":{"1":1,"12":1,"15":1}}],["module",{"2":{"34":1}}],["mod",{"2":{"26":1}}],["modify",{"2":{"2":1,"131":1}}],["machine",{"2":{"171":1}}],["macos",{"2":{"28":1,"282":1,"286":1}}],["making",{"2":{"58":1}}],["makes",{"2":{"9":1,"15":1,"157":1}}],["make",{"2":{"7":1,"9":1,"13":1,"47":1,"72":2,"81":1,"85":1,"88":1,"92":1,"99":1,"104":1,"107":2,"108":1,"114":1,"115":1,"121":2,"125":1,"135":2,"137":1,"153":1,"168":1,"240":2,"254":1,"283":1,"295":1,"297":1,"298":1}}],["max",{"2":{"228":1}}],["maximum",{"2":{"204":2,"220":2}}],["maxidleconnsperhost",{"2":{"102":1}}],["maxidleconns",{"2":{"102":1}}],["max=150",{"2":{"118":1}}],["max=100",{"2":{"118":1}}],["maxsize",{"2":{"104":6}}],["maxlength",{"2":{"204":1}}],["maxlen",{"2":{"79":3}}],["maxdelay",{"2":{"51":4}}],["maxretries+1",{"2":{"51":1,"69":1}}],["maxretries",{"2":{"51":4,"69":3}}],["maybe",{"2":{"50":3}}],["may",{"2":{"50":1}}],["matrix",{"0":{"113":1}}],["mathematical",{"2":{"266":1}}],["math",{"2":{"40":1,"51":1}}],["matchstring",{"2":{"77":1,"214":1}}],["match",{"2":{"36":1}}],["map",{"2":{"9":2,"30":1,"31":1,"41":1,"42":1,"45":1,"50":1,"52":1,"60":1,"68":1,"72":5,"80":2,"81":2,"83":2,"84":4,"85":4,"87":2,"88":5,"89":2,"92":2,"102":1,"107":2,"108":2,"110":1,"111":2,"114":10,"118":1,"121":4,"125":2,"128":4,"131":1,"132":2,"134":1,"135":4,"159":1,"168":4,"176":1,"177":2,"184":1,"187":2,"191":1,"193":1,"198":1,"204":4,"207":1,"210":1,"211":3,"217":2,"218":1,"220":1,"222":1,"232":1,"239":1,"240":4,"266":1,"267":1,"272":7,"276":1,"287":1,"297":1}}],["managedstdioclient",{"2":{"99":7}}],["managedclient",{"2":{"47":5}}],["manager",{"2":{"67":2,"92":2,"171":2}}],["management",{"0":{"9":1,"52":1,"67":1,"92":1,"99":1,"120":1,"237":1,"277":1,"295":1,"298":1},"1":{"121":1,"122":1,"238":1,"239":1,"240":1,"241":1},"2":{"8":1,"9":2,"37":1,"43":1,"115":1,"153":1,"156":1,"277":1,"285":1}}],["managing",{"2":{"37":1,"59":1,"280":1}}],["manually",{"2":{"30":1}}],["manner",{"2":{"2":1,"179":1}}],["marshal",{"2":{"117":2,"122":2,"159":1,"184":1,"186":1,"187":1,"191":1,"193":1,"195":1,"196":1,"210":2,"211":2,"213":2,"217":2,"222":2}}],["marshaling",{"2":{"8":1}}],["market",{"2":{"171":1}}],["mark",{"2":{"55":1}}],["mark3labs",{"2":{"15":1,"16":2,"26":3,"30":2,"31":2,"40":2,"60":2,"67":2,"76":2,"97":3,"117":2,"141":1,"159":2,"165":2,"187":2,"228":2,"246":3,"266":3,"272":2,"282":2,"283":2,"287":1}}],["markdown",{"2":{"2":1,"21":1,"181":1,"183":2,"197":1}}],["maintainability",{"2":{"165":1}}],["maintaining",{"2":{"12":1}}],["maintenancetools",{"2":{"132":2}}],["maintenance",{"2":{"132":1}}],["main",{"2":{"2":1,"16":2,"17":2,"26":4,"28":1,"29":1,"30":3,"31":2,"40":3,"60":3,"89":1,"97":2,"117":2,"122":1,"137":1,"141":2,"148":1,"149":1,"150":1,"152":1,"153":1,"154":1,"159":2,"165":1,"171":1,"181":1,"183":2,"197":1,"209":1,"228":2,"229":1,"232":1,"246":2,"254":1,"266":2,"267":1,"272":2,"273":1,"282":2,"283":2,"286":1,"287":3,"289":4,"290":1,"291":1,"292":1,"295":1}}],["cmd",{"2":{"290":1}}],["cmd=",{"2":{"290":1}}],["cpu",{"2":{"257":1,"272":3}}],["city",{"2":{"193":2}}],["cf",{"2":{"114":10}}],["certain",{"2":{"69":1,"223":1}}],["c",{"2":{"30":5,"31":4,"40":4,"41":2,"42":1,"45":7,"46":2,"47":6,"50":14,"51":2,"52":4,"54":3,"60":9,"67":6,"68":2,"69":2,"72":9,"76":2,"77":7,"79":5,"80":6,"81":2,"83":5,"84":3,"85":4,"87":5,"88":2,"89":7,"91":2,"92":5,"97":4,"98":6,"101":4,"102":3,"103":3,"104":8,"106":6,"108":2,"110":4,"153":3,"168":2,"240":1,"272":1,"283":3,"287":5,"295":3}}],["cd",{"2":{"26":1}}],["ctx",{"2":{"7":2,"9":2,"16":1,"26":1,"30":4,"31":3,"45":6,"46":2,"47":7,"50":13,"51":6,"52":4,"54":7,"55":7,"60":8,"67":5,"68":2,"69":4,"71":7,"72":6,"76":2,"77":7,"79":5,"80":6,"81":2,"83":5,"84":3,"85":4,"87":5,"88":4,"89":7,"91":3,"92":6,"97":3,"98":2,"99":8,"101":3,"102":2,"103":2,"104":2,"106":4,"107":11,"108":6,"110":4,"111":10,"117":1,"118":1,"122":4,"124":6,"125":3,"126":5,"131":2,"132":1,"134":2,"137":2,"153":4,"159":3,"165":1,"166":2,"168":1,"170":1,"171":1,"173":2,"174":2,"176":1,"177":1,"183":1,"184":1,"186":1,"187":2,"188":1,"190":1,"191":1,"192":1,"193":1,"195":2,"196":4,"198":2,"208":1,"209":1,"210":4,"211":2,"213":1,"216":1,"217":1,"218":1,"219":1,"222":3,"228":4,"229":10,"239":2,"241":2,"246":1,"266":4,"267":7,"272":11,"275":2,"276":3,"277":1,"282":2,"283":2,"287":4,"291":1,"294":6,"298":3}}],["cutting",{"2":{"123":1}}],["customer",{"2":{"170":4}}],["customnotifier",{"2":{"135":7}}],["customize",{"2":{"22":1}}],["custom",{"0":{"102":1,"119":1,"129":1,"134":1,"135":1,"146":1,"151":1,"232":1,"287":1},"2":{"7":1,"40":1,"41":4,"42":3,"46":1,"119":1,"127":1,"134":1,"151":2,"214":1,"232":5,"275":1,"276":1}}],["currentmetrics",{"2":{"272":3}}],["current",{"2":{"2":1,"159":2,"184":1,"188":2,"267":1,"272":3,"277":1,"282":1}}],["crud",{"2":{"229":1}}],["crucial",{"2":{"7":1,"43":1}}],["critical",{"2":{"173":1,"205":1}}],["critique",{"2":{"173":1}}],["criteria",{"2":{"130":1,"177":3}}],["crashing",{"2":{"145":1}}],["crashes",{"2":{"145":1}}],["crashed",{"2":{"98":1}}],["cross",{"2":{"123":1}}],["crypto",{"2":{"97":1}}],["creating",{"0":{"38":1,"140":1},"1":{"39":1,"40":1,"41":1,"42":1,"141":1,"142":1},"2":{"25":1,"37":1,"59":1,"158":2}}],["creative",{"2":{"4":1}}],["creation",{"0":{"40":1,"41":1,"42":1,"141":1},"2":{"3":1,"44":1,"45":2,"57":1,"209":1}}],["create|os",{"2":{"291":1}}],["createfiletool",{"2":{"209":2}}],["created",{"2":{"118":2,"209":1,"228":2}}],["createdat",{"2":{"118":4,"228":2,"240":2}}],["createclient",{"2":{"114":2}}],["createcustomstreamablehttpclient",{"2":{"102":1}}],["createinprocessclient",{"2":{"110":1}}],["createauthenticatedstreamablehttpclient",{"2":{"103":1}}],["creates",{"2":{"140":1,"231":1}}],["createsessionawaretool",{"2":{"122":2}}],["createsession",{"2":{"121":1,"122":1,"240":1}}],["createsseclient",{"2":{"42":1,"106":1}}],["createstreamablehttpclient",{"2":{"41":1,"101":1}}],["createstdioclientwithenv",{"2":{"40":1}}],["createstdioclient",{"2":{"40":1,"97":1}}],["create",{"2":{"3":4,"15":1,"16":2,"18":2,"26":1,"30":2,"31":1,"32":2,"40":3,"41":1,"55":2,"60":2,"62":1,"63":1,"64":1,"65":1,"92":1,"97":1,"101":1,"102":1,"103":1,"106":1,"110":2,"114":1,"117":1,"118":3,"131":1,"137":3,"139":1,"141":1,"149":1,"150":1,"155":1,"159":1,"160":1,"163":1,"174":1,"181":1,"196":1,"199":1,"202":1,"209":5,"211":2,"224":1,"228":4,"232":1,"246":1,"266":2,"267":2,"287":1}}],["claims",{"2":{"241":9}}],["clarity",{"2":{"165":1,"176":1}}],["claude",{"0":{"28":1,"286":1},"2":{"28":8,"286":5}}],["closing",{"2":{"45":1,"50":1}}],["closed",{"2":{"154":1}}],["closeerr",{"2":{"45":3}}],["close",{"2":{"30":1,"31":1,"44":1,"45":1,"47":3,"50":2,"55":3,"60":1,"67":2,"97":1,"99":4,"101":1,"102":1,"103":1,"104":2,"106":1,"107":3,"110":1,"111":3,"114":1,"135":1,"188":1,"210":1,"211":1,"253":1,"266":1,"287":1,"291":1,"298":1}}],["closes",{"2":{"9":1}}],["cleanupexpiredsessions",{"2":{"240":2}}],["cleanupuserresources",{"2":{"129":1}}],["cleanup",{"2":{"8":1,"9":3,"44":1,"45":2,"129":1,"132":1,"240":3}}],["clean",{"2":{"6":1,"13":1,"282":7}}],["clear",{"2":{"4":1,"176":1}}],["clireq",{"2":{"113":2}}],["clientoption",{"2":{"114":1}}],["clientfactory",{"2":{"114":7}}],["clientip",{"2":{"229":2}}],["clientid",{"2":{"103":1}}],["clientinfo",{"2":{"46":2,"266":1,"267":1,"287":1,"289":1,"290":1}}],["clienthealthmonitor",{"2":{"54":6}}],["clienttype",{"2":{"47":3,"67":3,"72":3}}],["clientcapabilities",{"2":{"46":1,"266":1,"267":1,"287":1}}],["client",{"0":{"7":1,"30":1,"31":1,"35":1,"37":1,"39":1,"40":1,"41":1,"42":1,"43":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"72":1,"74":1,"94":1,"96":1,"97":1,"100":1,"101":1,"102":1,"105":1,"106":1,"107":1,"109":1,"110":1,"111":1,"114":1,"284":1,"287":1},"1":{"31":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":2,"45":2,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"62":1,"63":1,"64":1,"65":1,"67":1,"68":1,"69":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"95":1,"96":1,"97":2,"98":2,"99":2,"100":1,"101":2,"102":2,"103":2,"104":2,"105":1,"106":2,"107":2,"108":2,"109":1,"110":2,"111":2,"112":1,"113":1,"114":1,"285":1,"286":1,"287":1},"2":{"5":1,"7":5,"9":7,"23":1,"25":1,"30":3,"31":5,"32":1,"38":2,"39":12,"40":10,"41":6,"42":3,"43":1,"44":1,"45":7,"46":3,"47":14,"48":1,"50":16,"51":5,"52":4,"54":7,"55":25,"56":2,"57":1,"58":1,"59":5,"60":6,"62":3,"63":3,"64":4,"65":3,"67":13,"68":5,"69":4,"71":3,"72":10,"73":5,"76":3,"77":6,"79":4,"80":6,"81":2,"83":4,"84":2,"85":4,"87":4,"88":7,"89":6,"91":5,"92":11,"93":3,"94":1,"95":1,"97":4,"98":2,"99":20,"101":3,"102":4,"103":5,"104":14,"106":3,"107":23,"108":5,"110":3,"111":8,"114":11,"133":1,"138":1,"148":1,"153":2,"178":1,"211":3,"242":1,"243":1,"245":2,"246":1,"253":3,"266":4,"267":5,"268":1,"269":1,"275":1,"276":2,"277":1,"278":1,"287":4}}],["clientsession",{"2":{"122":2,"153":2}}],["clientsecret",{"2":{"103":1}}],["clientstdiocli",{"2":{"95":1}}],["clients",{"0":{"38":1,"57":1},"1":{"39":1,"40":1,"41":1,"42":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1},"2":{"0":1,"5":2,"7":2,"9":2,"30":1,"35":2,"37":1,"57":1,"58":1,"72":5,"74":1,"96":1,"100":1,"104":5,"105":1,"109":1,"120":1,"134":1,"138":1,"144":1,"150":1,"157":1,"178":1,"197":1,"225":1,"242":1,"244":1,"268":1,"269":1,"273":1,"277":1,"278":1}}],["cli",{"2":{"5":1,"113":2,"148":1,"280":1,"283":1}}],["chunk",{"2":{"298":1}}],["chunksize",{"2":{"298":2}}],["chunks",{"2":{"298":1}}],["ch",{"2":{"135":6}}],["chm",{"2":{"54":13}}],["chat",{"2":{"71":1,"249":1,"270":1,"273":1}}],["channel",{"2":{"135":2,"273":1}}],["chan",{"2":{"47":2,"92":1,"99":2,"104":2,"107":3,"135":3,"137":1,"153":1,"254":1,"283":1,"295":1}}],["characteristics",{"2":{"2":1,"3":1,"4":1,"7":2,"95":1,"244":1}}],["choosing",{"0":{"247":1},"1":{"248":1,"249":1,"250":1,"251":1}}],["choose",{"2":{"8":1,"94":1,"113":1,"152":1,"243":1,"246":1}}],["choice",{"2":{"38":1}}],["checkhealth",{"2":{"54":2}}],["checks",{"0":{"54":1}}],["check",{"2":{"3":1,"18":1,"24":1,"34":1,"35":1,"36":1,"50":1,"54":2,"55":1,"81":1,"84":1,"91":1,"107":1,"122":1,"195":1,"222":1,"229":1,"231":1,"272":1,"277":1,"282":2,"294":1,"298":1}}],["categories",{"2":{"220":2}}],["catches",{"2":{"145":1}}],["cause",{"2":{"177":1}}],["capability",{"2":{"144":1}}],["capabilities",{"0":{"144":1},"2":{"9":1,"44":1,"46":4,"60":1,"142":1,"144":3,"159":1,"200":1,"231":2,"243":1,"264":1,"266":1,"267":1,"277":1,"287":1,"289":1,"290":1}}],["cachemutex",{"2":{"297":3}}],["cachedresourcehandler",{"2":{"198":2}}],["cached",{"2":{"81":2,"226":1,"229":3,"250":1}}],["cacheentry",{"2":{"81":4,"198":3,"297":2}}],["cache",{"2":{"81":6,"91":2,"198":4,"229":2,"239":1,"297":1}}],["caching",{"0":{"81":1,"198":1},"2":{"5":1,"149":1,"184":1,"198":1,"226":2,"229":1,"245":1}}],["caseprosconsstdiocli",{"2":{"245":1}}],["case",{"2":{"8":3,"47":8,"50":7,"51":2,"54":2,"67":3,"68":3,"69":2,"72":2,"84":6,"91":6,"92":2,"94":1,"98":3,"99":4,"104":2,"107":5,"108":2,"113":4,"114":3,"117":4,"135":2,"152":2,"159":1,"165":4,"166":3,"170":2,"171":3,"173":4,"174":2,"176":3,"177":3,"208":4,"209":3,"222":1,"232":4,"243":1,"246":2,"253":3,"254":1,"266":4,"267":2,"272":4,"282":4,"294":1,"298":1}}],["cases",{"0":{"226":1,"264":1,"270":1,"280":1},"2":{"2":1,"3":1,"4":1,"7":2,"18":1,"24":1,"176":1,"248":1,"249":1,"250":1,"251":1}}],["called",{"2":{"291":1}}],["callbacks",{"2":{"127":1}}],["calling",{"0":{"82":1,"83":1},"1":{"83":1,"84":1,"85":1}}],["call",{"2":{"20":1,"30":2,"31":1,"52":4,"60":2,"68":1,"71":1,"83":3,"84":1,"85":6,"111":1,"124":3,"188":1,"231":2,"234":2,"287":1,"289":2,"290":2}}],["calltoolsbatch",{"2":{"85":2}}],["calltoolwithvalidation",{"2":{"84":1}}],["calltoolwithretry",{"2":{"51":1,"69":1}}],["calltoolparams",{"2":{"30":1,"266":1,"267":1,"287":1}}],["calltoolresult",{"2":{"9":1,"16":1,"26":1,"51":2,"55":1,"69":1,"72":1,"83":1,"84":1,"85":1,"99":1,"104":1,"107":1,"110":1,"111":2,"117":1,"118":1,"122":1,"124":1,"125":1,"126":1,"134":1,"159":1,"208":1,"209":1,"210":1,"211":1,"213":1,"216":1,"217":1,"218":2,"219":2,"222":1,"228":3,"229":2,"239":1,"246":1,"266":1,"267":2,"272":2,"276":1,"282":1,"291":1,"294":1,"298":1}}],["calltoolrequestparams",{"2":{"31":1,"45":1,"50":1,"52":2,"60":1,"68":1,"71":1,"72":1,"83":1,"98":1,"110":1,"111":1}}],["calltoolrequest",{"2":{"9":1,"16":1,"26":1,"30":1,"31":1,"45":1,"50":1,"51":1,"52":2,"55":1,"60":1,"68":1,"69":1,"71":1,"72":1,"83":1,"98":1,"99":1,"104":1,"107":1,"110":2,"111":2,"117":1,"118":1,"122":1,"124":1,"125":1,"126":1,"134":1,"159":1,"207":1,"208":1,"209":1,"210":1,"211":1,"213":1,"216":1,"217":1,"218":1,"219":1,"222":1,"228":3,"229":2,"239":1,"246":1,"266":2,"267":3,"272":2,"276":1,"282":1,"287":1,"291":1,"294":1,"298":1}}],["calltool",{"2":{"7":1,"30":1,"31":1,"45":1,"50":1,"51":1,"52":2,"55":3,"60":1,"68":1,"69":1,"71":1,"72":2,"83":3,"84":1,"85":1,"98":1,"99":2,"104":2,"107":2,"110":1,"111":3,"266":1,"267":1,"287":1}}],["callsyesno",{"2":{"95":1}}],["calls",{"0":{"36":1},"2":{"3":1,"18":1,"71":1,"85":6,"128":1,"144":1,"200":1,"206":1,"292":1}}],["calctool",{"2":{"3":1}}],["calculator",{"2":{"266":3}}],["calculatortool",{"2":{"20":1}}],["calculation",{"2":{"3":1,"208":1}}],["calculations",{"2":{"3":1,"18":1,"266":1}}],["calculateoutput",{"2":{"117":2}}],["calculateinput",{"2":{"117":2}}],["calculate",{"2":{"3":2,"20":1,"51":1,"85":1,"117":1,"202":1,"266":2,"267":1}}],["cannot",{"2":{"213":1}}],["cancelled",{"2":{"52":1,"91":1}}],["cancellation",{"2":{"51":1,"52":1,"222":1,"272":1,"294":1,"298":1}}],["canceled",{"2":{"52":1}}],["cancelfunc",{"2":{"47":1,"67":1,"92":1,"99":1,"107":1,"108":1}}],["cancel",{"2":{"47":5,"50":4,"52":5,"54":2,"67":6,"92":5,"99":6,"107":5,"108":5,"137":2,"196":2,"210":2,"283":2,"294":2}}],["can",{"2":{"2":3,"3":1,"4":2,"9":1,"18":1,"20":1,"21":1,"29":1,"30":1,"78":1,"82":1,"144":6,"161":1,"162":1,"170":1,"180":1,"189":1,"193":1,"200":1,"219":1,"275":1,"277":1,"280":1,"292":1}}],["collectsystemmetrics",{"2":{"272":3}}],["collect",{"2":{"272":1}}],["collectmetrics",{"2":{"232":1}}],["collaborative",{"2":{"249":2,"270":2,"273":1}}],["columns",{"2":{"166":2}}],["count",{"2":{"204":1,"207":2,"210":1,"214":2,"272":7,"282":1}}],["could",{"2":{"173":1}}],["covering",{"2":{"165":1}}],["covers",{"2":{"57":1,"156":1}}],["correlations",{"2":{"89":1}}],["core",{"0":{"0":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"2":{"1":1}}],["coordinate",{"2":{"7":1}}],["codereviewprompt",{"2":{"165":2}}],["codereviewmessages",{"2":{"89":2}}],["code",{"0":{"165":1},"2":{"4":6,"8":1,"14":1,"17":1,"89":7,"163":4,"165":13,"171":1,"211":1,"236":1,"246":1}}],["com",{"2":{"15":1,"16":2,"26":3,"30":2,"31":2,"40":2,"60":2,"67":2,"76":2,"97":3,"102":1,"103":1,"117":2,"119":1,"141":1,"159":2,"165":2,"187":2,"188":1,"228":7,"241":1,"246":3,"266":3,"272":2,"282":2,"283":2,"287":1}}],["comparison",{"0":{"245":1,"256":1,"257":1}}],["compare",{"2":{"174":3}}],["compatibility",{"2":{"207":1}}],["component",{"2":{"264":1}}],["components",{"2":{"137":1,"282":1}}],["composition",{"2":{"7":1}}],["compile",{"2":{"77":1,"116":1}}],["comprehensive",{"0":{"50":1,"128":1},"2":{"165":1,"166":1,"229":1,"283":1}}],["completed",{"2":{"52":2,"124":2,"134":1,"216":1,"222":1,"229":2,"290":1}}],["complete",{"0":{"45":1,"137":1},"2":{"13":2,"47":1,"60":1,"159":1}}],["complexin",{"2":{"245":1}}],["complexity",{"2":{"6":1,"113":4,"176":1,"177":1}}],["complex",{"0":{"118":1},"2":{"5":1,"18":1,"24":1,"162":1}}],["computations",{"2":{"3":1,"200":1}}],["communication",{"2":{"8":1,"98":1,"105":1,"109":1,"225":1,"244":1,"269":1,"270":1,"276":1,"280":1,"285":1,"299":1}}],["communicates",{"2":{"38":1}}],["communicate",{"2":{"5":1,"96":1,"100":1}}],["common",{"0":{"33":1,"66":1,"195":1},"1":{"34":1,"35":1,"36":1,"67":1,"68":1,"69":1},"2":{"5":2,"23":1,"80":1,"148":1,"279":1}}],["command",{"0":{"289":1},"2":{"3":1,"28":1,"35":1,"39":2,"45":1,"47":1,"62":2,"67":1,"114":3,"244":1,"248":1,"262":1,"279":1,"280":1,"286":1,"289":1}}],["commands",{"2":{"3":1}}],["conditions",{"2":{"223":1}}],["conditional",{"0":{"176":1,"223":1}}],["conditionally",{"2":{"130":1}}],["conducting",{"2":{"170":1}}],["convenient",{"2":{"206":1}}],["conventions",{"2":{"165":1}}],["conversation",{"2":{"170":2}}],["conversations",{"0":{"170":1},"2":{"4":1,"161":1}}],["convert",{"2":{"3":1,"210":1}}],["concise",{"2":{"173":1}}],["concerns`",{"2":{"166":1}}],["concerns",{"2":{"123":1}}],["concepts",{"0":{"0":1,"19":1},"1":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"20":1,"21":1,"22":1},"2":{"0":1,"1":1,"93":1,"138":1,"159":1,"176":1,"242":1}}],["concurrently",{"2":{"254":1}}],["concurrent",{"2":{"9":2,"85":1,"150":1}}],["connectivity",{"2":{"35":1}}],["connections",{"2":{"12":1,"17":1,"44":1,"62":1,"275":1}}],["connection",{"0":{"35":1,"53":1,"55":1,"67":1,"104":1},"1":{"54":1,"55":1},"2":{"8":1,"9":1,"28":1,"30":2,"44":1,"46":1,"49":3,"50":3,"60":1,"67":1,"68":1,"97":1,"99":3,"107":2,"258":1,"287":1,"297":1}}],["connected",{"2":{"9":1,"46":1,"107":2,"153":1,"273":1,"277":1}}],["connects",{"2":{"9":1,"30":1}}],["connect",{"0":{"285":1},"2":{"7":1,"9":1,"30":1,"57":1,"58":1,"107":2,"285":1}}],["contrast",{"2":{"174":1}}],["controlled",{"2":{"12":1}}],["control",{"2":{"6":1,"12":1,"157":1}}],["contains",{"2":{"119":1,"209":1,"228":2,"282":1}}],["continuewithtoolresult",{"2":{"71":1}}],["continue",{"2":{"45":1,"79":1,"170":1}}],["contents",{"2":{"79":2,"80":6,"183":1,"184":1,"187":1,"188":1,"190":1,"192":1,"193":1,"195":1,"196":1,"282":1}}],["content",{"0":{"189":1,"190":1,"191":1,"192":1,"193":1,"218":1},"1":{"190":1,"191":1,"192":1,"193":1},"2":{"2":1,"3":2,"4":1,"30":4,"60":3,"78":1,"79":8,"80":14,"83":5,"87":1,"88":3,"111":1,"119":2,"144":1,"159":1,"161":1,"165":1,"166":1,"168":2,"170":6,"171":3,"173":5,"174":11,"176":1,"177":5,"180":1,"182":1,"183":2,"189":1,"190":3,"193":1,"209":9,"218":2,"219":2,"232":2,"234":1,"235":1,"266":3,"267":3,"282":4,"297":2}}],["contextfilter",{"2":{"132":3}}],["context",{"0":{"52":1,"132":1},"2":{"1":1,"4":1,"9":2,"12":1,"15":1,"16":3,"26":3,"30":2,"31":2,"40":1,"45":3,"46":2,"47":5,"50":10,"51":5,"52":6,"54":5,"55":4,"60":4,"67":6,"68":2,"69":2,"71":3,"72":5,"76":3,"77":6,"79":4,"80":6,"81":2,"83":4,"84":2,"85":4,"87":4,"88":4,"89":6,"91":2,"92":5,"97":2,"98":1,"99":7,"101":1,"102":1,"103":1,"104":2,"106":1,"107":9,"108":5,"110":3,"111":9,"117":3,"118":2,"122":6,"124":4,"125":2,"126":5,"130":1,"131":2,"132":2,"134":2,"137":2,"153":8,"159":7,"161":1,"162":1,"165":3,"166":2,"168":2,"170":2,"171":8,"173":2,"174":2,"176":2,"177":2,"183":2,"184":2,"186":2,"187":3,"188":2,"190":2,"191":2,"192":2,"193":2,"195":2,"196":6,"198":2,"208":2,"209":2,"210":3,"211":2,"213":2,"216":2,"217":2,"218":2,"219":2,"222":2,"228":9,"229":8,"239":2,"241":3,"246":3,"266":4,"267":7,"272":8,"275":6,"276":4,"282":5,"283":3,"287":2,"291":2,"294":5,"298":2}}],["considerations",{"0":{"255":1,"259":1},"1":{"256":1,"257":1,"258":1,"260":1,"261":1}}],["considerations`",{"2":{"177":1}}],["consider",{"2":{"222":1}}],["consistent",{"2":{"162":1}}],["const",{"2":{"298":1}}],["constants",{"2":{"98":1,"99":1}}],["constructive",{"2":{"170":1}}],["constructor",{"0":{"39":1}}],["constructors",{"2":{"38":1}}],["constraints",{"0":{"205":1},"2":{"3":1,"168":4,"201":1,"205":2,"213":1}}],["cons",{"2":{"5":3,"260":1}}],["configjson",{"2":{"159":2,"184":2}}],["configs",{"2":{"114":8}}],["configuring",{"2":{"158":1}}],["configurable",{"2":{"152":1}}],["configuration",{"0":{"102":1,"136":1,"143":1,"152":1,"184":1,"229":1,"252":1,"273":1,"274":1},"1":{"137":1,"144":1,"145":1,"146":1,"253":1,"254":1,"275":1},"2":{"2":1,"140":1,"159":2,"180":1,"184":3,"204":1,"267":3}}],["configured",{"2":{"275":1}}],["configure",{"2":{"28":1,"114":1,"139":1,"142":1,"151":1,"152":1,"160":1,"275":2,"286":1}}],["config",{"2":{"2":1,"28":3,"51":11,"102":1,"114":13,"159":3,"184":3,"197":2,"204":1,"207":4,"267":16,"286":2}}],["eof",{"2":{"298":1}}],["eliminating",{"2":{"263":1}}],["else",{"2":{"52":2,"77":2,"85":1,"89":2,"99":1,"107":1,"124":2,"154":1,"229":2,"295":1}}],["either",{"2":{"180":1}}],["editors",{"2":{"280":1}}],["edit",{"2":{"273":2}}],["editing",{"2":{"28":1,"249":1,"270":1,"273":1}}],["edge",{"2":{"176":1}}],["evaluate",{"2":{"177":2}}],["evaluation",{"2":{"177":1}}],["evidence",{"2":{"173":1}}],["everything",{"2":{"156":1}}],["event",{"0":{"108":1},"2":{"270":1,"276":1}}],["eventsourceyesyesin",{"2":{"95":1}}],["events",{"0":{"150":1},"2":{"5":1,"14":1,"23":1,"105":1,"151":1,"244":1,"269":1,"277":1}}],["equal",{"2":{"111":1}}],["echo",{"2":{"111":3,"246":3,"289":3,"290":5,"291":4}}],["escape",{"2":{"282":1}}],["establishes",{"2":{"46":1}}],["establish",{"2":{"44":1}}],["essential",{"2":{"0":1,"48":1}}],["empty",{"2":{"213":1}}],["embeddeddirect",{"2":{"95":1}}],["embedded",{"0":{"172":1,"267":1},"1":{"173":1,"174":1},"2":{"39":1,"65":1,"173":1,"242":1,"244":1,"251":2,"262":1,"263":1,"264":2,"267":5,"278":1,"299":1}}],["emailregex",{"2":{"214":2}}],["email",{"2":{"3":1,"118":9,"205":2,"214":3,"228":26}}],["e",{"2":{"17":1}}],["errchan",{"2":{"254":5}}],["errconnectionlost",{"2":{"49":1,"50":1,"51":1,"55":1,"68":1,"99":1,"107":1}}],["errconnectionfailed",{"2":{"49":1,"51":1,"55":1,"99":1,"107":1}}],["errserverclosed",{"2":{"154":1}}],["errforbidden",{"2":{"99":1,"103":1}}],["errunauthorized",{"2":{"99":1,"103":1}}],["errunsupportedversion",{"2":{"49":1,"50":1}}],["errbrokenpipe",{"2":{"98":2,"99":1}}],["errprocesstimeout",{"2":{"98":2,"99":1}}],["errprocessexited",{"2":{"98":2,"99":1}}],["errprotocolviolation",{"2":{"49":1,"50":1}}],["errpermissiondenied",{"2":{"49":1,"50":1}}],["errinvalidarguments",{"2":{"49":1,"50":1,"68":1,"69":1}}],["errinvalidresponse",{"2":{"49":1}}],["errresourcenotfound",{"2":{"49":1,"195":1}}],["errtoolnotfound",{"2":{"49":1,"50":1,"68":1,"69":1}}],["errtimeout",{"2":{"49":1,"50":1,"51":1}}],["err",{"2":{"16":6,"26":6,"30":12,"31":6,"39":1,"40":6,"41":3,"42":1,"45":15,"46":3,"47":8,"50":24,"51":8,"52":8,"54":4,"55":16,"60":21,"62":1,"67":7,"68":8,"69":7,"71":15,"72":7,"76":3,"77":15,"79":9,"80":15,"81":3,"83":9,"84":9,"85":2,"87":9,"88":6,"89":6,"91":9,"92":12,"97":9,"98":6,"99":21,"101":6,"102":3,"103":6,"106":9,"107":14,"108":3,"110":6,"111":4,"114":3,"117":3,"118":3,"119":2,"122":6,"124":8,"126":3,"128":4,"129":4,"137":6,"148":3,"149":3,"150":3,"151":6,"153":2,"154":4,"159":6,"166":3,"173":3,"174":3,"183":3,"184":3,"186":6,"187":6,"188":6,"191":3,"192":3,"195":7,"196":7,"198":3,"207":7,"208":9,"209":13,"210":12,"211":18,"213":9,"214":10,"217":3,"219":4,"222":4,"228":13,"229":15,"232":3,"239":3,"241":7,"246":3,"254":14,"266":9,"267":13,"272":11,"273":3,"276":3,"282":15,"283":6,"287":12,"291":6,"294":10,"295":3,"297":4,"298":8}}],["error=",{"2":{"124":2}}],["errorf",{"2":{"40":2,"45":3,"46":1,"47":2,"51":1,"55":3,"60":4,"67":2,"69":1,"71":1,"72":4,"76":1,"77":1,"79":1,"80":8,"83":1,"84":13,"87":1,"92":2,"99":2,"107":3,"114":4,"118":1,"122":2,"125":1,"126":2,"165":2,"166":1,"173":1,"174":1,"177":1,"183":1,"186":1,"187":2,"188":2,"195":4,"196":1,"214":3,"219":1,"228":7,"229":3,"241":1,"254":3,"266":1,"282":2,"294":5}}],["errors",{"2":{"8":1,"26":1,"40":1,"49":13,"50":11,"51":2,"52":2,"55":2,"67":1,"68":3,"69":3,"97":1,"98":7,"99":7,"103":2,"107":2,"116":1,"128":2,"129":1,"154":1,"159":1,"195":1,"196":1,"217":1,"219":4,"285":1,"294":1}}],["error",{"0":{"48":1,"49":1,"50":1,"68":1,"98":1,"154":1,"194":1,"195":1,"219":1,"236":1,"293":1,"294":1},"1":{"49":1,"50":1,"51":1,"52":1,"195":1,"196":1,"294":1,"295":1},"2":{"8":1,"9":1,"16":3,"26":3,"36":1,"37":1,"40":2,"43":1,"45":3,"46":1,"47":4,"48":1,"50":3,"51":8,"55":5,"60":1,"67":3,"68":2,"69":2,"71":2,"72":4,"73":1,"76":1,"77":4,"79":1,"80":3,"81":1,"83":1,"84":3,"85":6,"87":1,"88":2,"89":2,"92":6,"98":2,"99":7,"103":1,"104":1,"107":8,"108":1,"110":1,"111":5,"114":1,"117":1,"118":1,"122":1,"124":2,"125":1,"126":1,"128":2,"129":1,"134":1,"137":2,"145":1,"153":2,"154":4,"159":5,"165":1,"166":1,"168":1,"170":1,"171":1,"173":1,"174":1,"176":1,"177":1,"183":1,"184":1,"186":1,"187":1,"188":2,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"198":1,"207":2,"208":4,"209":4,"210":2,"211":3,"213":3,"214":4,"216":1,"217":1,"218":1,"219":6,"222":1,"228":7,"229":5,"232":1,"236":1,"239":2,"241":5,"246":1,"253":1,"254":5,"266":1,"267":4,"272":3,"276":1,"282":6,"283":4,"291":2,"294":3,"297":1,"298":1}}],["easy",{"2":{"15":1,"58":1,"157":1}}],["each",{"2":{"2":1,"9":1,"38":1,"73":1,"79":1,"95":1,"226":1,"239":1,"244":1,"262":1}}],["efficiency",{"2":{"165":1}}],["efficient",{"0":{"297":1},"2":{"13":1}}],["effectively",{"2":{"1":1,"220":1}}],["effective",{"2":{"0":1,"7":1}}],["etc",{"2":{"2":1,"18":1,"159":1,"186":1,"239":1,"254":1}}],["execution",{"2":{"129":1}}],["execute",{"2":{"71":1,"144":2,"210":1,"211":1}}],["ext",{"2":{"282":3}}],["extension",{"2":{"282":1}}],["extend",{"2":{"200":1}}],["external",{"2":{"1":1,"12":2,"188":2,"239":1}}],["extractpathfromuri",{"2":{"282":2}}],["extractuserfromtoken",{"2":{"239":1}}],["extractuseridfromuri",{"2":{"228":2}}],["extractuserid",{"2":{"186":2}}],["extractauthtoken",{"2":{"229":1}}],["extraction",{"0":{"207":1,"213":1},"2":{"206":1,"213":1}}],["extractlocation",{"2":{"188":1}}],["extracttoken",{"2":{"126":1}}],["extract",{"2":{"126":1,"165":1,"173":1,"186":2,"208":1,"210":1,"228":1,"229":1,"239":1,"241":1,"266":1,"267":1,"282":2}}],["excels",{"2":{"226":1,"280":1}}],["exceeded",{"2":{"125":1,"229":1}}],["exclusivemaximum",{"2":{"205":1}}],["exchange",{"2":{"44":1}}],["exchanges",{"2":{"9":1,"46":1}}],["exit",{"2":{"282":1,"283":2,"295":3}}],["exited",{"2":{"98":2}}],["exist",{"2":{"294":1}}],["exists",{"2":{"72":2,"81":2,"84":4,"121":2,"122":2,"125":2,"131":4,"135":4,"168":6,"176":2,"177":4,"198":2,"240":2,"294":1,"297":2}}],["existing",{"2":{"50":1,"55":1,"225":1,"226":1,"250":1,"264":1}}],["expiresat",{"2":{"240":5}}],["explanation",{"2":{"176":2}}],["explain",{"2":{"176":1}}],["exploratory",{"2":{"89":1,"166":3}}],["explore",{"2":{"18":1,"32":1,"56":1,"73":1,"115":1,"160":1,"173":1,"178":1,"199":1,"224":1,"262":1,"268":1,"278":1,"299":1}}],["expensive",{"2":{"198":1}}],["expert",{"2":{"171":1}}],["expertise",{"2":{"171":9}}],["experience",{"2":{"171":1}}],["experienced",{"2":{"171":1}}],["expected",{"2":{"3":1,"4":1,"80":2,"84":6,"177":3}}],["exposure",{"2":{"260":1}}],["exposing",{"2":{"158":1,"224":1}}],["exposes",{"2":{"7":1}}],["expose",{"2":{"2":1,"7":1,"18":1,"21":1,"32":1,"130":1,"155":1,"157":1,"179":1,"183":1,"184":1,"187":1,"226":1}}],["exponential",{"0":{"51":1},"2":{"51":1,"69":1}}],["examples",{"2":{"18":2,"24":1,"77":1,"113":1,"176":2,"228":1,"272":1,"282":1}}],["example",{"0":{"30":1,"31":1,"45":1,"60":1,"159":1,"246":1},"1":{"31":1},"2":{"2":1,"3":1,"4":1,"7":2,"45":1,"50":2,"51":1,"60":2,"68":1,"83":1,"92":1,"98":1,"102":1,"103":1,"210":1,"226":1,"228":5,"229":1,"241":1,"248":1,"249":1,"250":1,"251":1,"254":1,"261":1,"264":1,"267":1,"270":1,"273":1,"280":1,"283":1}}],["engines",{"2":{"251":1,"264":2}}],["engineer",{"2":{"171":2}}],["ensuring",{"2":{"201":1}}],["ensures",{"2":{"154":1,"194":1}}],["ensureconnected",{"2":{"55":3}}],["ensure",{"2":{"34":1,"45":1,"119":1,"176":1,"282":2}}],["encodetostring",{"2":{"192":1}}],["encoded",{"2":{"192":2}}],["encode",{"2":{"192":1,"232":2}}],["encodings",{"2":{"209":1}}],["encoding",{"2":{"3":1,"76":1,"117":1,"159":1,"187":1,"209":5}}],["entries",{"2":{"159":1}}],["entry",{"2":{"81":3,"198":3,"297":3}}],["endpoint",{"2":{"275":1}}],["endpoints",{"0":{"230":1,"231":1,"232":1},"1":{"231":1,"232":1,"233":1,"234":1,"235":1,"236":1},"2":{"2":1,"3":1,"179":1,"226":1,"231":1,"232":3,"250":1,"275":3}}],["ended",{"2":{"122":1,"128":2}}],["env",{"2":{"40":2,"132":2,"286":1}}],["environments",{"2":{"64":1,"270":1}}],["environment",{"0":{"152":1,"253":1},"2":{"40":1,"114":1,"132":3,"152":2,"177":3,"246":1}}],["enums",{"0":{"205":1}}],["enum",{"2":{"3":1,"20":1,"165":1,"202":1,"205":2,"209":1,"266":1}}],["enabled",{"2":{"204":2,"207":4,"213":3,"214":4}}],["enables",{"2":{"12":1,"263":1,"269":1,"276":1}}],["enable",{"2":{"1":1,"142":3,"144":2}}],["fprintf",{"2":{"282":1}}],["f",{"2":{"131":4,"132":3}}],["flexible",{"0":{"168":1},"2":{"185":1}}],["fl",{"2":{"119":2}}],["float64",{"2":{"51":3,"84":2,"117":4,"125":1,"208":1,"266":1}}],["fallback",{"2":{"113":1}}],["false",{"2":{"16":1,"26":1,"51":1,"54":1,"55":1,"81":1,"102":1,"113":6,"119":2,"131":1,"137":1,"159":1,"207":1,"214":1,"229":1,"240":1,"282":3,"287":1,"289":1,"290":1,"297":1}}],["factors",{"2":{"113":1}}],["factory",{"0":{"114":1},"2":{"55":5,"104":4,"114":5}}],["fail",{"2":{"254":1}}],["failure",{"2":{"219":1}}],["failing",{"0":{"36":1}}],["failed",{"0":{"35":1},"2":{"40":2,"41":1,"45":4,"46":1,"47":1,"49":1,"50":3,"51":2,"52":2,"54":1,"55":3,"60":4,"67":1,"69":2,"71":1,"72":2,"76":1,"79":3,"80":2,"83":3,"84":2,"87":3,"89":2,"91":3,"92":3,"98":3,"99":2,"107":1,"117":1,"118":1,"122":1,"124":2,"129":1,"166":1,"173":1,"174":1,"183":1,"188":1,"195":1,"209":1,"210":3,"211":4,"213":1,"217":1,"219":1,"222":1,"228":2,"229":2,"254":4,"272":2,"276":1,"282":2,"294":2,"295":1}}],["fatalf",{"2":{"41":1,"154":1}}],["fatal",{"2":{"30":4,"31":2,"60":3,"97":3,"101":2,"102":1,"103":1,"106":3,"110":2,"114":1,"148":1,"149":1,"150":1,"151":2,"228":1,"229":1,"232":1,"266":3,"267":2,"272":1,"273":1,"287":4,"291":1,"297":1}}],["fastestsame",{"2":{"245":1}}],["fast",{"2":{"13":2,"264":1}}],["fmt",{"2":{"16":3,"26":3,"30":4,"31":2,"40":3,"45":3,"46":1,"47":2,"51":1,"55":3,"60":13,"67":3,"69":1,"71":1,"72":4,"76":5,"77":3,"79":7,"80":8,"83":6,"84":13,"85":3,"87":10,"89":3,"91":2,"92":2,"97":1,"99":2,"107":3,"113":3,"114":4,"117":2,"118":1,"122":3,"125":1,"126":2,"129":2,"134":1,"159":4,"165":5,"166":4,"168":1,"170":2,"171":3,"173":3,"174":4,"176":4,"177":3,"183":1,"186":1,"187":4,"188":3,"193":1,"195":4,"196":1,"208":2,"209":3,"210":3,"211":5,"213":1,"214":3,"217":1,"218":1,"219":1,"222":2,"228":13,"229":3,"239":1,"241":1,"246":5,"254":3,"266":4,"267":4,"272":6,"282":7,"283":3,"291":1,"294":7,"295":3}}],["frameworks",{"2":{"264":1}}],["frequently",{"2":{"297":1}}],["frequency",{"2":{"251":1}}],["fresh",{"2":{"198":1}}],["free",{"2":{"44":1}}],["freed",{"2":{"9":1}}],["from",{"2":{"28":1,"72":1,"81":1,"126":1,"144":1,"145":1,"156":1,"161":1,"166":1,"173":1,"174":2,"183":1,"186":3,"187":1,"206":1,"210":1,"228":1,"239":2,"241":1,"266":1,"267":1,"272":2,"275":1,"276":1,"282":2,"289":1}}],["friendlyhttp",{"2":{"245":1}}],["friendly",{"2":{"5":1,"269":1,"294":1}}],["feasibility",{"2":{"177":1}}],["feature",{"2":{"166":1,"171":1,"177":7,"204":1}}],["featured",{"2":{"144":1}}],["features",{"0":{"14":1,"115":1},"1":{"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1},"2":{"9":1,"32":2,"56":1,"93":1,"115":1,"137":1,"144":1,"155":1,"156":1,"157":1,"158":1,"160":1,"178":1,"184":1,"199":1,"224":1,"268":2}}],["feedback",{"2":{"170":1}}],["few",{"2":{"14":1,"15":1}}],["fetchfreshdata",{"2":{"198":1}}],["fetchdatawithcontext",{"2":{"196":1}}],["fetchdataset",{"2":{"166":1}}],["fetchresourcedata",{"2":{"195":1}}],["fetchresource",{"2":{"173":1,"174":1}}],["fetch",{"2":{"2":1,"166":2,"173":2,"174":2,"186":1,"195":1,"196":1,"198":1}}],["further",{"2":{"166":1}}],["full",{"2":{"6":1,"13":1,"14":1,"24":1,"104":1,"135":2,"144":1,"157":1}}],["function",{"2":{"107":1,"140":1,"144":1,"200":1,"206":1,"254":1,"275":1,"290":1}}],["functions",{"2":{"20":1,"36":1,"80":1,"214":1,"228":2,"229":1,"272":1,"273":1,"282":1,"283":1}}],["functionality",{"2":{"3":1,"7":2,"58":1,"82":1,"155":2,"158":1,"199":1,"200":1,"226":1,"264":1,"267":1}}],["func",{"2":{"9":3,"16":2,"26":2,"30":1,"31":1,"40":2,"41":1,"42":1,"45":3,"46":1,"47":4,"50":4,"51":6,"52":3,"54":4,"55":7,"60":2,"67":2,"68":1,"69":1,"71":2,"72":4,"76":1,"77":3,"79":3,"80":3,"81":4,"83":2,"84":3,"85":3,"87":2,"88":4,"89":4,"91":6,"92":11,"97":1,"98":1,"99":6,"101":1,"102":1,"103":2,"104":6,"106":2,"107":8,"108":17,"110":2,"111":9,"113":2,"114":6,"117":2,"118":1,"119":2,"121":4,"122":5,"124":5,"125":4,"126":3,"128":7,"129":3,"131":3,"132":2,"134":1,"135":5,"137":3,"141":1,"148":1,"149":1,"150":1,"152":1,"153":6,"154":1,"159":4,"165":2,"166":1,"168":3,"170":1,"171":1,"173":1,"174":1,"176":2,"177":1,"183":2,"184":1,"186":2,"187":1,"188":1,"190":1,"191":1,"192":1,"193":1,"195":1,"196":1,"197":1,"198":1,"208":1,"209":2,"210":2,"211":1,"213":1,"214":2,"216":1,"217":1,"218":1,"219":1,"222":1,"223":1,"228":11,"229":13,"232":4,"239":2,"240":4,"241":5,"246":2,"253":2,"254":4,"266":2,"267":6,"272":6,"273":3,"275":1,"276":1,"282":7,"283":9,"287":1,"291":2,"294":1,"295":4,"297":2,"298":1}}],["fundamentals",{"0":{"1":1,"162":1,"180":1,"201":1},"1":{"2":1,"3":1,"4":1,"5":1,"163":1,"181":1,"202":1},"2":{"37":1}}],["fundamental",{"2":{"0":1,"93":1,"138":1,"242":1}}],["field",{"2":{"119":1}}],["fieldlevel",{"2":{"119":1}}],["find",{"2":{"77":2}}],["filters",{"2":{"228":1,"273":2}}],["filter",{"2":{"220":1}}],["filtertools",{"2":{"131":1,"132":1}}],["filtering",{"0":{"130":1,"131":1,"132":1},"1":{"131":1,"132":1}}],["filtered",{"0":{"77":1},"2":{"77":8,"131":4,"132":4}}],["filecache",{"2":{"297":2}}],["file2",{"2":{"282":1}}],["file1",{"2":{"282":1}}],["fileoperationinput",{"2":{"119":1}}],["filepath",{"2":{"119":4,"282":4}}],["filetool",{"2":{"3":1}}],["file",{"0":{"183":1,"209":1},"2":{"2":2,"3":5,"7":1,"17":1,"18":1,"21":1,"28":1,"34":1,"183":3,"209":10,"248":1,"280":1,"282":15,"286":1,"298":3}}],["filesystem",{"2":{"183":1}}],["files",{"2":{"2":2,"3":1,"18":1,"21":1,"179":1,"180":1,"183":1,"282":8,"287":1,"289":1,"290":1,"298":1}}],["fixed",{"2":{"180":1,"182":1}}],["fix",{"2":{"50":1}}],["first",{"0":{"16":1,"27":1},"1":{"28":1,"29":1},"2":{"15":1,"25":1,"79":1,"81":1,"160":1,"202":1,"229":1,"266":2,"267":1}}],["fit",{"2":{"5":1,"243":1}}],["following",{"2":{"165":1,"173":1,"174":2}}],["foundation",{"2":{"140":1}}],["found",{"2":{"45":1,"49":2,"50":2,"68":1,"72":1,"77":2,"81":2,"84":1,"165":1,"186":1,"187":1,"195":2,"228":2,"241":1}}],["four",{"2":{"1":1}}],["focusareas",{"2":{"166":3}}],["focus",{"2":{"4":2,"8":1,"14":1,"89":2,"165":10,"166":2}}],["forbidden",{"2":{"99":1}}],["forconnectionreal",{"2":{"95":1}}],["formatted",{"2":{"88":3}}],["formatforllm",{"2":{"88":1}}],["format",{"2":{"45":1,"60":1,"83":1,"159":6,"186":1,"195":2,"214":2,"228":1}}],["for",{"0":{"111":1},"2":{"0":1,"4":2,"5":3,"7":1,"12":1,"13":1,"14":1,"18":3,"24":1,"28":1,"29":1,"30":2,"31":1,"35":2,"36":1,"38":1,"39":4,"43":1,"45":1,"47":2,"48":1,"50":4,"51":2,"54":1,"55":1,"58":1,"60":2,"62":1,"63":1,"64":1,"65":1,"69":1,"71":2,"72":2,"76":1,"77":2,"79":2,"80":1,"83":2,"84":3,"85":3,"86":1,"87":3,"88":1,"90":1,"91":1,"92":5,"94":1,"95":2,"98":1,"99":1,"104":1,"106":2,"107":3,"108":2,"125":1,"127":1,"129":1,"131":4,"132":1,"133":1,"134":1,"135":1,"137":1,"147":1,"148":2,"149":1,"150":2,"154":1,"159":4,"162":1,"163":1,"165":2,"166":1,"168":1,"174":3,"176":2,"177":1,"180":1,"185":1,"186":1,"187":1,"188":1,"197":2,"198":1,"206":1,"207":2,"209":1,"210":1,"211":1,"213":1,"219":3,"222":4,"225":2,"228":1,"229":1,"239":1,"240":2,"242":1,"244":5,"248":2,"249":1,"250":1,"251":1,"254":2,"263":1,"264":1,"267":2,"268":1,"269":1,"270":1,"272":6,"273":1,"275":3,"277":1,"278":1,"279":1,"280":1,"282":6,"283":1,"285":1,"287":1,"292":1,"294":2,"295":1,"297":1,"298":2}}],["image",{"2":{"192":1}}],["imagedata",{"2":{"192":2}}],["impact",{"2":{"177":1}}],["improvements",{"2":{"165":2}}],["important",{"2":{"174":1}}],["import",{"2":{"16":1,"26":1,"30":1,"31":1,"40":1,"60":1,"67":1,"76":1,"97":1,"117":1,"119":1,"141":1,"159":1,"165":1,"187":1,"228":1,"246":1,"266":1,"272":1,"282":1,"283":1,"287":1}}],["implementing",{"0":{"161":1,"179":1,"200":1},"1":{"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1},"2":{"178":1}}],["implement",{"2":{"68":1,"127":1,"197":1,"198":1,"199":1,"261":1}}],["implementations",{"2":{"57":1,"58":1,"59":1,"73":1,"94":1,"95":1,"251":1,"280":1}}],["implementation",{"0":{"227":1,"265":1,"271":1,"281":1},"1":{"228":1,"229":1,"266":1,"267":1,"272":1,"273":1,"282":1,"283":1},"2":{"13":1,"177":1,"228":4,"229":5,"254":1,"266":1,"267":1,"272":1,"273":1,"277":1,"282":1,"283":6,"287":1}}],["implements",{"2":{"0":1}}],["io",{"2":{"188":1,"211":1,"298":1}}],["i++",{"2":{"104":1,"134":1,"222":1,"272":1}}],["i+1",{"2":{"79":1,"83":1,"85":1,"87":1,"92":1,"134":1,"174":2,"222":1,"272":1}}],["i",{"2":{"79":1,"83":1,"85":3,"87":1,"88":2,"92":2,"104":2,"134":3,"168":2,"170":3,"174":2,"222":2,"272":4}}],["icon",{"2":{"28":1}}],["if=operation",{"2":{"119":1}}],["if",{"2":{"16":2,"26":2,"30":5,"31":2,"40":2,"41":1,"45":6,"46":1,"47":2,"50":6,"51":5,"52":4,"54":1,"55":9,"60":11,"67":2,"68":1,"69":3,"71":5,"72":3,"76":2,"77":7,"79":6,"80":11,"81":3,"83":4,"84":16,"85":1,"87":5,"88":2,"89":2,"91":5,"92":6,"97":3,"98":4,"99":8,"101":2,"102":1,"103":1,"106":3,"107":8,"108":1,"110":2,"114":7,"117":2,"118":1,"119":2,"122":4,"124":2,"125":2,"126":2,"128":2,"129":3,"131":4,"132":3,"135":2,"137":2,"148":1,"149":1,"150":1,"151":2,"152":1,"154":2,"159":4,"165":3,"166":2,"168":6,"171":2,"173":1,"174":2,"176":3,"177":2,"183":1,"184":1,"186":3,"187":3,"188":2,"191":1,"192":1,"195":5,"196":3,"198":3,"207":2,"208":4,"209":5,"210":5,"211":8,"213":5,"214":5,"217":1,"219":3,"222":1,"223":1,"228":9,"229":8,"232":1,"239":1,"240":2,"241":5,"246":2,"253":1,"254":3,"266":6,"267":6,"272":5,"273":1,"276":2,"277":1,"282":12,"283":2,"287":4,"291":2,"294":6,"295":3,"297":2,"298":3}}],["item",{"2":{"222":1,"266":1,"267":1}}],["items",{"2":{"173":2,"204":2,"220":1,"272":1}}],["it",{"2":{"12":1,"15":1,"17":1,"58":1,"92":1,"157":1,"231":1}}],["ide",{"2":{"280":1}}],["ideal",{"2":{"270":1}}],["ides",{"2":{"248":1,"280":1}}],["identified",{"2":{"180":1}}],["identifier",{"2":{"2":1,"181":1}}],["identify",{"2":{"166":1}}],["idleconntimeout",{"2":{"102":1}}],["id",{"2":{"2":1,"71":1,"103":1,"118":5,"122":4,"153":4,"186":4,"187":5,"197":1,"223":1,"228":21,"234":1,"235":1,"236":2,"240":5,"241":1,"273":1,"289":3,"290":4}}],["inherits",{"2":{"260":1}}],["infrastructure",{"2":{"225":1,"226":1,"250":1}}],["info",{"2":{"46":1,"286":1}}],["information",{"2":{"2":1,"146":1,"166":1,"174":1,"186":1,"197":1,"218":1,"219":1,"223":1,"228":1,"239":1,"241":1}}],["incorporates",{"2":{"174":1}}],["increment",{"2":{"128":8}}],["including",{"0":{"173":1},"2":{"13":1,"37":1,"166":2}}],["includeexamples",{"2":{"176":2}}],["include",{"2":{"4":1,"161":1,"176":4}}],["inprocess",{"2":{"113":1,"253":1}}],["inprocessclient",{"2":{"111":1,"267":1}}],["inputs",{"2":{"260":1}}],["inputschema",{"2":{"50":1,"84":1}}],["input",{"2":{"3":1,"4":1,"5":1,"45":2,"50":1,"60":2,"83":2,"96":1,"110":5,"111":5,"117":13,"118":7,"148":1,"165":1,"219":1,"228":1,"244":1,"246":1,"279":1}}],["invalidate",{"2":{"91":1}}],["invalid",{"2":{"49":2,"50":1,"68":1,"77":1,"84":1,"122":1,"126":1,"131":1,"195":1,"209":2,"214":2,"219":1,"228":1,"229":1,"236":1,"241":3,"282":2,"294":1}}],["invoked",{"2":{"4":1,"82":1,"162":1}}],["invoke",{"2":{"3":1,"200":1,"280":1}}],["index",{"2":{"85":2,"272":4}}],["independent",{"2":{"9":1,"226":1,"239":1}}],["indicating",{"2":{"28":1}}],["initiated",{"2":{"270":1}}],["initialdelay",{"2":{"51":3}}],["initialization",{"0":{"46":1},"2":{"37":1,"44":1,"45":2,"46":2,"47":3,"289":1}}],["initializeuserresources",{"2":{"129":1}}],["initializewithrequest",{"2":{"46":1}}],["initializerequestparams",{"2":{"46":1,"266":1,"267":1,"287":1}}],["initializerequest",{"2":{"46":1,"266":1,"267":1,"287":1}}],["initializeclientwithdetails",{"2":{"46":1}}],["initialize",{"2":{"9":1,"30":2,"31":2,"45":1,"46":1,"47":2,"50":1,"55":3,"60":2,"67":3,"71":1,"72":2,"97":2,"99":1,"101":2,"102":1,"103":1,"106":2,"107":1,"110":2,"111":3,"122":1,"129":1,"137":1,"231":2,"266":2,"267":2,"287":2,"289":1,"290":2}}],["initrequest",{"2":{"60":1,"97":1}}],["initreq",{"2":{"46":2}}],["init",{"2":{"26":1,"119":1,"297":1}}],["inspect",{"2":{"292":1}}],["inspector",{"0":{"29":1,"292":1},"2":{"29":5,"36":1,"292":5}}],["instructions",{"2":{"161":1,"162":1,"165":6,"166":8,"173":7}}],["instead",{"2":{"145":1,"298":1}}],["instance",{"2":{"140":1}}],["instantiate",{"2":{"44":1}}],["installed",{"2":{"34":1}}],["install",{"2":{"28":1,"29":2,"292":2}}],["installation",{"0":{"15":1}}],["insufficient",{"2":{"122":1}}],["insecureskipverify",{"2":{"102":1}}],["insights",{"2":{"4":1,"166":1,"174":1}}],["into",{"2":{"58":1,"298":1}}],["int",{"2":{"51":1,"69":1,"79":1,"85":1,"104":2,"118":1,"125":2,"132":1,"207":2,"213":1,"214":1,"228":3,"272":1}}],["intuitive",{"2":{"13":1}}],["introduction",{"0":{"11":1},"1":{"12":1,"13":1,"14":1,"15":1}}],["integer",{"2":{"84":2,"204":2}}],["integrate",{"2":{"58":1}}],["integrations",{"2":{"7":1,"65":1,"148":1,"248":1,"250":1,"251":1,"264":1,"279":1}}],["integration",{"0":{"70":1,"71":1,"174":1,"267":1,"284":1,"286":1,"287":1,"292":1},"1":{"71":1,"72":1,"285":1,"286":1,"287":1},"2":{"5":1,"7":1,"62":1,"178":1,"225":1,"226":2,"243":1,"244":1,"250":1,"262":1,"263":2,"264":1}}],["internally",{"2":{"267":1}}],["internal",{"2":{"267":1}}],["intermediate",{"2":{"176":1}}],["interview",{"2":{"170":3}}],["interval",{"2":{"54":5,"275":1}}],["interrupt",{"2":{"137":1,"153":1,"283":1,"295":1}}],["interfaces",{"2":{"32":1,"64":1,"249":2,"270":3}}],["interface",{"2":{"9":1,"14":1,"29":1,"30":1,"31":1,"45":1,"50":1,"52":1,"60":1,"68":1,"72":1,"80":2,"83":2,"84":5,"85":4,"87":2,"88":5,"89":2,"110":1,"111":2,"114":2,"121":2,"134":1,"135":2,"159":1,"168":5,"174":1,"176":1,"177":1,"184":1,"187":1,"191":1,"193":1,"210":2,"211":3,"217":2,"218":1,"222":1,"232":1,"239":1,"240":2,"241":1,"266":1,"267":2,"272":7,"276":1,"287":1,"292":1}}],["interactive",{"0":{"290":1},"2":{"199":1,"290":1}}],["interactively",{"2":{"29":1,"292":1}}],["interactions",{"2":{"18":1,"63":1,"86":1,"162":1,"201":1,"225":1,"226":1,"244":1,"250":1}}],["interaction",{"2":{"4":1,"155":1,"158":1,"161":1,"199":1,"224":1}}],["interact",{"2":{"1":1,"12":1,"57":1,"74":1,"201":1}}],["in",{"0":{"65":1,"109":1,"110":1,"111":1,"251":1,"263":1,"266":1},"1":{"110":1,"111":1,"264":1,"265":1,"266":1,"267":1,"268":1},"2":{"2":1,"13":1,"14":1,"15":2,"23":1,"24":1,"25":1,"34":1,"36":1,"39":1,"47":1,"51":1,"52":1,"65":1,"69":1,"73":1,"80":4,"106":1,"109":2,"110":1,"111":1,"118":1,"132":1,"137":1,"145":1,"153":1,"162":1,"171":4,"173":1,"176":2,"179":1,"180":1,"196":1,"205":1,"226":1,"229":2,"241":1,"242":1,"244":1,"253":2,"256":1,"257":1,"258":1,"261":1,"262":2,"263":1,"264":1,"266":1,"267":2,"272":1,"278":1,"280":1,"282":1,"286":1,"295":1,"298":1,"299":1}}],["isabs",{"2":{"282":1}}],["isautherror",{"2":{"103":1}}],["isvalidpath",{"2":{"282":3,"294":1}}],["isvalidemail",{"2":{"228":2}}],["isvaliduri",{"2":{"195":1}}],["iserror",{"2":{"219":1}}],["isselectquery",{"2":{"210":2}}],["issensitivetool",{"2":{"129":1}}],["issues",{"0":{"33":1},"1":{"34":1,"35":1,"36":1},"2":{"4":1,"159":3,"163":1,"165":1,"166":2,"292":1}}],["isprocesserror",{"2":{"99":2}}],["isconnectionerror",{"2":{"55":2,"107":2}}],["ishealthy",{"2":{"54":1}}],["isretryable",{"2":{"51":2}}],["isnotexist",{"2":{"294":1}}],["isn",{"2":{"34":1}}],["isolation",{"2":{"9":2,"260":1}}],["is",{"0":{"12":1},"2":{"0":1,"7":1,"12":1,"13":1,"17":1,"35":1,"43":1,"48":1,"50":7,"51":1,"52":2,"55":2,"68":3,"69":2,"95":1,"98":3,"99":3,"103":2,"107":3,"118":1,"119":1,"140":1,"154":1,"165":1,"190":1,"195":1,"196":1,"204":1,"226":1,"228":1,"236":1,"239":1,"244":1,"264":1,"270":1,"279":1,"294":2}}]],"serializationVersion":2}
